<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.timelineelement" c_name="GESTimelineElement" python_name="GES.TimelineElement">GES.TimelineElement</h2>

<p>The GESTimelineElement base class implements the notion of timing as well
as priority. A GESTimelineElement can have a parent object which will be
responsible for controlling its timing properties.</p>

<p><h3 id='NsyHMa' class='subsection'><u>GObject properties:</u></h3>
<h3 id="ges.timelineelement-duration" c_name="GES.TimelineElement-duration" python_name="GES.TimelineElement-duration">GES.TimelineElement-duration</h3></p>

<p>The duration (in nanoseconds) which will be used in the container</p>

<h3 id="ges.timelineelement-in-point" c_name="GES.TimelineElement-in-point" python_name="GES.TimelineElement-in-point">GES.TimelineElement-in-point</h3>

<p>The in-point at which this <a href="#ges.timelineelement">GES.TimelineElement</a> will start outputting data
from its contents (in nanoseconds).</p>

<p>Ex : an in-point of 5 seconds means that the first outputted buffer will
be the one located 5 seconds in the controlled resource.</p>

<h3 id="ges.timelineelement-max-duration" c_name="GES.TimelineElement-max-duration" python_name="GES.TimelineElement-max-duration">GES.TimelineElement-max-duration</h3>

<p>The maximum duration (in nanoseconds) of the <a href="#ges.timelineelement">GES.TimelineElement</a>.</p>

<h3 id="ges.timelineelement-name" c_name="GES.TimelineElement-name" python_name="GES.TimelineElement-name">GES.TimelineElement-name</h3>

<p>The name of the object</p>

<h3 id="ges.timelineelement-parent" c_name="GES.TimelineElement-parent" python_name="GES.TimelineElement-parent">GES.TimelineElement-parent</h3>

<p>The parent container of the object</p>

<h3 id="ges.timelineelement-priority" c_name="GES.TimelineElement-priority" python_name="GES.TimelineElement-priority">GES.TimelineElement-priority</h3>

<p>The priority of the object.</p>

<h3 id="ges.timelineelement-serialize" c_name="GES.TimelineElement-serialize" python_name="GES.TimelineElement-serialize">GES.TimelineElement-serialize</h3>

<p>Whether the element should be serialized.</p>

<h3 id="ges.timelineelement-start" c_name="GES.TimelineElement-start" python_name="GES.TimelineElement-start">GES.TimelineElement-start</h3>

<p>The position of the object in its container (in nanoseconds).</p>

<h3 id="ges.timelineelement-timeline" c_name="GES.TimelineElement-timeline" python_name="GES.TimelineElement-timeline">GES.TimelineElement-timeline</h3>

<p>The timeline in which @element is</p>

<h3 id='dALPGV' class='subsection'><u>Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.copy" c_name="ges_timeline_element_copy" python_name="GES.TimelineElement.copy">GES.TimelineElement.copy</h3>
<pre><code class="highlight c"><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">ges_timeline_element_copy</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                               <span class="n">gboolean</span> <span class="n">deep</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">copy</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">deep</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_copy()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to copy</p>

<p><em>deep</em>: whether we want to create the elements <strong>self</strong> contains or not</p>

<p><em>Returns</em>: The newly create <a href="#ges.timelineelement">GES.TimelineElement</a>, copied from <strong>self</strong></p>

<div class='prototype_end'></div>

<p>Copies <strong>self</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_duration" c_name="ges_timeline_element_get_duration" python_name="GES.TimelineElement.get_duration">GES.TimelineElement.get_duration</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_timeline_element_get_duration</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_duration()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: The @duration of <strong>self</strong></p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_inpoint" c_name="ges_timeline_element_get_inpoint" python_name="GES.TimelineElement.get_inpoint">GES.TimelineElement.get_inpoint</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_timeline_element_get_inpoint</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_inpoint</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_inpoint()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: The @inpoint of <strong>self</strong></p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_max_duration" c_name="ges_timeline_element_get_max_duration" python_name="GES.TimelineElement.get_max_duration">GES.TimelineElement.get_max_duration</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_timeline_element_get_max_duration</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_max_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_max_duration()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: The @maxduration of <strong>self</strong></p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_name" c_name="ges_timeline_element_get_name" python_name="GES.TimelineElement.get_name">GES.TimelineElement.get_name</h3>
<pre><code class="highlight c"><span class="n">gchar</span><span class="o">*</span> <span class="n">ges_timeline_element_get_name</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_name()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: The name of <strong>self</strong></p>

<div class='prototype_end'></div>

<p>Returns a copy of the name of <strong>self</strong>.
Caller should <a href="https://developer.gnome.org/glib/unstable//glib-Memory-Allocation.html#g-free">g_free</a> the return value after usage.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_parent" c_name="ges_timeline_element_get_parent" python_name="GES.TimelineElement.get_parent">GES.TimelineElement.get_parent</h3>
<pre><code class="highlight c"><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">ges_timeline_element_get_parent</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_parent</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_parent()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: parent of <strong>self</strong>, this can be <strong>NULL</strong> if <strong>self</strong>
  has no parent. unref after usage.</p>

<div class='prototype_end'></div>

<p>Returns the parent of <strong>self</strong>. This function increases the refcount
of the parent object so you should <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html#gst-object-unref">gst_object_unref</a> it after usage.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_priority" c_name="ges_timeline_element_get_priority" python_name="GES.TimelineElement.get_priority">GES.TimelineElement.get_priority</h3>
<pre><code class="highlight c"><span class="n">guint32</span> <span class="n">ges_timeline_element_get_priority</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">guint32</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_priority()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: The @priority of <strong>self</strong></p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_start" c_name="ges_timeline_element_get_start" python_name="GES.TimelineElement.get_start">GES.TimelineElement.get_start</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_timeline_element_get_start</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_start</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_start()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: The @start of <strong>self</strong></p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_timeline" c_name="ges_timeline_element_get_timeline" python_name="GES.TimelineElement.get_timeline">GES.TimelineElement.get_timeline</h3>
<pre><code class="highlight c"><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">ges_timeline_element_get_timeline</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_timeline</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_timeline()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: timeline of <strong>self</strong>, this can be <strong>NULL</strong> if <strong>self</strong>
  has no timeline. unref after usage.</p>

<div class='prototype_end'></div>

<p>Returns the timeline of <strong>self</strong>. This function increases the refcount
of the timeline so you should <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html#gst-object-unref">gst_object_unref</a> it after usage.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_toplevel_parent" c_name="ges_timeline_element_get_toplevel_parent" python_name="GES.TimelineElement.get_toplevel_parent">GES.TimelineElement.get_toplevel_parent</h3>
<pre><code class="highlight c"><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">ges_timeline_element_get_toplevel_parent</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_toplevel_parent</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_toplevel_parent()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to get the toplevel parent from</p>

<p><em>Returns</em>: The toplevel controlling parent of <strong>self</strong></p>

<div class='prototype_end'></div>

<p>Gets the toplevel <a href="#ges.timelineelement">GES.TimelineElement</a> controlling <strong>self</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.ripple" c_name="ges_timeline_element_ripple" python_name="GES.TimelineElement.ripple">GES.TimelineElement.ripple</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_ripple</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                      <span class="n">GstClockTime</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">ripple</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_ripple()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to ripple.</p>

<p><em>start</em>: The new start of <strong>self</strong> in ripple mode.</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been rippled properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in ripple mode. It allows you to modify the
start of <strong>self</strong> and move the following neighbours accordingly.
This will change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.ripple_end" c_name="ges_timeline_element_ripple_end" python_name="GES.TimelineElement.ripple_end">GES.TimelineElement.ripple_end</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_ripple_end</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                          <span class="n">GstClockTime</span> <span class="n">end</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">ripple_end</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_ripple_end()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to ripple.</p>

<p><em>end</em>: The new end (start + duration) of <strong>self</strong> in ripple mode. It will
      basically only change the duration of <strong>self</strong>.</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been rippled properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in ripple mode. It allows you to modify the
duration of a <strong>self</strong> and move the following neighbours accordingly.
This will change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.roll_end" c_name="ges_timeline_element_roll_end" python_name="GES.TimelineElement.roll_end">GES.TimelineElement.roll_end</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_roll_end</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                        <span class="n">GstClockTime</span> <span class="n">end</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">roll_end</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_roll_end()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to roll.</p>

<p><em>end</em>: The new end (start + duration) of <strong>self</strong> in roll mode</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been rolled properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in roll mode. It allows you to modify the
duration of a <strong>self</strong> and trim (basicly change the start + inpoint
in this case) the following neighbours accordingly.
This will not change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.roll_start" c_name="ges_timeline_element_roll_start" python_name="GES.TimelineElement.roll_start">GES.TimelineElement.roll_start</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_roll_start</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                          <span class="n">GstClockTime</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">roll_start</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_roll_start()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to roll</p>

<p><em>start</em>: The new start of <strong>self</strong> in roll mode, it will also adapat
the in-point of <strong>self</strong> according</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been roll properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in roll mode. It allows you to modify the
start and inpoint of a <strong>self</strong> and &ldquo;resize&rdquo; (basicly change the duration
in this case) of the previous neighbours accordingly.
This will not change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_duration" c_name="ges_timeline_element_set_duration" python_name="GES.TimelineElement.set_duration">GES.TimelineElement.set_duration</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_duration</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                        <span class="n">GstClockTime</span> <span class="n">duration</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">duration</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_duration()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>duration</em>: the duration in <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstClock.html#GstClockTime">Gst.ClockTime</a></p>

<div class='prototype_end'></div>

<p>Set the duration of the object</p>

<p>Note that if the timeline snap-distance property of the timeline containing
<strong>self</strong> is set, <strong>self</strong> will properly snap to its neighboors.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_inpoint" c_name="ges_timeline_element_set_inpoint" python_name="GES.TimelineElement.set_inpoint">GES.TimelineElement.set_inpoint</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_inpoint</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                       <span class="n">GstClockTime</span> <span class="n">inpoint</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_inpoint</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">inpoint</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_inpoint()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>inpoint</em>: the in-point in <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstClock.html#GstClockTime">Gst.ClockTime</a></p>

<div class='prototype_end'></div>

<p>Set the in-point, that is the moment at which the <strong>self</strong> will start
outputting data from its contents.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_max_duration" c_name="ges_timeline_element_set_max_duration" python_name="GES.TimelineElement.set_max_duration">GES.TimelineElement.set_max_duration</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_max_duration</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                            <span class="n">GstClockTime</span> <span class="n">maxduration</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_max_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">maxduration</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_max_duration()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>maxduration</em>: the maximum duration in <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstClock.html#GstClockTime">Gst.ClockTime</a></p>

<div class='prototype_end'></div>

<p>Set the maximun duration of the object</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_name" c_name="ges_timeline_element_set_name" python_name="GES.TimelineElement.set_name">GES.TimelineElement.set_name</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_set_name</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                        <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">name</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_name</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_name()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>name</em>: The name <strong>self</strong> should take (if avalaible&lt;)</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<p>Sets the name of object, or gives <strong>self</strong> a guaranteed unique name (if name is NULL).
This function makes a copy of the provided name, so the caller retains ownership
of the name it sent.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_parent" c_name="ges_timeline_element_set_parent" python_name="GES.TimelineElement.set_parent">GES.TimelineElement.set_parent</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_set_parent</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                          <span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">parent</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_parent</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_parent()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>parent</em>: new parent of self</p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>parent</strong> could be set or <strong>FALSE</strong> when <strong>self</strong>
already had a parent or <strong>self</strong> and <strong>parent</strong> are the same.</p>

<div class='prototype_end'></div>

<p>Sets the parent of <strong>self</strong> to <strong>parent</strong>. The object&rsquo;s reference count will
be incremented, and any floating reference will be removed (see <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html#gst-object-ref-sink">gst_object_ref_sink</a>).</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_priority" c_name="ges_timeline_element_set_priority" python_name="GES.TimelineElement.set_priority">GES.TimelineElement.set_priority</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_priority</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                        <span class="n">guint32</span> <span class="n">priority</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">guint32</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">priority</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_priority()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>priority</em>: the priority</p>

<div class='prototype_end'></div>

<p>Sets the priority of the object within the containing layer</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_start" c_name="ges_timeline_element_set_start" python_name="GES.TimelineElement.set_start">GES.TimelineElement.set_start</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_start</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                     <span class="n">GstClockTime</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_start</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_start()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>start</em>: the position in <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstClock.html#GstClockTime">Gst.ClockTime</a></p>

<div class='prototype_end'></div>

<p>Set the position of the object in its containing layer</p>

<p>Note that if the timeline snap-distance property of the timeline containing
<strong>self</strong> is set, <strong>self</strong> will properly snap to its neighboors.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_timeline" c_name="ges_timeline_element_set_timeline" python_name="GES.TimelineElement.set_timeline">GES.TimelineElement.set_timeline</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_set_timeline</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                            <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_timeline</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_timeline()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a> <strong>self</strong> is in</p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>timeline</strong> could be set or <strong>FALSE</strong> when <strong>timeline</strong>
already had a timeline.</p>

<div class='prototype_end'></div>

<p>Sets the timeline of <strong>self</strong> to <strong>timeline</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.trim" c_name="ges_timeline_element_trim" python_name="GES.TimelineElement.trim">GES.TimelineElement.trim</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_trim</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                    <span class="n">GstClockTime</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">trim</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_trim()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to trim.</p>

<p><em>start</em>: The new start of <strong>self</strong> in trim mode, will adapt the inpoint
of <strong>self</strong> accordingly</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been trimmed properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in trim mode. It allows you to modify the
inpoint and start of <strong>self</strong>.
This will not change the overall timeline duration.</p>

<p>Note that to trim the end of an self you can just set its duration. The same way
as this method, it will take into account the snapping-distance property of the
timeline in which <strong>self</strong> is.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_child_property_by_pspec" c_name="ges_timeline_element_get_child_property_by_pspec" python_name="GES.TimelineElement.get_child_property_by_pspec">GES.TimelineElement.get_child_property_by_pspec</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_get_child_property_by_pspec</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                       <span class="n">GParamSpec</span><span class="o">*</span> <span class="n">pspec</span><span class="p">,</span>
                                                       <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_child_property_by_pspec</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pspec</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_child_property_by_pspec()</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>pspec</em>: FIXME empty description</p>

<p><em>value</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_child_property_valist" c_name="ges_timeline_element_get_child_property_valist">GES.TimelineElement.get_child_property_valist</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_get_child_property_valist</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                     <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                                     <span class="kt">va_list</span> <span class="n">var_args</span><span class="p">);</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> parent object</p>

<p><em>first_property_name</em>: The name of the first property to get</p>

<p><em>var_args</em>: value for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<div class='prototype_end'></div>

<p>Gets a property of a child of <strong>self</strong>. If there are various child elements
that have the same property name, you can distinguish them using the following
syntax: &lsquo;ClasseName::property_name&rsquo; as property name. If you don&rsquo;t, the
corresponding property of the first element found will be set.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_child_property" c_name="ges_timeline_element_set_child_property" python_name="GES.TimelineElement.set_child_property">GES.TimelineElement.set_child_property</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_set_child_property</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                  <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">property_name</span><span class="p">,</span>
                                                  <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_child_property</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">property_name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_child_property()</span>

</code></pre>

<p><em>self</em>: The origin <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>property_name</em>: The name of the property</p>

<p><em>value</em>: the value</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the property was set, <strong>FALSE</strong> otherwize</p>

<div class='prototype_end'></div>

<p>Sets a property of a child of <strong>self</strong></p>

<p>Note that (FIXME broken link)ges_timeline_element_set_child_property is really
intended for language bindings, (FIXME broken link)ges_timeline_element_set_child_properties
is much more convenient for C programming.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.remove_child_property" c_name="ges_timeline_element_remove_child_property" python_name="GES.TimelineElement.remove_child_property">GES.TimelineElement.remove_child_property</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_remove_child_property</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                     <span class="n">GParamSpec</span><span class="o">*</span> <span class="n">pspec</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_child_property</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pspec</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_remove_child_property()</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>pspec</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_child_property_by_pspec" c_name="ges_timeline_element_set_child_property_by_pspec" python_name="GES.TimelineElement.set_child_property_by_pspec">GES.TimelineElement.set_child_property_by_pspec</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_child_property_by_pspec</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                       <span class="n">GParamSpec</span><span class="o">*</span> <span class="n">pspec</span><span class="p">,</span>
                                                       <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_child_property_by_pspec</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pspec</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_set_child_property_by_pspec()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>pspec</em>: The <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a> that specifies the property you want to set</p>

<p><em>value</em>: the value</p>

<div class='prototype_end'></div>

<p>Sets a property of a child of <strong>self</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_child_property_valist" c_name="ges_timeline_element_set_child_property_valist">GES.TimelineElement.set_child_property_valist</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_child_property_valist</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                     <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                                     <span class="kt">va_list</span> <span class="n">var_args</span><span class="p">);</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> parent object</p>

<p><em>first_property_name</em>: The name of the first property to set</p>

<p><em>var_args</em>: value for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<div class='prototype_end'></div>

<p>Sets a property of a child of <strong>self</strong>. If there are various child elements
that have the same property name, you can distinguish them using the following
syntax: &#39;ClasseName::property_name&rsquo; as property name. If you don&rsquo;t, the
corresponding property of the first element found will be set.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.list_children_properties" c_name="ges_timeline_element_list_children_properties" python_name="GES.TimelineElement.list_children_properties">GES.TimelineElement.list_children_properties</h3>
<pre><code class="highlight c"><span class="n">GParamSpec</span><span class="o">**</span> <span class="n">ges_timeline_element_list_children_properties</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                            <span class="n">guint</span><span class="o">*</span> <span class="n">n_properties</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">list_children_properties</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n_properties</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_list_children_properties()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to get the list of children properties from</p>

<p><em>n_properties</em>: return location for the length of the returned array</p>

<p><em>Returns</em>: an array of <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>* which should be freed after use or
<strong>NULL</strong> if something went wrong</p>

<div class='prototype_end'></div>

<p>Gets an array of <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>* for all configurable properties of the
children of <strong>self</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.set_child_properties" c_name="ges_timeline_element_set_child_properties">GES.TimelineElement.set_child_properties</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_set_child_properties</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                                <span class="p">...);</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> parent object</p>

<p><em>first_property_name</em>: The name of the first property to set</p>

<p><em>&hellip;</em>: value for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<div class='prototype_end'></div>

<p>Sets a property of a child of <strong>self</strong>. If there are various child elements
that have the same property name, you can distinguish them using the following
syntax: &#39;ClasseName::property_name&rsquo; as property name. If you don&rsquo;t, the
corresponding property of the first element found will be set.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.add_child_property" c_name="ges_timeline_element_add_child_property" python_name="GES.TimelineElement.add_child_property">GES.TimelineElement.add_child_property</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_add_child_property</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                  <span class="n">GParamSpec</span><span class="o">*</span> <span class="n">pspec</span><span class="p">,</span>
                                                  <span class="n">GObject</span><span class="o">*</span> <span class="n">child</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Object</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_child_property</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pspec</span><span class="p">,</span> <span class="n">child</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_add_child_property()</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>pspec</em>: FIXME empty description</p>

<p><em>child</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_child_property" c_name="ges_timeline_element_get_child_property" python_name="GES.TimelineElement.get_child_property">GES.TimelineElement.get_child_property</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_get_child_property</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                  <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">property_name</span><span class="p">,</span>
                                                  <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_child_property</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">property_name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_get_child_property()</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>property_name</em>: The name of the property</p>

<p><em>value</em>: return location for the property value, it will
be initialized if it is initialized with 0</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the property was found, <strong>FALSE</strong> otherwize</p>

<div class='prototype_end'></div>

<p>In general, a copy is made of the property contents and
the caller is responsible for freeing the memory by calling
<a href="https://developer.gnome.org/gobject/unstable//gobject-Generic-values.html#g-value-unset">g_value_unset</a>.</p>

<p>Gets a property of a GstElement contained in @object.</p>

<p>Note that (FIXME broken link)ges_timeline_element_get_child_property is really
intended for language bindings, (FIXME broken link)ges_timeline_element_get_child_properties
is much more convenient for C programming.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.lookup_child" c_name="ges_timeline_element_lookup_child" python_name="GES.TimelineElement.lookup_child">GES.TimelineElement.lookup_child</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_element_lookup_child</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                            <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">prop_name</span><span class="p">,</span>
                                            <span class="n">GObject</span><span class="o">**</span> <span class="n">child</span><span class="p">,</span>
                                            <span class="n">GParamSpec</span><span class="o">**</span> <span class="n">pspec</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Object</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">lookup_child</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">prop_name</span><span class="p">,</span> <span class="n">child</span><span class="p">,</span> <span class="n">pspec</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_element_lookup_child()</span>

</code></pre>

<p><em>self</em>: object to lookup the property in</p>

<p><em>prop_name</em>: name of the property to look up. You can specify the name of the
    class as such: &ldquo;ClassName::property-name&rdquo;, to guarantee that you get the
    proper GParamSpec in case various GstElement-s contain the same property
    name. If you don&rsquo;t do so, you will get the first element found, having
    this property and the and the corresponding GParamSpec.</p>

<p><em>child</em>: FIXME empty description</p>

<p><em>pspec</em>: pointer to take the <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>
    describing the property</p>

<p><em>Returns</em>: TRUE if @element and <strong>pspec</strong> could be found. FALSE otherwise. In that
case the values for <strong>pspec</strong> and @element are not modified. Unref @element after
usage.</p>

<div class='prototype_end'></div>

<p>Looks up which @element and <strong>pspec</strong> would be effected by the given @name. If various
contained elements have this property name you will get the first one, unless you
specify the class name in @name.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.get_child_properties" c_name="ges_timeline_element_get_child_properties">GES.TimelineElement.get_child_properties</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_element_get_child_properties</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                                <span class="p">...);</span>

</code></pre>

<p><em>self</em>: The origin <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>first_property_name</em>: The name of the first property to get</p>

<p><em>&hellip;</em>: return location for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<div class='prototype_end'></div>

<p>Gets properties of a child of <strong>self</strong>.</p>

<h3 id='FBHvzT' class='subsection'><u>Virtual Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_roll_end" c_name="GESTimelineElementClass:roll_end" python_name="GES.TimelineElement.do_roll_end">GES.TimelineElement.do_roll_end</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">roll_end</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                         <span class="n">guint64</span> <span class="n">end</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_roll_end</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to roll.</p>

<p><em>end</em>: The new end (start + duration) of <strong>self</strong> in roll mode</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been rolled properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in roll mode. It allows you to modify the
duration of a <strong>self</strong> and trim (basicly change the start + inpoint
in this case) the following neighbours accordingly.
This will not change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_set_inpoint" c_name="GESTimelineElementClass:set_inpoint" python_name="GES.TimelineElement.do_set_inpoint">GES.TimelineElement.do_set_inpoint</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">set_inpoint</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                            <span class="n">GstClockTime</span> <span class="n">inpoint</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_set_inpoint</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">inpoint</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>inpoint</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_set_start" c_name="GESTimelineElementClass:set_start" python_name="GES.TimelineElement.do_set_start">GES.TimelineElement.do_set_start</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">set_start</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                          <span class="n">GstClockTime</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_set_start</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>start</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_trim" c_name="GESTimelineElementClass:trim" python_name="GES.TimelineElement.do_trim">GES.TimelineElement.do_trim</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">trim</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                     <span class="n">guint64</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_trim</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to trim.</p>

<p><em>start</em>: The new start of <strong>self</strong> in trim mode, will adapt the inpoint
of <strong>self</strong> accordingly</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been trimmed properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in trim mode. It allows you to modify the
inpoint and start of <strong>self</strong>.
This will not change the overall timeline duration.</p>

<p>Note that to trim the end of an self you can just set its duration. The same way
as this method, it will take into account the snapping-distance property of the
timeline in which <strong>self</strong> is.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_set_priority" c_name="GESTimelineElementClass:set_priority" python_name="GES.TimelineElement.do_set_priority">GES.TimelineElement.do_set_priority</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">set_priority</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                             <span class="n">guint32</span> <span class="n">priority</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">guint32</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_set_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">priority</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>priority</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_set_duration" c_name="GESTimelineElementClass:set_duration" python_name="GES.TimelineElement.do_set_duration">GES.TimelineElement.do_set_duration</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">set_duration</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                             <span class="n">GstClockTime</span> <span class="n">duration</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_set_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">duration</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>duration</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_list_children_properties" c_name="GESTimelineElementClass:list_children_properties">GES.TimelineElement.do_list_children_properties</h3>
<pre><code class="highlight c"><span class="n">GParamSpec</span><span class="o">**</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">list_children_properties</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                             <span class="n">guint</span><span class="o">*</span> <span class="n">n_properties</span><span class="p">);</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>n_properties</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_roll_start" c_name="GESTimelineElementClass:roll_start" python_name="GES.TimelineElement.do_roll_start">GES.TimelineElement.do_roll_start</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">roll_start</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                           <span class="n">guint64</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_roll_start</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to roll</p>

<p><em>start</em>: The new start of <strong>self</strong> in roll mode, it will also adapat
the in-point of <strong>self</strong> according</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been roll properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in roll mode. It allows you to modify the
start and inpoint of a <strong>self</strong> and &ldquo;resize&rdquo; (basicly change the duration
in this case) of the previous neighbours accordingly.
This will not change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_set_max_duration" c_name="GESTimelineElementClass:set_max_duration" python_name="GES.TimelineElement.do_set_max_duration">GES.TimelineElement.do_set_max_duration</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">set_max_duration</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                 <span class="n">GstClockTime</span> <span class="n">maxduration</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_set_max_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">maxduration</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>maxduration</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_lookup_child" c_name="GESTimelineElementClass:lookup_child" python_name="GES.TimelineElement.do_lookup_child">GES.TimelineElement.do_lookup_child</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">lookup_child</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                             <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">prop_name</span><span class="p">,</span>
                             <span class="n">GObject</span><span class="o">**</span> <span class="n">child</span><span class="p">,</span>
                             <span class="n">GParamSpec</span><span class="o">**</span> <span class="n">pspec</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Object</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_lookup_child</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">prop_name</span><span class="p">,</span> <span class="n">child</span><span class="p">,</span> <span class="n">pspec</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: object to lookup the property in</p>

<p><em>prop_name</em>: name of the property to look up. You can specify the name of the
    class as such: &ldquo;ClassName::property-name&rdquo;, to guarantee that you get the
    proper GParamSpec in case various GstElement-s contain the same property
    name. If you don&rsquo;t do so, you will get the first element found, having
    this property and the and the corresponding GParamSpec.</p>

<p><em>child</em>: FIXME empty description</p>

<p><em>pspec</em>: pointer to take the <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>
    describing the property</p>

<p><em>Returns</em>: TRUE if @element and <strong>pspec</strong> could be found. FALSE otherwise. In that
case the values for <strong>pspec</strong> and @element are not modified. Unref @element after
usage.</p>

<div class='prototype_end'></div>

<p>Looks up which @element and <strong>pspec</strong> would be effected by the given @name. If various
contained elements have this property name you will get the first one, unless you
specify the class name in @name.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_ripple_end" c_name="GESTimelineElementClass:ripple_end" python_name="GES.TimelineElement.do_ripple_end">GES.TimelineElement.do_ripple_end</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">ripple_end</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                           <span class="n">guint64</span> <span class="n">end</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_ripple_end</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to ripple.</p>

<p><em>end</em>: The new end (start + duration) of <strong>self</strong> in ripple mode. It will
      basically only change the duration of <strong>self</strong>.</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been rippled properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in ripple mode. It allows you to modify the
duration of a <strong>self</strong> and move the following neighbours accordingly.
This will change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_deep_copy" c_name="GESTimelineElementClass:deep_copy" python_name="GES.TimelineElement.do_deep_copy">GES.TimelineElement.do_deep_copy</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">deep_copy</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                      <span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">copy</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_deep_copy</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">copy</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>copy</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_ripple" c_name="GESTimelineElementClass:ripple" python_name="GES.TimelineElement.do_ripple">GES.TimelineElement.do_ripple</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">ripple</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                       <span class="n">guint64</span> <span class="n">start</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_ripple</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">start</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> to ripple.</p>

<p><em>start</em>: The new start of <strong>self</strong> in ripple mode.</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the self as been rippled properly, <strong>FALSE</strong> if an error
occured</p>

<div class='prototype_end'></div>

<p>Edits <strong>self</strong> in ripple mode. It allows you to modify the
start of <strong>self</strong> and move the following neighbours accordingly.
This will change the overall timeline duration.</p>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement.do_set_parent" c_name="GESTimelineElementClass:set_parent" python_name="GES.TimelineElement.do_set_parent">GES.TimelineElement.do_set_parent</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTimelineElementClass</span><span class="o">-&gt;</span><span class="n">set_parent</span> <span class="p">(</span><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                           <span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">parent</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_set_parent</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>parent</em>: new parent of self</p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>parent</strong> could be set or <strong>FALSE</strong> when <strong>self</strong>
already had a parent or <strong>self</strong> and <strong>parent</strong> are the same.</p>

<div class='prototype_end'></div>

<p>Sets the parent of <strong>self</strong> to <strong>parent</strong>. The object&rsquo;s reference count will
be incremented, and any floating reference will be removed (see <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html#gst-object-ref-sink">gst_object_ref_sink</a>).</p>

<h3 id='kZsBje' class='subsection'><u>Signals:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.timelineelement-deep-notify" c_name="ges_timeline_element-deep-notify" python_name="GES.TimelineElement-deep-notify">GES.TimelineElement-deep-notify</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">deep</span><span class="o">-</span><span class="n">notify</span> <span class="p">(</span><span class="n">GObject</span> <span class="n">prop_object</span><span class="p">,</span>
                  <span class="n">GParamSpec</span> <span class="n">prop</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">timeline_element</span><span class="p">,</span> <span class="n">prop_object</span><span class="p">,</span> <span class="n">prop</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>prop_object</em>: the object that originated the signal</p>

<p><em>prop</em>: the property that changed</p>

<div class='prototype_end'></div>

<p>The deep notify signal is used to be notified of property changes of all
the childs of @timeline_element</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
