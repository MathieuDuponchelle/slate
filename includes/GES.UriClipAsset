<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.uriclipasset" c_name="GESUriClipAsset" python_name="GES.UriClipAsset">GES.UriClipAsset</h2>

<p>The <a href="#ges.uriclipasset">GES.UriClipAsset</a> is a special <a href="#ges.asset">GES.Asset</a> that lets you handle
the media file to use inside the GStreamer Editing Services. It has APIs that
let you get information about the medias. Also, the tags found in the media file are
set as Metadatas of the Asser.</p>

<p><h3 id='VqhLCB' class='subsection'><u>GObject properties:</u></h3>
<h3 id="ges.uriclipasset-duration" c_name="GES.UriClipAsset-duration" python_name="GES.UriClipAsset-duration">GES.UriClipAsset-duration</h3></p>

<p>The duration (in nanoseconds) of the media file</p>

<h3 id='XOBoEy' class='subsection'><u>Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.uriclipasset.get_duration" c_name="ges_uri_clip_asset_get_duration" python_name="GES.UriClipAsset.get_duration">GES.UriClipAsset.get_duration</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_uri_clip_asset_get_duration</span> <span class="p">(</span><span class="n">GESUriClipAsset</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">UriClipAsset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_uri_clip_asset_get_duration()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.uriclipasset">GES.UriClipAsset</a></p>

<p><em>Returns</em>: The duration of <strong>self</strong></p>

<div class='prototype_end'></div>

<p>Gets duration of the file represented by <strong>self</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.uriclipasset.get_info" c_name="ges_uri_clip_asset_get_info" python_name="GES.UriClipAsset.get_info">GES.UriClipAsset.get_info</h3>
<pre><code class="highlight c"><span class="n">GstDiscovererInfo</span><span class="o">*</span> <span class="n">ges_uri_clip_asset_get_info</span> <span class="p">(</span><span class="k">const</span> <span class="n">GESUriClipAsset</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">UriClipAsset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GstPbutils</span><span class="o">.</span><span class="n">DiscovererInfo</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_info</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_uri_clip_asset_get_info()</span>

</code></pre>

<p><em>self</em>: Target asset</p>

<p><em>Returns</em>: <a href="FIXME%20broken%20link%20to%20DiscovererInfo">GstPbutils.DiscovererInfo</a> of specified asset</p>

<div class='prototype_end'></div>

<p>Gets <a href="FIXME%20broken%20link%20to%20DiscovererInfo">GstPbutils.DiscovererInfo</a> about the file</p>

<div class='prototype_start'></div>

<h3 id="ges.uriclipasset.get_stream_assets" c_name="ges_uri_clip_asset_get_stream_assets" python_name="GES.UriClipAsset.get_stream_assets">GES.UriClipAsset.get_stream_assets</h3>
<pre><code class="highlight c"><span class="k">const</span> <span class="n">GList</span><span class="o">*</span> <span class="n">ges_uri_clip_asset_get_stream_assets</span> <span class="p">(</span><span class="n">GESUriClipAsset</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">UriClipAsset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">UriSourceAsset</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_stream_assets</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_uri_clip_asset_get_stream_assets()</span>

</code></pre>

<p><em>self</em>: A <a href="#ges.uriclipasset">GES.UriClipAsset</a></p>

<p><em>Returns</em>: a
<a href="https://developer.gnome.org/glib/unstable//glib-Doubly-Linked-Lists.html#GList">GLib.List</a> of <a href="#ges.urisourceasset">GES.UriSourceAsset</a></p>

<div class='prototype_end'></div>

<p>Get the GESUriSourceAsset <strong>self</strong> containes</p>

<div class='prototype_start'></div>

<h3 id="ges.uriclipasset.is_image" c_name="ges_uri_clip_asset_is_image" python_name="GES.UriClipAsset.is_image">GES.UriClipAsset.is_image</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_uri_clip_asset_is_image</span> <span class="p">(</span><span class="n">GESUriClipAsset</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">UriClipAsset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">is_image</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_uri_clip_asset_is_image()</span>

</code></pre>

<p><em>self</em>: a (FIXME broken link)indent: Standard input:311: Error:Unexpected end of file
GESUriClipAsset</p>

<p><em>Returns</em>: Whether the file represented by <strong>self</strong> is an image or not</p>

<div class='prototype_end'></div>

<p>Gets Whether the file represented by <strong>self</strong> is an image or not</p>

<div class='prototype_start'></div>

<h3 id="ges.uriclipasset.new" c_name="ges_uri_clip_asset_new" python_name="GES.UriClipAsset.new">GES.UriClipAsset.new</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_uri_clip_asset_new</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                             <span class="n">GCancellable</span><span class="o">*</span> <span class="n">cancellable</span><span class="p">,</span>
                             <span class="n">GAsyncReadyCallback</span> <span class="n">callback</span><span class="p">,</span>
                             <span class="n">gpointer</span> <span class="n">user_data</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="nb">unicode</span><span class="p">,</span> <span class="n">Gio</span><span class="o">.</span><span class="n">Cancellable</span><span class="p">,</span> <span class="n">Gio</span><span class="o">.</span><span class="n">AsyncReadyCallback</span><span class="p">,</span> <span class="n">gpointer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">new</span><span class="p">(</span><span class="n">uri</span><span class="p">,</span> <span class="n">cancellable</span><span class="p">,</span> <span class="n">callback</span><span class="p">,</span> <span class="n">user_data</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_uri_clip_asset_new()</span>

</code></pre>

<p><em>uri</em>: The URI of the file for which to create a <a href="#ges.uriclipasset">GES.UriClipAsset</a></p>

<p><em>cancellable</em>: optional %GCancellable object, <strong>NULL</strong> to ignore.</p>

<p><em>callback</em>: a <a href="https://developer.gnome.org/gio/unstable//GAsyncResult.html#GAsyncReadyCallback">Gio.AsyncReadyCallback</a> to call when the initialization is finished</p>

<p><em>user_data</em>: The user data to pass when <strong>callback</strong> is called</p>

<div class='prototype_end'></div>

<p>Creates a <a href="#ges.uriclipasset">GES.UriClipAsset</a> for <strong>uri</strong></p>

<p>Example of request of a GESUriClipAsset:</p>

<pre class="inlined_code">
// The request callback
static void
filesource_asset_loaded_cb (GESAsset * source, GAsyncResult * res, gpointer user_data)
{
  GError *error = NULL;
  GESUriClipAsset *filesource_asset;

  filesource_asset = GES_URI_CLIP_ASSET (ges_asset_request_finish (res, &error));
  if (filesource_asset) {
   g_print ("The file: %s is usable as a FileSource, it is%s an image and lasts %" GST_TIME_FORMAT,
       ges_asset_get_id (GES_ASSET (filesource_asset))
       ges_uri_clip_asset_is_image (filesource_asset) ? "" : " not",
       GST_TIME_ARGS (ges_uri_clip_asset_get_duration (filesource_asset));
  } else {
   g_print ("The file: %s is *not* usable as a FileSource because: %s",
       ges_asset_get_id (source), error->message);
  }

  gst_object_unref (mfs);
}

// The request:
ges_uri_clip_asset_new (uri, (GAsyncReadyCallback) filesource_asset_loaded_cb, user_data);
</pre>

<div class='prototype_start'></div>

<h3 id="ges.uriclipasset.request_sync" c_name="ges_uri_clip_asset_request_sync" python_name="GES.UriClipAsset.request_sync">GES.UriClipAsset.request_sync</h3>
<pre><code class="highlight c"><span class="n">GESUriClipAsset</span><span class="o">*</span> <span class="n">ges_uri_clip_asset_request_sync</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                                  <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">UriClipAsset</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">request_sync</span><span class="p">(</span><span class="n">uri</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_uri_clip_asset_request_sync()</span>

</code></pre>

<p><em>uri</em>: The URI of the file for which to create a <a href="#ges.uriclipasset">GES.UriClipAsset</a>.
You can also use multi file uris for <a href="#ges.multifilesource">GES.MultiFileSource</a>.</p>

<p><em>Returns</em>: A reference to the requested asset or <strong>NULL</strong> if an error happend</p>

<div class='prototype_end'></div>

<p>Creates a <a href="#ges.uriclipasset">GES.UriClipAsset</a> for <strong>uri</strong> syncronously. You should avoid
to use it in application, and rather create <a href="#ges.uriclipasset">GES.UriClipAsset</a> asynchronously</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
