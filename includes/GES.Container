<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.container">GES.Container</h2>

<p>The <a href="#ges.container">GES.Container</a> base class.</p>

<h3 id="ges.container.remove">GES.Container.remove</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_container_remove</span> <span class="p">(</span><span class="n">GESContainer</span><span class="o">*</span> <span class="n">container</span><span class="p">,</span>
                               <span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">child</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">child</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_container_remove()</span>

</code></pre>

<p><em>container</em>: a <a href="#ges.container">GES.Container</a></p>

<p><em>child</em>: the <a href="#ges.timelineelement">GES.TimelineElement</a> to release</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the <strong>child</strong> was properly released, else <strong>FALSE</strong>.</p>

<p>Release the <strong>child</strong> from the control of <strong>container</strong>.</p>

<h3 id="ges.container.edit">GES.Container.edit</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_container_edit</span> <span class="p">(</span><span class="n">GESContainer</span><span class="o">*</span> <span class="n">container</span><span class="p">,</span>
                             <span class="n">GList</span><span class="o">*</span> <span class="n">layers</span><span class="p">,</span>
                             <span class="n">gint</span> <span class="n">new_layer_priority</span><span class="p">,</span>
                             <span class="n">GESEditMode</span> <span class="n">mode</span><span class="p">,</span>
                             <span class="n">GESEdge</span> <span class="n">edge</span><span class="p">,</span>
                             <span class="n">guint64</span> <span class="n">position</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">,</span> <span class="p">[</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">],</span> <span class="nb">int</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">EditMode</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Edge</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">edit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">layers</span><span class="p">,</span> <span class="n">new_layer_priority</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">edge</span><span class="p">,</span> <span class="n">position</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_container_edit()</span>

</code></pre>

<p><em>container</em>: the <a href="#ges.clip">GES.Clip</a> to edit</p>

<p><em>layers</em>: The layers you want the edit to
 happen in, <strong>NULL</strong> means that the edition is done in all the
 <a href="#ges.layer">GES.Layers</a> contained in the current timeline.</p>

<p><em>new_layer_priority</em>: The priority of the layer <strong>container</strong> should land in.
 If the layer you&rsquo;re trying to move the container to doesn&rsquo;t exist, it will
 be created automatically. -1 means no move.</p>

<p><em>mode</em>: The <a href="#ges.editmode">GES.EditMode</a> in which the editition will happen.</p>

<p><em>edge</em>: The <a href="#ges.edge">GES.Edge</a> the edit should happen on.</p>

<p><em>position</em>: The position at which to edit <strong>container</strong> (in nanosecond)</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the container as been edited properly, <strong>FALSE</strong> if an error
occured</p>

<p>Edit <strong>container</strong> in the different exisiting <a href="#ges.editmode">GES.EditMode</a> modes. In the case of
slide, and roll, you need to specify a <a href="#ges.edge">GES.Edge</a></p>

<h3 id="ges.container.ungroup">GES.Container.ungroup</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_container_ungroup</span> <span class="p">(</span><span class="n">GESContainer</span><span class="o">*</span> <span class="n">container</span><span class="p">,</span>
                              <span class="n">gboolean</span> <span class="n">recursive</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">ungroup</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">recursive</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_container_ungroup()</span>

</code></pre>

<p><em>container</em>: The <a href="#ges.container">GES.Container</a> to ungroup</p>

<p><em>recursive</em>: Wether to recursively ungroup <strong>container</strong></p>

<p><em>Returns</em>: The list of
<a href="#ges.container">GES.Container</a> resulting from the ungrouping operation
The user is responsible for unreffing the contained objects
and freeing the list.</p>

<p>Ungroups the <a href="#ges.timelineelement">GES.TimelineElement</a> contained in this GESContainer,
creating new <a href="#ges.container">GES.Container</a> containing those <a href="#ges.timelineelement">GES.TimelineElement</a>
apropriately.</p>

<h3 id="ges.container.add">GES.Container.add</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_container_add</span> <span class="p">(</span><span class="n">GESContainer</span><span class="o">*</span> <span class="n">container</span><span class="p">,</span>
                            <span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">child</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">child</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_container_add()</span>

</code></pre>

<p><em>container</em>: a <a href="#ges.container">GES.Container</a></p>

<p><em>child</em>: the <a href="#ges.timelineelement">GES.TimelineElement</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> on success, <strong>FALSE</strong> on failure.</p>

<p>Add the <a href="#ges.timelineelement">GES.TimelineElement</a> to the container.</p>

<h3 id="ges.container.group">GES.Container.group</h3>
<pre><code class="highlight c"><span class="n">GESContainer</span><span class="o">*</span> <span class="n">ges_container_group</span> <span class="p">(</span><span class="n">GList</span><span class="o">*</span> <span class="n">containers</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">])</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">group</span><span class="p">(</span><span class="n">containers</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_container_group()</span>

</code></pre>

<p><em>containers</em>: The
<a href="#ges.container">GES.Container</a> to group, they must all be in a same <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: The <a href="#ges.container">GES.Container</a> (subclass) resulting of the
grouping</p>

<p>Groups the <a href="#ges.container">GES.Container</a>-s provided in <strong>containers</strong>. It creates a subclass
of <a href="#ges.container">GES.Container</a>, depending on the containers provided in <strong>containers</strong>.
Basically, if all the containers in <strong>containers</strong> should be contained in a same
clip (all the <a href="#ges.trackelement">GES.TrackElement</a> they contain have the exact same
start/inpoint/duration and are in the same layer), it will create a <a href="#ges.clip">GES.Clip</a>
otherwise a <a href="#ges.group">GES.Group</a> will be created</p>

<h3 id="ges.container.get_children">GES.Container.get_children</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_container_get_children</span> <span class="p">(</span><span class="n">GESContainer</span><span class="o">*</span> <span class="n">container</span><span class="p">,</span>
                                   <span class="n">gboolean</span> <span class="n">recursive</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Container</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_children</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">recursive</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_container_get_children()</span>

</code></pre>

<p><em>container</em>: a <a href="#ges.container">GES.Container</a></p>

<p><em>recursive</em>: Whether to recursively get children in <strong>container</strong></p>

<p><em>Returns</em>: The list of
timeline element contained in <strong>container</strong>.</p>

<p>Get the list of <a href="#ges.timelineelement">GES.TimelineElement</a> contained in <strong>container</strong>
The user is responsible for unreffing the contained objects
and freeing the list.</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
