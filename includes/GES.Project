<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.project" c_name="GESProject" python_name="GES.Project">GES.Project</h2>

<p>The <a href="#ges.project">GES.Project</a> is used to control a set of <a href="#ges.asset">GES.Asset</a> and is a
<a href="#ges.asset">GES.Asset</a> with (FIXME broken link)GES_TYPE_TIMELINE as @extractable_type itself. That
means that you can extract <a href="#ges.timeline">GES.Timeline</a> from a project as followed:</p>

<pre class="inlined_code">
 GESProject *project;
 GESTimeline *timeline;

 project = ges_project_new ("file:///path/to/a/valid/project/uri");

 // Here you can connect to the various signal to get more infos about
 // what is happening and recover from errors if possible
 ...

 timeline = ges_asset_extract (GES_ASSET (project));
</pre>

<p>The <a href="#ges.project">GES.Project</a> class offers a higher level API to handle <a href="#ges.asset">GES.Asset</a>-s.
It lets you request new asset, and it informs you about new assets through
a set of signals. Also it handles problem such as missing files/missing
<a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> and lets you try to recover from those.</p>

<p><h3 id='bAjtyH' class='subsection'><u>GObject properties:</u></h3>
<h3 id="ges.project-uri" c_name="GES.Project-uri" python_name="GES.Project-uri">GES.Project-uri</h3></p>

<h3 id='crmPMC' class='subsection'><u>Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.project.add_asset" c_name="ges_project_add_asset" python_name="GES.Project.add_asset">GES.Project.add_asset</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_add_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_add_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>asset</em>: A <a href="#ges.asset">GES.Asset</a> to add to <strong>project</strong></p>

<p><em>Returns</em>: <strong>TRUE</strong> if the asset could be added <strong>FALSE</strong> it was already
in the project</p>

<div class='prototype_end'></div>

<p>Adds a (FIXME broken link)Asset to <strong>project</strong>, the project will keep a reference on
<strong>asset</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.project.add_encoding_profile" c_name="ges_project_add_encoding_profile" python_name="GES.Project.add_encoding_profile">GES.Project.add_encoding_profile</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_add_encoding_profile</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                           <span class="n">GstEncodingProfile</span><span class="o">*</span> <span class="n">profile</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GstPbutils</span><span class="o">.</span><span class="n">EncodingProfile</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_encoding_profile</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">profile</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_add_encoding_profile()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>profile</em>: A <a href="FIXME%20broken%20link%20to%20EncodingProfile">GstPbutils.EncodingProfile</a> to add to the project. If a profile with
the same name already exists, it will be replaced</p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>profile</strong> could be added, <strong>FALSE</strong> otherwize</p>

<div class='prototype_end'></div>

<p>Adds <strong>profile</strong> to the project. It lets you save in what format
the project has been renders and keep a reference to those formats.
Also, those formats will be saves to the project file when possible.</p>

<div class='prototype_start'></div>

<h3 id="ges.project.create_asset" c_name="ges_project_create_asset" python_name="GES.Project.create_asset">GES.Project.create_asset</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_create_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                   <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                                   <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">create_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">extractable_type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_create_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>id</em>: The id of the asset to create and add to <strong>project</strong></p>

<p><em>extractable_type</em>: The <a href="FIXME%20broken%20link%20to%20Type">GLib.Type</a> of the asset to create</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the asset started to be added <strong>FALSE</strong> it was already
in the project</p>

<div class='prototype_end'></div>

<p>Create and add a <a href="#ges.asset">GES.Asset</a> to <strong>project</strong>. You should connect to the
&ldquo;asset-added&rdquo; signal to get the asset when it finally gets added to
<strong>project</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.project.create_asset_sync" c_name="ges_project_create_asset_sync">GES.Project.create_asset_sync</h3>
<pre><code class="highlight c"><span class="n">GESAsset</span><span class="o">*</span> <span class="n">ges_project_create_asset_sync</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                         <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                                         <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">,</span>
                                         <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>id</em>: The id of the asset to create and add to <strong>project</strong></p>

<p><em>extractable_type</em>: The <a href="FIXME%20broken%20link%20to%20Type">GLib.Type</a> of the asset to create</p>

<p><em>Returns</em>: The newly created <a href="#ges.asset">GES.Asset</a></p>

<div class='prototype_end'></div>

<p>Create and add a <a href="#ges.asset">GES.Asset</a> to <strong>project</strong>. You should connect to the
&ldquo;asset-added&rdquo; signal to get the asset when it finally gets added to
<strong>project</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.project.get_asset" c_name="ges_project_get_asset" python_name="GES.Project.get_asset">GES.Project.get_asset</h3>
<pre><code class="highlight c"><span class="n">GESAsset</span><span class="o">*</span> <span class="n">ges_project_get_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                 <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                                 <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">extractable_type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_get_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>id</em>: The id of the asset to retrieve</p>

<p><em>extractable_type</em>: The extractable_type of the asset
to retrieve from @object</p>

<p><em>Returns</em>: The <a href="#ges.asset">GES.Asset</a> with
<strong>id</strong> or <strong>NULL</strong> if no asset with <strong>id</strong> as an ID</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project.get_loading_assets" c_name="ges_project_get_loading_assets" python_name="GES.Project.get_loading_assets">GES.Project.get_loading_assets</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_project_get_loading_assets</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_loading_assets</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_get_loading_assets()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>Returns</em>: A set of loading asset
that will be added to <strong>project</strong>. Note that those Asset are <em>not</em> loaded yet,
and thus can not be used</p>

<div class='prototype_end'></div>

<p>Get the assets that are being loaded</p>

<div class='prototype_start'></div>

<h3 id="ges.project.get_uri" c_name="ges_project_get_uri" python_name="GES.Project.get_uri">GES.Project.get_uri</h3>
<pre><code class="highlight c"><span class="n">gchar</span><span class="o">*</span> <span class="n">ges_project_get_uri</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_get_uri()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>Returns</em>: The uri that is set on <strong>project</strong></p>

<div class='prototype_end'></div>

<p>Retrieve the uri that is currently set on <strong>project</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.project.list_assets" c_name="ges_project_list_assets" python_name="GES.Project.list_assets">GES.Project.list_assets</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_project_list_assets</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                <span class="n">GType</span> <span class="n">filter</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">list_assets</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">filter</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_list_assets()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>filter</em>: Type of assets to list, (FIXME broken link)GES_TYPE_EXTRACTABLE will list
all assets</p>

<p><em>Returns</em>: The list of
<a href="#ges.asset">GES.Asset</a> the object contains</p>

<div class='prototype_end'></div>

<p>List all @asset contained in <strong>project</strong> filtering per extractable_type
as defined by <strong>filter</strong>. It copies the asset and thus will not be updated
in time.</p>

<div class='prototype_start'></div>

<h3 id="ges.project.list_encoding_profiles" c_name="ges_project_list_encoding_profiles" python_name="GES.Project.list_encoding_profiles">GES.Project.list_encoding_profiles</h3>
<pre><code class="highlight c"><span class="k">const</span> <span class="n">GList</span><span class="o">*</span> <span class="n">ges_project_list_encoding_profiles</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GstPbutils</span><span class="o">.</span><span class="n">EncodingProfile</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">list_encoding_profiles</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_list_encoding_profiles()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>Returns</em>: The
list of <a href="FIXME%20broken%20link%20to%20EncodingProfile">GstPbutils.EncodingProfile</a> used in <strong>project</strong></p>

<div class='prototype_end'></div>

<p>Lists the encoding profile that have been set to <strong>project</strong>. The first one
is the latest added.</p>

<div class='prototype_start'></div>

<h3 id="ges.project.load" c_name="ges_project_load" python_name="GES.Project.load">GES.Project.load</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_load</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                           <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                           <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_load()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a> that has an @uri set already</p>

<p><em>timeline</em>: A blank timeline to load <strong>project</strong> into</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the project could be loaded <strong>FALSE</strong> otherwize.</p>

<div class='prototype_end'></div>

<p>Loads <strong>project</strong> into <strong>timeline</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.project.remove_asset" c_name="ges_project_remove_asset" python_name="GES.Project.remove_asset">GES.Project.remove_asset</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_remove_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                   <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_remove_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>asset</em>: A <a href="#ges.asset">GES.Asset</a> to remove from <strong>project</strong></p>

<p><em>Returns</em>: <strong>TRUE</strong> if the asset could be removed <strong>FALSE</strong> otherwise</p>

<div class='prototype_end'></div>

<p>remove a <strong>asset</strong> to from <strong>project</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.project.save" c_name="ges_project_save" python_name="GES.Project.save">GES.Project.save</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_save</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                           <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                           <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                           <span class="n">GESAsset</span><span class="o">*</span> <span class="n">formatter_asset</span><span class="p">,</span>
                           <span class="n">gboolean</span> <span class="n">overwrite</span><span class="p">,</span>
                           <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">,</span> <span class="n">uri</span><span class="p">,</span> <span class="n">formatter_asset</span><span class="p">,</span> <span class="n">overwrite</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_save()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a> to save</p>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a> to save, it must have been extracted from <strong>project</strong></p>

<p><em>uri</em>: The uri where to save <strong>project</strong> and <strong>timeline</strong></p>

<p><em>formatter_asset</em>: The formatter asset to use or <strong>NULL</strong>. If <strong>NULL</strong>,
will try to save in the same format as the one from which the timeline as been loaded
or default to the formatter with highest rank</p>

<p><em>overwrite</em>: <strong>TRUE</strong> to overwrite file if it exists</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the project could be save, <strong>FALSE</strong> otherwize</p>

<div class='prototype_end'></div>

<p>Save the timeline of <strong>project</strong> to <strong>uri</strong>. You should make sure that <strong>timeline</strong>
is one of the timelines that have been extracted from <strong>project</strong>
(using ges_asset_extract (<strong>project</strong>);)</p>

<div class='prototype_start'></div>

<h3 id="ges.project.new" c_name="ges_project_new">GES.Project.new</h3>
<pre><code class="highlight c"><span class="n">GESProject</span><span class="o">*</span> <span class="n">ges_project_new</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">);</span>

</code></pre>

<p><em>id</em>: FIXME empty description</p>

<p><em>Returns</em>: A newly created <a href="#ges.project">GES.Project</a></p>

<div class='prototype_end'></div>

<p>Creates a new <a href="#ges.project">GES.Project</a> and sets its uri to @uri if provided. Note that
if @uri is not valid or <strong>NULL</strong>, the uri of the project will then be set
the first time you save the project. If you then save the project to
other locations, it will never be updated again and the first valid URI is
the URI it will keep refering to.</p>

<h3 id='afzgWb' class='subsection'><u>Virtual Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.project.do_asset_added" c_name="GESProjectClass:asset_added" python_name="GES.Project.do_asset_added">GES.Project.do_asset_added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">asset_added</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                        <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_asset_added</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>asset</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project.do_missing_uri" c_name="GESProjectClass:missing_uri" python_name="GES.Project.do_missing_uri">GES.Project.do_missing_uri</h3>
<pre><code class="highlight c"><span class="n">gchar</span><span class="o">*</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">missing_uri</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                          <span class="n">GError</span><span class="o">*</span> <span class="n">error</span><span class="p">,</span>
                          <span class="n">GESAsset</span><span class="o">*</span> <span class="n">wrong_asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_missing_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">error</span><span class="p">,</span> <span class="n">wrong_asset</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>error</em>: FIXME empty description</p>

<p><em>wrong_asset</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project.do_loading_error" c_name="GESProjectClass:loading_error" python_name="GES.Project.do_loading_error">GES.Project.do_loading_error</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">loading_error</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                              <span class="n">GError</span><span class="o">*</span> <span class="n">error</span><span class="p">,</span>
                              <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                              <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_loading_error</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">error</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">extractable_type</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>error</em>: FIXME empty description</p>

<p><em>id</em>: FIXME empty description</p>

<p><em>extractable_type</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project.do_asset_removed" c_name="GESProjectClass:asset_removed" python_name="GES.Project.do_asset_removed">GES.Project.do_asset_removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">asset_removed</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                          <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">do_asset_removed</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>

</code></pre>

<p><em>self</em>: FIXME empty description</p>

<p><em>asset</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<h3 id='VJhNhC' class='subsection'><u>Signals:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.project-asset-added" c_name="ges_project-asset-added" python_name="GES.Project-asset-added">GES.Project-asset-added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">asset</span><span class="o">-</span><span class="n">added</span> <span class="p">(</span><span class="n">GESAsset</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">project</span><span class="p">,</span> <span class="n">asset</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>asset</em>: The <a href="#ges.asset">GES.Asset</a> that has been added to @project</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project-loaded" c_name="ges_project-loaded" python_name="GES.Project-loaded">GES.Project-loaded</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">loaded</span> <span class="p">(</span><span class="n">GESTimeline</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">project</span><span class="p">,</span> <span class="n">timeline</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a> that complete loading</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project-asset-removed" c_name="ges_project-asset-removed" python_name="GES.Project-asset-removed">GES.Project-asset-removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">asset</span><span class="o">-</span><span class="n">removed</span> <span class="p">(</span><span class="n">GESAsset</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">project</span><span class="p">,</span> <span class="n">asset</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>asset</em>: The <a href="#ges.asset">GES.Asset</a> that has been removed from @project</p>

<div class='prototype_end'></div>

<div class='prototype_start'></div>

<h3 id="ges.project-missing-uri" c_name="ges_project-missing-uri" python_name="GES.Project-missing-uri">GES.Project-missing-uri</h3>
<pre><code class="highlight c"><span class="n">gchar</span><span class="o">*</span> <span class="n">missing</span><span class="o">-</span><span class="n">uri</span> <span class="p">(</span><span class="n">GError</span> <span class="n">error</span><span class="p">,</span>
                    <span class="n">GESAsset</span> <span class="n">wrong_asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">project</span><span class="p">,</span> <span class="n">error</span><span class="p">,</span> <span class="n">wrong_asset</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>error</em>: The error that happened</p>

<p><em>wrong_asset</em>: The asset with the wrong ID, you should us it and its content
only to find out what the new location is.</p>

<p><em>Returns</em>: The new URI of <strong>wrong_asset</strong></p>

<div class='prototype_end'></div>

<pre class="inlined_code">
static gchar
source_moved_cb (GESProject *project, GError *error, GESAsset *asset_with_error)
{
  return g_strdup ("file:///the/new/uri.ogg");
}

static int
main (int argc, gchar ** argv)
{
  GESTimeline *timeline;
  GESProject *project = ges_project_new ("file:///some/uri.xges");

  g_signal_connect (project, "missing-uri", source_moved_cb, NULL);
  timeline = ges_asset_extract (GES_ASSET (project));
}
</pre>

<div class='prototype_start'></div>

<h3 id="ges.project-error-loading-asset" c_name="ges_project-error-loading-asset" python_name="GES.Project-error-loading-asset">GES.Project-error-loading-asset</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">error</span><span class="o">-</span><span class="n">loading</span><span class="o">-</span><span class="n">asset</span> <span class="p">(</span><span class="n">GError</span> <span class="n">error</span><span class="p">,</span>
                          <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                          <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">project</span><span class="p">,</span> <span class="n">error</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">extractable_type</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>error</em>: The <a href="https://developer.gnome.org/glib/unstable//glib-Error-Reporting.html#GError">GLib.Error</a> defining the error that accured, might be <strong>NULL</strong></p>

<p><em>id</em>: The <strong>id</strong> of the asset that failed loading</p>

<p><em>extractable_type</em>: The <strong>extractable_type</strong> of the asset that
failed loading</p>

<div class='prototype_end'></div>

<p>Informs you that a <a href="#ges.asset">GES.Asset</a> could not be created. In case of
missing GStreamer plugins, the error will be set to (FIXME broken link)GST_CORE_ERROR
(FIXME broken link)GST_CORE_ERROR_MISSING_PLUGIN</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
