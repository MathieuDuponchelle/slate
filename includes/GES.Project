<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.project" c_name="GESProject" python_name="GES.Project" shell_name="The Project">GES.Project</h2>

<p class="graphviz">
<!-- Generated by graphviz version 2.38.0 (20140413.2041) --><!-- Title: %3 Pages: 1 --><svg width="490pt" height="260pt" viewBox="0.00 0.00 490.00 260.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 256)"><title>%3</title><polygon fill="white" stroke="none" points="-4,4 -4,-256 486,-256 486,4 -4,4"/><!-- GObject.Object --><g id="node1" class="node"><title>GObject.Object</title><g id="a_node1"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GObject" xlink:title="GObject.Object"><path fill="none" stroke="black" d="M90,-180C90,-180 12,-180 12,-180 6,-180 0,-174 0,-168 0,-168 0,-156 0,-156 0,-150 6,-144 12,-144 12,-144 90,-144 90,-144 96,-144 102,-150 102,-156 102,-156 102,-168 102,-168 102,-174 96,-180 90,-180"/><text text-anchor="middle" x="51" y="-158.3" font-family="Times,serif" font-size="14.00">GObject.Object</text></a></g></g><!-- GES.Asset --><g id="node2" class="node"><title>GES.Asset</title><g id="a_node2"><a xlink:href="#ges.asset" xlink:title="GES.Asset"><path fill="none" stroke="black" d="M280,-108C280,-108 228,-108 228,-108 222,-108 216,-102 216,-96 216,-96 216,-84 216,-84 216,-78 222,-72 228,-72 228,-72 280,-72 280,-72 286,-72 292,-78 292,-84 292,-84 292,-96 292,-96 292,-102 286,-108 280,-108"/><text text-anchor="middle" x="254" y="-86.3" font-family="Times,serif" font-size="14.00">GES.Asset</text></a></g></g><!-- GObject.Object&#45;&gt;GES.Asset --><g id="edge1" class="edge"><title>GObject.Object&#45;&gt;GES.Asset</title><path fill="none" stroke="black" d="M100.4,-143.966C132.626,-132.853 174.466,-118.425 206.339,-107.435"/><polygon fill="black" stroke="black" points="207.576,-110.711 215.888,-104.142 205.294,-104.093 207.576,-110.711"/></g><!-- GES.Project --><g id="node3" class="node"><title>GES.Project</title><g id="a_node3"><a xlink:href="#ges.project" xlink:title="GES.Project"><path fill="none" stroke="black" d="M284,-36C284,-36 224,-36 224,-36 218,-36 212,-30 212,-24 212,-24 212,-12 212,-12 212,-6 218,-0 224,-0 224,-0 284,-0 284,-0 290,-0 296,-6 296,-12 296,-12 296,-24 296,-24 296,-30 290,-36 284,-36"/><text text-anchor="middle" x="254" y="-14.3" font-family="Times,serif" font-size="14.00">GES.Project</text></a></g></g><!-- GES.Asset&#45;&gt;GES.Project --><g id="edge2" class="edge"><title>GES.Asset&#45;&gt;GES.Project</title><path fill="none" stroke="black" d="M254,-71.6966C254,-63.9827 254,-54.7125 254,-46.1124"/><polygon fill="black" stroke="black" points="257.5,-46.1043 254,-36.1043 250.5,-46.1044 257.5,-46.1043"/></g><!-- GObject.GInterface --><g id="node4" class="node"><title>GObject.GInterface</title><g id="a_node4"><a xlink:href="#index" xlink:title="GObject.GInterface"><path fill="none" stroke="black" d="M374,-252C374,-252 274,-252 274,-252 268,-252 262,-246 262,-240 262,-240 262,-228 262,-228 262,-222 268,-216 274,-216 274,-216 374,-216 374,-216 380,-216 386,-222 386,-228 386,-228 386,-240 386,-240 386,-246 380,-252 374,-252"/><text text-anchor="middle" x="324" y="-230.3" font-family="Times,serif" font-size="14.00">GObject.GInterface</text></a></g></g><!-- GES.MetaContainer --><g id="node5" class="node"><title>GES.MetaContainer</title><g id="a_node5"><a xlink:href="#ges.metacontainer" xlink:title="GES.MetaContainer"><path fill="none" stroke="black" d="M236,-180C236,-180 132,-180 132,-180 126,-180 120,-174 120,-168 120,-168 120,-156 120,-156 120,-150 126,-144 132,-144 132,-144 236,-144 236,-144 242,-144 248,-150 248,-156 248,-156 248,-168 248,-168 248,-174 242,-180 236,-180"/><text text-anchor="middle" x="184" y="-158.3" font-family="Times,serif" font-size="14.00">GES.MetaContainer</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.MetaContainer --><g id="edge3" class="edge"><title>GObject.GInterface&#45;&gt;GES.MetaContainer</title><path fill="none" stroke="black" d="M289.752,-215.876C270.939,-206.469 247.415,-194.708 227.334,-184.667"/><polygon fill="black" stroke="black" points="228.889,-181.531 218.38,-180.19 225.759,-187.792 228.889,-181.531"/></g><!-- Gio.AsyncInitable --><g id="node6" class="node"><title>Gio.AsyncInitable</title><g id="a_node6"><a xlink:href="https://developer.gnome.org/gio/unstable//GAsyncInitable.html" xlink:title="Gio.AsyncInitable"><path fill="none" stroke="black" d="M370,-180C370,-180 278,-180 278,-180 272,-180 266,-174 266,-168 266,-168 266,-156 266,-156 266,-150 272,-144 278,-144 278,-144 370,-144 370,-144 376,-144 382,-150 382,-156 382,-156 382,-168 382,-168 382,-174 376,-180 370,-180"/><text text-anchor="middle" x="324" y="-158.3" font-family="Times,serif" font-size="14.00">Gio.AsyncInitable</text></a></g></g><!-- GObject.GInterface&#45;&gt;Gio.AsyncInitable --><g id="edge4" class="edge"><title>GObject.GInterface&#45;&gt;Gio.AsyncInitable</title><path fill="none" stroke="black" d="M324,-215.697C324,-207.983 324,-198.712 324,-190.112"/><polygon fill="black" stroke="black" points="327.5,-190.104 324,-180.104 320.5,-190.104 327.5,-190.104"/></g><!-- Gio.Initable --><g id="node7" class="node"><title>Gio.Initable</title><g id="a_node7"><a xlink:href="https://developer.gnome.org/gio/unstable//GInitable.html" xlink:title="Gio.Initable"><path fill="none" stroke="black" d="M470,-180C470,-180 412,-180 412,-180 406,-180 400,-174 400,-168 400,-168 400,-156 400,-156 400,-150 406,-144 412,-144 412,-144 470,-144 470,-144 476,-144 482,-150 482,-156 482,-156 482,-168 482,-168 482,-174 476,-180 470,-180"/><text text-anchor="middle" x="441" y="-158.3" font-family="Times,serif" font-size="14.00">Gio.Initable</text></a></g></g><!-- GObject.GInterface&#45;&gt;Gio.Initable --><g id="edge5" class="edge"><title>GObject.GInterface&#45;&gt;Gio.Initable</title><path fill="none" stroke="black" d="M352.621,-215.876C367.919,-206.724 386.943,-195.342 403.418,-185.485"/><polygon fill="black" stroke="black" points="405.484,-188.327 412.269,-180.19 401.89,-182.32 405.484,-188.327"/></g><!-- GES.MetaContainer&#45;&gt;GES.Asset --><g id="edge6" class="edge"><title>GES.MetaContainer&#45;&gt;GES.Asset</title><path fill="none" stroke="black" d="M201.303,-143.697C209.865,-135.135 220.344,-124.656 229.696,-115.304"/><polygon fill="black" stroke="black" points="232.299,-117.65 236.896,-108.104 227.35,-112.701 232.299,-117.65"/></g><!-- Gio.AsyncInitable&#45;&gt;GES.Asset --><g id="edge7" class="edge"><title>Gio.AsyncInitable&#45;&gt;GES.Asset</title><path fill="none" stroke="black" d="M306.697,-143.697C298.135,-135.135 287.656,-124.656 278.304,-115.304"/><polygon fill="black" stroke="black" points="280.65,-112.701 271.104,-108.104 275.701,-117.65 280.65,-112.701"/></g><!-- Gio.Initable&#45;&gt;GES.Asset --><g id="edge8" class="edge"><title>Gio.Initable&#45;&gt;GES.Asset</title><path fill="none" stroke="black" d="M399.962,-145.638C370.955,-134.78 331.988,-120.193 301.612,-108.823"/><polygon fill="black" stroke="black" points="302.668,-105.481 292.076,-105.253 300.214,-112.037 302.668,-105.481"/></g></g></svg></p>

<p>The <a href="#ges.project">GES.Project</a> is used to control a set of <a href="#ges.asset">GES.Asset</a> and is a
<a href="#ges.asset">GES.Asset</a> with (FIXME broken link)GES_TYPE_TIMELINE as @extractable_type itself. That
means that you can extract <a href="#ges.timeline">GES.Timeline</a> from a project as followed:</p>

<pre class="inlined_code">
 GESProject *project;
 GESTimeline *timeline;

 project = ges_project_new ("file:///path/to/a/valid/project/uri");

 // Here you can connect to the various signal to get more infos about
 // what is happening and recover from errors if possible
 ...

 timeline = ges_asset_extract (GES_ASSET (project));
</pre>

<p>The <a href="#ges.project">GES.Project</a> class offers a higher level API to handle <a href="#ges.asset">GES.Asset</a>-s.
It lets you request new asset, and it informs you about new assets through
a set of signals. Also it handles problem such as missing files/missing
<a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> and lets you try to recover from those.</p>

<p><h3 id='gobject-properties'><u>GObject properties:</u></h3>
<h3 id="ges.project:uri">GES.Project:uri</h3></p>

<h3 id='methods'><u>Methods:</u></h3>

<h3 id="ges.project.add_asset" c_name="ges_project_add_asset" python_name="GES.Project.add_asset" shell_name="GES.Project.add_asset">GES.Project.add_asset</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_add_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_add_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>asset</em>: A <a href="#ges.asset">GES.Asset</a> to add to <strong>project</strong></p>

<p><em>Returns</em>: <strong>TRUE</strong> if the asset could be added <strong>FALSE</strong> it was already
in the project</p>

<p>Adds a (FIXME broken link)Asset to <strong>project</strong>, the project will keep a reference on
<strong>asset</strong>.</p>

<h3 id="ges.project.add_encoding_profile" c_name="ges_project_add_encoding_profile" python_name="GES.Project.add_encoding_profile" shell_name="GES.Project.add_encoding_profile">GES.Project.add_encoding_profile</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_add_encoding_profile</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                           <span class="n">GstEncodingProfile</span><span class="o">*</span> <span class="n">profile</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GstPbutils</span><span class="o">.</span><span class="n">EncodingProfile</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_encoding_profile</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">profile</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_add_encoding_profile()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>profile</em>: A <a href="FIXME%20broken%20link%20to%20EncodingProfile">GstPbutils.EncodingProfile</a> to add to the project. If a profile with
the same name already exists, it will be replaced</p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>profile</strong> could be added, <strong>FALSE</strong> otherwize</p>

<p>Adds <strong>profile</strong> to the project. It lets you save in what format
the project has been renders and keep a reference to those formats.
Also, those formats will be saves to the project file when possible.</p>

<h3 id="ges.project.create_asset" c_name="ges_project_create_asset" python_name="GES.Project.create_asset" shell_name="GES.Project.create_asset">GES.Project.create_asset</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_create_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                   <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                                   <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">create_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">extractable_type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_create_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>id</em>: The id of the asset to create and add to <strong>project</strong></p>

<p><em>extractable_type</em>: The <a href="FIXME%20broken%20link%20to%20Type">GLib.Type</a> of the asset to create</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the asset started to be added <strong>FALSE</strong> it was already
in the project</p>

<p>Create and add a <a href="#ges.asset">GES.Asset</a> to <strong>project</strong>. You should connect to the
&ldquo;asset-added&rdquo; signal to get the asset when it finally gets added to
<strong>project</strong></p>

<h3 id="ges.project.create_asset_sync" c_name="ges_project_create_asset_sync" python_name="GES.Project.create_asset_sync" shell_name="GES.Project.create_asset_sync">GES.Project.create_asset_sync</h3>
<pre><code class="highlight c"><span class="n">GESAsset</span><span class="o">*</span> <span class="n">ges_project_create_asset_sync</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                         <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                                         <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">,</span>
                                         <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>id</em>: The id of the asset to create and add to <strong>project</strong></p>

<p><em>extractable_type</em>: The <a href="FIXME%20broken%20link%20to%20Type">GLib.Type</a> of the asset to create</p>

<p><em>Returns</em>: The newly created <a href="#ges.asset">GES.Asset</a></p>

<p>Create and add a <a href="#ges.asset">GES.Asset</a> to <strong>project</strong>. You should connect to the
&ldquo;asset-added&rdquo; signal to get the asset when it finally gets added to
<strong>project</strong></p>

<h3 id="ges.project.get_asset" c_name="ges_project_get_asset" python_name="GES.Project.get_asset" shell_name="GES.Project.get_asset">GES.Project.get_asset</h3>
<pre><code class="highlight c"><span class="n">GESAsset</span><span class="o">*</span> <span class="n">ges_project_get_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                 <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                                 <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">extractable_type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_get_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>id</em>: The id of the asset to retrieve</p>

<p><em>extractable_type</em>: The extractable_type of the asset
to retrieve from @object</p>

<p><em>Returns</em>: The <a href="#ges.asset">GES.Asset</a> with
<strong>id</strong> or <strong>NULL</strong> if no asset with <strong>id</strong> as an ID</p>

<h3 id="ges.project.get_loading_assets" c_name="ges_project_get_loading_assets" python_name="GES.Project.get_loading_assets" shell_name="GES.Project.get_loading_assets">GES.Project.get_loading_assets</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_project_get_loading_assets</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_loading_assets</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_get_loading_assets()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>Returns</em>: A set of loading asset
that will be added to <strong>project</strong>. Note that those Asset are <em>not</em> loaded yet,
and thus can not be used</p>

<p>Get the assets that are being loaded</p>

<h3 id="ges.project.get_uri" c_name="ges_project_get_uri" python_name="GES.Project.get_uri" shell_name="GES.Project.get_uri">GES.Project.get_uri</h3>
<pre><code class="highlight c"><span class="n">gchar</span><span class="o">*</span> <span class="n">ges_project_get_uri</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_get_uri()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>Returns</em>: The uri that is set on <strong>project</strong></p>

<p>Retrieve the uri that is currently set on <strong>project</strong></p>

<h3 id="ges.project.list_assets" c_name="ges_project_list_assets" python_name="GES.Project.list_assets" shell_name="GES.Project.list_assets">GES.Project.list_assets</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_project_list_assets</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                <span class="n">GType</span> <span class="n">filter</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">list_assets</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">filter</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_list_assets()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>filter</em>: Type of assets to list, (FIXME broken link)GES_TYPE_EXTRACTABLE will list
all assets</p>

<p><em>Returns</em>: The list of
<a href="#ges.asset">GES.Asset</a> the object contains</p>

<p>List all @asset contained in <strong>project</strong> filtering per extractable_type
as defined by <strong>filter</strong>. It copies the asset and thus will not be updated
in time.</p>

<h3 id="ges.project.list_encoding_profiles" c_name="ges_project_list_encoding_profiles" python_name="GES.Project.list_encoding_profiles" shell_name="GES.Project.list_encoding_profiles">GES.Project.list_encoding_profiles</h3>
<pre><code class="highlight c"><span class="k">const</span> <span class="n">GList</span><span class="o">*</span> <span class="n">ges_project_list_encoding_profiles</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GstPbutils</span><span class="o">.</span><span class="n">EncodingProfile</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">list_encoding_profiles</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_list_encoding_profiles()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>Returns</em>: The
list of <a href="FIXME%20broken%20link%20to%20EncodingProfile">GstPbutils.EncodingProfile</a> used in <strong>project</strong></p>

<p>Lists the encoding profile that have been set to <strong>project</strong>. The first one
is the latest added.</p>

<h3 id="ges.project.load" c_name="ges_project_load" python_name="GES.Project.load" shell_name="GES.Project.load">GES.Project.load</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_load</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                           <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                           <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_load()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a> that has an @uri set already</p>

<p><em>timeline</em>: A blank timeline to load <strong>project</strong> into</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the project could be loaded <strong>FALSE</strong> otherwize.</p>

<p>Loads <strong>project</strong> into <strong>timeline</strong></p>

<h3 id="ges.project.remove_asset" c_name="ges_project_remove_asset" python_name="GES.Project.remove_asset" shell_name="GES.Project.remove_asset">GES.Project.remove_asset</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_remove_asset</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                                   <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_remove_asset()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a></p>

<p><em>asset</em>: A <a href="#ges.asset">GES.Asset</a> to remove from <strong>project</strong></p>

<p><em>Returns</em>: <strong>TRUE</strong> if the asset could be removed <strong>FALSE</strong> otherwise</p>

<p>remove a <strong>asset</strong> to from <strong>project</strong>.</p>

<h3 id="ges.project.save" c_name="ges_project_save" python_name="GES.Project.save" shell_name="GES.Project.save">GES.Project.save</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_project_save</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">project</span><span class="p">,</span>
                           <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                           <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                           <span class="n">GESAsset</span><span class="o">*</span> <span class="n">formatter_asset</span><span class="p">,</span>
                           <span class="n">gboolean</span> <span class="n">overwrite</span><span class="p">,</span>
                           <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Project</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">,</span> <span class="n">uri</span><span class="p">,</span> <span class="n">formatter_asset</span><span class="p">,</span> <span class="n">overwrite</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_project_save()</span>

</code></pre>

<p><em>project</em>: A <a href="#ges.project">GES.Project</a> to save</p>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a> to save, it must have been extracted from <strong>project</strong></p>

<p><em>uri</em>: The uri where to save <strong>project</strong> and <strong>timeline</strong></p>

<p><em>formatter_asset</em>: The formatter asset to use or <strong>NULL</strong>. If <strong>NULL</strong>,
will try to save in the same format as the one from which the timeline as been loaded
or default to the formatter with highest rank</p>

<p><em>overwrite</em>: <strong>TRUE</strong> to overwrite file if it exists</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the project could be save, <strong>FALSE</strong> otherwize</p>

<p>Save the timeline of <strong>project</strong> to <strong>uri</strong>. You should make sure that <strong>timeline</strong>
is one of the timelines that have been extracted from <strong>project</strong>
(using ges_asset_extract (<strong>project</strong>);)</p>

<h3 id="ges.project.new" c_name="ges_project_new" python_name="GES.Project.new" shell_name="GES.Project.new">GES.Project.new</h3>
<pre><code class="highlight c"><span class="n">GESProject</span><span class="o">*</span> <span class="n">ges_project_new</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">);</span>

</code></pre>

<p><em>id</em>: FIXME empty description
<em>Returns</em>: A newly created <a href="#ges.project">GES.Project</a></p>

<p>Creates a new <a href="#ges.project">GES.Project</a> and sets its uri to @uri if provided. Note that
if @uri is not valid or <strong>NULL</strong>, the uri of the project will then be set
the first time you save the project. If you then save the project to
other locations, it will never be updated again and the first valid URI is
the URI it will keep refering to.</p>

<h3 id='vfuncs'><u>Virtual Methods:</u></h3>

<h3 id="ges.project.do_missing_uri" c_name="ges_project_do_missing_uri" python_name="GES.Project.do_missing_uri" shell_name="GES.Project.do_missing_uri">GES.Project.do_missing_uri</h3>
<pre><code class="highlight c"><span class="n">gchar</span><span class="o">*</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">missing_uri</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                          <span class="n">GError</span><span class="o">*</span> <span class="n">error</span><span class="p">,</span>
                          <span class="n">GESAsset</span><span class="o">*</span> <span class="n">wrong_asset</span><span class="p">);</span>


</code></pre>

<p><em>self</em>: FIXME empty description
<em>error</em>: FIXME empty description
<em>wrong_asset</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.project.do_loading_error" c_name="ges_project_do_loading_error" python_name="GES.Project.do_loading_error" shell_name="GES.Project.do_loading_error">GES.Project.do_loading_error</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">loading_error</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                              <span class="n">GError</span><span class="o">*</span> <span class="n">error</span><span class="p">,</span>
                              <span class="n">gchar</span><span class="o">*</span> <span class="n">id</span><span class="p">,</span>
                              <span class="n">GType</span> <span class="n">extractable_type</span><span class="p">);</span>


</code></pre>

<p><em>self</em>: FIXME empty description
<em>error</em>: FIXME empty description
<em>id</em>: FIXME empty description
<em>extractable_type</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.project.do_asset_removed" c_name="ges_project_do_asset_removed" python_name="GES.Project.do_asset_removed" shell_name="GES.Project.do_asset_removed">GES.Project.do_asset_removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">asset_removed</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                          <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>


</code></pre>

<p><em>self</em>: FIXME empty description
<em>asset</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.project.do_asset_added" c_name="ges_project_do_asset_added" python_name="GES.Project.do_asset_added" shell_name="GES.Project.do_asset_added">GES.Project.do_asset_added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESProjectClass</span><span class="o">-&gt;</span><span class="n">asset_added</span> <span class="p">(</span><span class="n">GESProject</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                        <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>


</code></pre>

<p><em>self</em>: FIXME empty description
<em>asset</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
