<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.track" c_name="GESTrack" python_name="GES.Track">GES.Track</h2>

<p>Corresponds to one output format (i.e. audio OR video).</p>

<p>Contains the compatible TrackElement(s).</p>

<p><h3 id='rUQxSK' class='subsection'><u>GObject properties:</u></h3>
<h3 id="ges.track-caps" c_name="GES.Track-caps" python_name="GES.Track-caps">GES.Track-caps</h3></p>

<p>Caps used to filter/choose the output stream. This is generally set to
a generic set of caps like &lsquo;video/x-raw&rsquo; for raw video.</p>

<p>Default value: (FIXME broken link)GST_CAPS_ANY.</p>

<h3 id="ges.track-duration" c_name="GES.Track-duration" python_name="GES.Track-duration">GES.Track-duration</h3>

<p>Current duration of the track</p>

<p>Default value: O</p>

<h3 id="ges.track-mixing" c_name="GES.Track-mixing" python_name="GES.Track-mixing">GES.Track-mixing</h3>

<p>Whether layer mixing is activated or not on the track.</p>

<h3 id="ges.track-restriction-caps" c_name="GES.Track-restriction-caps" python_name="GES.Track-restriction-caps">GES.Track-restriction-caps</h3>

<p>Caps used to filter/choose the output stream.</p>

<p>Default value: (FIXME broken link)GST_CAPS_ANY.</p>

<h3 id="ges.track-track-type" c_name="GES.Track-track-type" python_name="GES.Track-track-type">GES.Track-track-type</h3>

<p>Type of stream the track outputs. This is used when creating the <a href="#ges.track">GES.Track</a>
to specify in generic terms what type of content will be outputted.</p>

<p>It also serves as a &#39;fast&rsquo; way to check what type of data will be outputted
from the <a href="#ges.track">GES.Track</a> without having to actually check the <a href="#ges.track">GES.Track</a>&rsquo;s caps
property.</p>

<h3 id='rcylBS' class='subsection'><u>Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.track.add_element" c_name="ges_track_add_element" python_name="GES.Track.add_element">GES.Track.add_element</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_add_element</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                <span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_element</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">object</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_add_element()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>object</em>: the <a href="#ges.trackelement">GES.TrackElement</a> to add</p>

<p><em>Returns</em>: (FIXME broken link)TRUE if the object was properly added. (FIXME broken link)FALSE if the track does not
want to accept the object.</p>

<div class='prototype_end'></div>

<p>Adds the given object to the track. Sets the object&rsquo;s controlling track,
and thus takes ownership of the <strong>object</strong>.</p>

<p>An object can only be added to one track.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.commit" c_name="ges_track_commit" python_name="GES.Track.commit">GES.Track.commit</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_commit</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">commit</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_commit()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if something as been commited <strong>FALSE</strong> if nothing needed
to be commited</p>

<div class='prototype_end'></div>

<p>Commits all the pending changes of the TrackElement contained in the
track.</p>

<p>When timing changes happen in a timeline, the changes are not
directly done inside NLE. This method needs to be called so any changes
on a clip contained in the timeline actually happen at the media
processing level.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.get_caps" c_name="ges_track_get_caps" python_name="GES.Track.get_caps">GES.Track.get_caps</h3>
<pre><code class="highlight c"><span class="k">const</span> <span class="n">GstCaps</span><span class="o">*</span> <span class="n">ges_track_get_caps</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">Caps</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_caps</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_get_caps()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>Returns</em>: The <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstCaps.html">Gst.Caps</a> this track is configured to output.</p>

<div class='prototype_end'></div>

<p>Get the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstCaps.html">Gst.Caps</a> this track is configured to output.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.get_elements" c_name="ges_track_get_elements" python_name="GES.Track.get_elements">GES.Track.get_elements</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_track_get_elements</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_elements</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_get_elements()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>Returns</em>: the list of
<a href="#ges.trackelement">GES.TrackElement</a> present in the Track sorted by priority and start.</p>

<div class='prototype_end'></div>

<p>Gets the <a href="#ges.trackelement">GES.TrackElement</a> contained in <strong>track</strong></p>

<div class='prototype_start'></div>

<h3 id="ges.track.get_mixing" c_name="ges_track_get_mixing" python_name="GES.Track.get_mixing">GES.Track.get_mixing</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_get_mixing</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_mixing</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_get_mixing()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>Returns</em>: (FIXME broken link)True if there is a mixer, (FIXME broken link)False otherwise.</p>

<div class='prototype_end'></div>

<p>Gets if the underlying (FIXME broken link)NleComposition contains an expandable mixer.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.get_timeline" c_name="ges_track_get_timeline" python_name="GES.Track.get_timeline">GES.Track.get_timeline</h3>
<pre><code class="highlight c"><span class="k">const</span> <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">ges_track_get_timeline</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_timeline</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_get_timeline()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>Returns</em>: The <a href="#ges.timeline">GES.Timeline</a> this track belongs to. Can be <strong>NULL</strong>.</p>

<div class='prototype_end'></div>

<p>Get the <a href="#ges.timeline">GES.Timeline</a> this track belongs to. Can be <strong>NULL</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.remove_element" c_name="ges_track_remove_element" python_name="GES.Track.remove_element">GES.Track.remove_element</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_remove_element</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                   <span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_element</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">object</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_remove_element()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>object</em>: the <a href="#ges.trackelement">GES.TrackElement</a> to remove</p>

<p><em>Returns</em>: (FIXME broken link)TRUE if the object was removed, else (FIXME broken link)FALSE if the track
could not remove the object (like if it didn&rsquo;t belong to the track).</p>

<div class='prototype_end'></div>

<p>Removes the object from the track and unparents it.
Unparenting it means the reference owned by <strong>track</strong> on the <strong>object</strong> will be
removed. If you wish to use the <strong>object</strong> after this function, make sure you
call <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html#gst-object-ref">gst_object_ref</a> before removing it from the <strong>track</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.set_create_element_for_gap_func" c_name="ges_track_set_create_element_for_gap_func">GES.Track.set_create_element_for_gap_func</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_set_create_element_for_gap_func</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                                <span class="n">GESCreateElementForGapFunc</span> <span class="n">func</span><span class="p">);</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>func</em>: The <a href="#ges.createelementforgapfunc">GES.CreateElementForGapFunc</a> that will be used
to create <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> to fill gaps</p>

<div class='prototype_end'></div>

<p>Sets the function that should be used to create the GstElement used to fill gaps.
To avoid to provide such a function we advice you to use the
(FIXME broken link)ges_audio_track_new and (FIXME broken link)ges_video_track_new constructor when possible.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.set_mixing" c_name="ges_track_set_mixing" python_name="GES.Track.set_mixing">GES.Track.set_mixing</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_set_mixing</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                           <span class="n">gboolean</span> <span class="n">mixing</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_mixing</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mixing</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_set_mixing()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>mixing</em>: TRUE if the track should be mixing, FALSE otherwise.</p>

<div class='prototype_end'></div>

<p>Sets if the <a href="#ges.track">GES.Track</a> should be mixing.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.set_restriction_caps" c_name="ges_track_set_restriction_caps" python_name="GES.Track.set_restriction_caps">GES.Track.set_restriction_caps</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_set_restriction_caps</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                     <span class="k">const</span> <span class="n">GstCaps</span><span class="o">*</span> <span class="n">caps</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">Caps</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_restriction_caps</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">caps</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_set_restriction_caps()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>caps</em>: the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstCaps.html">Gst.Caps</a> to set</p>

<div class='prototype_end'></div>

<p>Sets the given <strong>caps</strong> as the caps the track has to output.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.set_timeline" c_name="ges_track_set_timeline" python_name="GES.Track.set_timeline">GES.Track.set_timeline</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_set_timeline</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                             <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_timeline</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_set_timeline()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<div class='prototype_end'></div>

<p>Sets <strong>timeline</strong> as the timeline controlling <strong>track</strong>.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.update_restriction_caps" c_name="ges_track_update_restriction_caps" python_name="GES.Track.update_restriction_caps">GES.Track.update_restriction_caps</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_update_restriction_caps</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                        <span class="k">const</span> <span class="n">GstCaps</span><span class="o">*</span> <span class="n">caps</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">Caps</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">update_restriction_caps</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">caps</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_update_restriction_caps()</span>

</code></pre>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a></p>

<p><em>caps</em>: the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstCaps.html">Gst.Caps</a> to update with</p>

<div class='prototype_end'></div>

<p>Updates the restriction caps by modifying all the fields present in <strong>caps</strong>
in the original restriction caps. If for example the current restriction caps
are video/x-raw, format=I420, width=360 and <strong>caps</strong> is video/x-raw, format=RGB,
the restriction caps will be updated to video/x-raw, format=RGB, width=360.</p>

<p>Modification happens for each structure in the new caps, and
one can add new fields or structures through that function.</p>

<div class='prototype_start'></div>

<h3 id="ges.track.new" c_name="ges_track_new">GES.Track.new</h3>
<pre><code class="highlight c"><span class="n">GESTrack</span><span class="o">*</span> <span class="n">ges_track_new</span> <span class="p">(</span><span class="n">GESTrackType</span> <span class="n">type</span><span class="p">,</span>
                         <span class="n">GstCaps</span><span class="o">*</span> <span class="n">caps</span><span class="p">);</span>

</code></pre>

<p><em>type</em>: The type of track</p>

<p><em>caps</em>: The caps to restrict the output of the track to.</p>

<p><em>Returns</em>: A new <a href="#ges.track">GES.Track</a>.</p>

<div class='prototype_end'></div>

<p>Creates a new <a href="#ges.track">GES.Track</a> with the given <strong>type</strong> and <strong>caps</strong>.</p>

<p>The newly created track will steal a reference to the caps. If you wish to
use those caps elsewhere, you will have to take an extra reference.</p>

<h3 id='HNcEDv' class='subsection'><u>Virtual Methods:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.track.do_get_mixing_element" c_name="GESTrackClass:get_mixing_element">GES.Track.do_get_mixing_element</h3>
<pre><code class="highlight c"><span class="n">GstElement</span><span class="o">*</span> <span class="n">GESTrackClass</span><span class="o">-&gt;</span><span class="n">get_mixing_element</span> <span class="p">(</span><span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>

<p><em>track</em>: FIXME empty description</p>

<p><em>Returns</em>: FIXME empty description</p>

<div class='prototype_end'></div>

<h3 id='dBKNGk' class='subsection'><u>Signals:</u></h3>

<div class='prototype_start'></div>

<h3 id="ges.track-track-element-added" c_name="ges_track-track-element-added" python_name="GES.Track-track-element-added">GES.Track-track-element-added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">track</span><span class="o">-</span><span class="n">element</span><span class="o">-</span><span class="n">added</span> <span class="p">(</span><span class="n">GESTrackElement</span> <span class="n">effect</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">track</span><span class="p">,</span> <span class="n">effect</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>effect</em>: the <a href="#ges.trackelement">GES.TrackElement</a> that was added.</p>

<div class='prototype_end'></div>

<p>Will be emitted after a track element was added to the track.</p>

<div class='prototype_start'></div>

<h3 id="ges.track-track-element-removed" c_name="ges_track-track-element-removed" python_name="GES.Track-track-element-removed">GES.Track-track-element-removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">track</span><span class="o">-</span><span class="n">element</span><span class="o">-</span><span class="n">removed</span> <span class="p">(</span><span class="n">GESTrackElement</span> <span class="n">effect</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">track</span><span class="p">,</span> <span class="n">effect</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<p><em>effect</em>: the <a href="#ges.trackelement">GES.TrackElement</a> that was removed.</p>

<div class='prototype_end'></div>

<p>Will be emitted after a track element was removed from the track.</p>

<div class='prototype_start'></div>

<h3 id="ges.track-commited" c_name="ges_track-commited" python_name="GES.Track-commited">GES.Track-commited</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">commited</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">track</span><span class="p">,</span> <span class="n">user_param1</span><span class="p">,</span> <span class="o">...</span><span class="p">)</span>

</code></pre>

<div class='prototype_end'></div>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
