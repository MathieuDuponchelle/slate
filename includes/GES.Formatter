<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.formatter" c_name="GESFormatter" python_name="GES.Formatter" shell_name="The Formatter">GES.Formatter</h2>

<p class="graphviz">
<!-- Generated by graphviz version 2.38.0 (20140413.2041) --><!-- Title: %3 Pages: 1 --><svg width="303pt" height="188pt" viewBox="0.00 0.00 302.50 188.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 184)"><title>%3</title><polygon fill="white" stroke="none" points="-4,4 -4,-184 298.5,-184 298.5,4 -4,4"/><!-- GObject.GInterface --><g id="node1" class="node"><title>GObject.GInterface</title><g id="a_node1"><a xlink:href="#index" xlink:title="GObject.GInterface"><path fill="none" stroke="black" d="M112,-180C112,-180 12,-180 12,-180 6,-180 0,-174 0,-168 0,-168 0,-156 0,-156 0,-150 6,-144 12,-144 12,-144 112,-144 112,-144 118,-144 124,-150 124,-156 124,-156 124,-168 124,-168 124,-174 118,-180 112,-180"/><text text-anchor="middle" x="62" y="-158.3" font-family="Times,serif" font-size="14.00">GObject.GInterface</text></a></g></g><!-- GES.Extractable --><g id="node2" class="node"><title>GES.Extractable</title><g id="a_node2"><a xlink:href="#ges.extractable" xlink:title="GES.Extractable"><path fill="none" stroke="black" d="M103.5,-108C103.5,-108 20.5,-108 20.5,-108 14.5,-108 8.5,-102 8.5,-96 8.5,-96 8.5,-84 8.5,-84 8.5,-78 14.5,-72 20.5,-72 20.5,-72 103.5,-72 103.5,-72 109.5,-72 115.5,-78 115.5,-84 115.5,-84 115.5,-96 115.5,-96 115.5,-102 109.5,-108 103.5,-108"/><text text-anchor="middle" x="62" y="-86.3" font-family="Times,serif" font-size="14.00">GES.Extractable</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.Extractable --><g id="edge1" class="edge"><title>GObject.GInterface&#45;&gt;GES.Extractable</title><path fill="none" stroke="black" d="M62,-143.697C62,-135.983 62,-126.712 62,-118.112"/><polygon fill="black" stroke="black" points="65.5001,-118.104 62,-108.104 58.5001,-118.104 65.5001,-118.104"/></g><!-- GES.Formatter --><g id="node3" class="node"><title>GES.Formatter</title><g id="a_node3"><a xlink:href="#ges.formatter" xlink:title="GES.Formatter"><path fill="none" stroke="black" d="M176,-36C176,-36 100,-36 100,-36 94,-36 88,-30 88,-24 88,-24 88,-12 88,-12 88,-6 94,-0 100,-0 100,-0 176,-0 176,-0 182,-0 188,-6 188,-12 188,-12 188,-24 188,-24 188,-30 182,-36 176,-36"/><text text-anchor="middle" x="138" y="-14.3" font-family="Times,serif" font-size="14.00">GES.Formatter</text></a></g></g><!-- GES.Extractable&#45;&gt;GES.Formatter --><g id="edge2" class="edge"><title>GES.Extractable&#45;&gt;GES.Formatter</title><path fill="none" stroke="black" d="M80.7865,-71.6966C90.174,-63.0503 101.684,-52.4486 111.913,-43.027"/><polygon fill="black" stroke="black" points="114.445,-45.4535 119.43,-36.1043 109.703,-40.3047 114.445,-45.4535"/></g><!-- GObject.Object --><g id="node4" class="node"><title>GObject.Object</title><g id="a_node4"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GObject" xlink:title="GObject.Object"><path fill="none" stroke="black" d="M253,-180C253,-180 175,-180 175,-180 169,-180 163,-174 163,-168 163,-168 163,-156 163,-156 163,-150 169,-144 175,-144 175,-144 253,-144 253,-144 259,-144 265,-150 265,-156 265,-156 265,-168 265,-168 265,-174 259,-180 253,-180"/><text text-anchor="middle" x="214" y="-158.3" font-family="Times,serif" font-size="14.00">GObject.Object</text></a></g></g><!-- GObject.InitiallyUnowned --><g id="node5" class="node"><title>GObject.InitiallyUnowned</title><g id="a_node5"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GInitiallyUnowned" xlink:title="GObject.InitiallyUnowned"><path fill="none" stroke="black" d="M282.5,-108C282.5,-108 145.5,-108 145.5,-108 139.5,-108 133.5,-102 133.5,-96 133.5,-96 133.5,-84 133.5,-84 133.5,-78 139.5,-72 145.5,-72 145.5,-72 282.5,-72 282.5,-72 288.5,-72 294.5,-78 294.5,-84 294.5,-84 294.5,-96 294.5,-96 294.5,-102 288.5,-108 282.5,-108"/><text text-anchor="middle" x="214" y="-86.3" font-family="Times,serif" font-size="14.00">GObject.InitiallyUnowned</text></a></g></g><!-- GObject.Object&#45;&gt;GObject.InitiallyUnowned --><g id="edge3" class="edge"><title>GObject.Object&#45;&gt;GObject.InitiallyUnowned</title><path fill="none" stroke="black" d="M214,-143.697C214,-135.983 214,-126.712 214,-118.112"/><polygon fill="black" stroke="black" points="217.5,-118.104 214,-108.104 210.5,-118.104 217.5,-118.104"/></g><!-- GObject.InitiallyUnowned&#45;&gt;GES.Formatter --><g id="edge4" class="edge"><title>GObject.InitiallyUnowned&#45;&gt;GES.Formatter</title><path fill="none" stroke="black" d="M195.213,-71.6966C185.826,-63.0503 174.316,-52.4486 164.087,-43.027"/><polygon fill="black" stroke="black" points="166.297,-40.3047 156.57,-36.1043 161.555,-45.4535 166.297,-40.3047"/></g></g></svg></p>

<p>Base class for timeline data serialization and deserialization.</p>

<p><h3 id='methods'><u>Methods:</u></h3>
<h3 id="ges.formatter.load_from_uri" c_name="ges_formatter_load_from_uri" python_name="GES.Formatter.load_from_uri" shell_name="GES.Formatter.load_from_uri">GES.Formatter.load_from_uri</h3></p>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_formatter_load_from_uri</span> <span class="p">(</span><span class="n">GESFormatter</span><span class="o">*</span> <span class="n">formatter</span><span class="p">,</span>
                                      <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                      <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                      <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Formatter</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">load_from_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">,</span> <span class="n">uri</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_formatter_load_from_uri()</span>

</code></pre>

<p><em>formatter</em>: a <a href="#ges.formatter">GES.Formatter</a></p>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>uri</em>: a (FIXME broken link)gchar * pointing to a URI</p>

<p><em>Returns</em>: TRUE if the timeline data was successfully loaded from the URI,
else FALSE.</p>

<p>Load data from the given URI into timeline.</p>

<h3 id="ges.formatter.save_to_uri" c_name="ges_formatter_save_to_uri" python_name="GES.Formatter.save_to_uri" shell_name="GES.Formatter.save_to_uri">GES.Formatter.save_to_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_formatter_save_to_uri</span> <span class="p">(</span><span class="n">GESFormatter</span><span class="o">*</span> <span class="n">formatter</span><span class="p">,</span>
                                    <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                    <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                    <span class="n">gboolean</span> <span class="n">overwrite</span><span class="p">,</span>
                                    <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Formatter</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">save_to_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">,</span> <span class="n">uri</span><span class="p">,</span> <span class="n">overwrite</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_formatter_save_to_uri()</span>

</code></pre>

<p><em>formatter</em>: a <a href="#ges.formatter">GES.Formatter</a></p>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>uri</em>: a (FIXME broken link)gchar * pointing to a URI</p>

<p><em>overwrite</em>: <strong>TRUE</strong> to overwrite file if it exists</p>

<p><em>Returns</em>: TRUE if the timeline data was successfully saved to the URI
else FALSE.</p>

<p>Save data from timeline to the given URI.</p>

<h3 id="ges.formatter.can_load_uri" c_name="ges_formatter_can_load_uri" python_name="GES.Formatter.can_load_uri" shell_name="GES.Formatter.can_load_uri">GES.Formatter.can_load_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_formatter_can_load_uri</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                     <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">can_load_uri</span><span class="p">(</span><span class="n">uri</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_formatter_can_load_uri()</span>

</code></pre>

<p><em>uri</em>: a (FIXME broken link)gchar * pointing to the URI</p>

<p><em>Returns</em>: TRUE if there is a <a href="#ges.formatter">GES.Formatter</a> that can support the given uri
or FALSE if not.</p>

<p>Checks if there is a <a href="#ges.formatter">GES.Formatter</a> available which can load a <a href="#ges.timeline">GES.Timeline</a>
from the given URI.</p>

<h3 id="ges.formatter.can_save_uri" c_name="ges_formatter_can_save_uri" python_name="GES.Formatter.can_save_uri" shell_name="GES.Formatter.can_save_uri">GES.Formatter.can_save_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_formatter_can_save_uri</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                     <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">can_save_uri</span><span class="p">(</span><span class="n">uri</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_formatter_can_save_uri()</span>

</code></pre>

<p><em>uri</em>: a (FIXME broken link)gchar * pointing to a URI</p>

<p><em>Returns</em>: TRUE if the given <strong>uri</strong> is supported, else FALSE.</p>

<p>Returns TRUE if there is a <a href="#ges.formatter">GES.Formatter</a> available which can save a
<a href="#ges.timeline">GES.Timeline</a> to the given URI.</p>

<h3 id="ges.formatter.get_default" c_name="ges_formatter_get_default" python_name="GES.Formatter.get_default" shell_name="GES.Formatter.get_default">GES.Formatter.get_default</h3>
<pre><code class="highlight c"><span class="n">GESAsset</span><span class="o">*</span> <span class="n">ges_formatter_get_default</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_default</span><span class="p">():</span>
    <span class="c"># Python wrapper for ges_formatter_get_default()</span>

</code></pre>

<p><em>Returns</em>: The <a href="#ges.asset">GES.Asset</a> for the formatter with highest @rank</p>

<p>Get the default <a href="#ges.asset">GES.Asset</a> to use as formatter. It will return
the asset for the <a href="#ges.formatter">GES.Formatter</a> that has the highest @rank</p>

<h3 id='vfuncs'><u>Virtual Methods:</u></h3>

<h3 id="ges.formatter.do_save_to_uri" c_name="ges_formatter_do_save_to_uri" python_name="GES.Formatter.do_save_to_uri" shell_name="GES.Formatter.do_save_to_uri">GES.Formatter.do_save_to_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESFormatterClass</span><span class="o">-&gt;</span><span class="n">save_to_uri</span> <span class="p">(</span><span class="n">GESFormatter</span><span class="o">*</span> <span class="n">formatter</span><span class="p">,</span>
                            <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                            <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                            <span class="n">gboolean</span> <span class="n">overwrite</span><span class="p">,</span>
                            <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>


</code></pre>

<p><em>formatter</em>: a <a href="#ges.formatter">GES.Formatter</a></p>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>uri</em>: a (FIXME broken link)gchar * pointing to a URI</p>

<p><em>overwrite</em>: <strong>TRUE</strong> to overwrite file if it exists</p>

<p><em>Returns</em>: TRUE if the timeline data was successfully saved to the URI
else FALSE.</p>

<p>Save data from timeline to the given URI.</p>

<h3 id="ges.formatter.do_can_load_uri" c_name="ges_formatter_do_can_load_uri" python_name="GES.Formatter.do_can_load_uri" shell_name="GES.Formatter.do_can_load_uri">GES.Formatter.do_can_load_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESFormatterClass</span><span class="o">-&gt;</span><span class="n">can_load_uri</span> <span class="p">(</span><span class="n">GESFormatter</span><span class="o">*</span> <span class="n">dummy_instance</span><span class="p">,</span>
                             <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                             <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>


</code></pre>

<p><em>dummy_instance</em>: FIXME empty description
<em>uri</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.formatter.do_load_from_uri" c_name="ges_formatter_do_load_from_uri" python_name="GES.Formatter.do_load_from_uri" shell_name="GES.Formatter.do_load_from_uri">GES.Formatter.do_load_from_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESFormatterClass</span><span class="o">-&gt;</span><span class="n">load_from_uri</span> <span class="p">(</span><span class="n">GESFormatter</span><span class="o">*</span> <span class="n">formatter</span><span class="p">,</span>
                              <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                              <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                              <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>


</code></pre>

<p><em>formatter</em>: a <a href="#ges.formatter">GES.Formatter</a></p>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>uri</em>: a (FIXME broken link)gchar * pointing to a URI</p>

<p><em>Returns</em>: TRUE if the timeline data was successfully loaded from the URI,
else FALSE.</p>

<p>Load data from the given URI into timeline.</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
