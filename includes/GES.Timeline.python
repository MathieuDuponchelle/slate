<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <div>
<h2 class="PYTHON_API" id="GESTimeline-python">GES.Timeline</h2>
</div>

<p class="graphviz">
<!-- Generated by graphviz version 2.38.0 (20140413.2041) --><!-- Title: %3 Pages: 1 --><svg width="429pt" height="404pt" viewBox="0.00 0.00 429.00 404.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 400)"><title>%3</title><polygon fill="white" stroke="none" points="-4,4 -4,-400 425,-400 425,4 -4,4"/><!-- GObject.GInterface --><g id="node1" class="node"><title>GObject.GInterface</title><g id="a_node1"><a xlink:href="#index" xlink:title="GObject.GInterface"><path fill="none" stroke="black" d="M200.5,-252C200.5,-252 100.5,-252 100.5,-252 94.5,-252 88.5,-246 88.5,-240 88.5,-240 88.5,-228 88.5,-228 88.5,-222 94.5,-216 100.5,-216 100.5,-216 200.5,-216 200.5,-216 206.5,-216 212.5,-222 212.5,-228 212.5,-228 212.5,-240 212.5,-240 212.5,-246 206.5,-252 200.5,-252"/><text text-anchor="middle" x="150.5" y="-230.3" font-family="Times,serif" font-size="14.00">GObject.GInterface</text></a></g></g><!-- Gst.ChildProxy --><g id="node2" class="node"><title>Gst.ChildProxy</title><g id="a_node2"><a xlink:href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstChildProxy.html" xlink:title="Gst.ChildProxy"><path fill="none" stroke="black" d="M268,-180C268,-180 191,-180 191,-180 185,-180 179,-174 179,-168 179,-168 179,-156 179,-156 179,-150 185,-144 191,-144 191,-144 268,-144 268,-144 274,-144 280,-150 280,-156 280,-156 280,-168 280,-168 280,-174 274,-180 268,-180"/><text text-anchor="middle" x="229.5" y="-158.3" font-family="Times,serif" font-size="14.00">Gst.ChildProxy</text></a></g></g><!-- GObject.GInterface&#45;&gt;Gst.ChildProxy --><g id="edge1" class="edge"><title>GObject.GInterface&#45;&gt;Gst.ChildProxy</title><path fill="none" stroke="black" d="M170.028,-215.697C179.882,-206.965 191.986,-196.24 202.696,-186.75"/><polygon fill="black" stroke="black" points="205.033,-189.356 210.197,-180.104 200.391,-184.117 205.033,-189.356"/></g><!-- GES.Extractable --><g id="node3" class="node"><title>GES.Extractable</title><g id="a_node3"><a xlink:href="#ges.extractable" xlink:title="GES.Extractable"><path fill="none" stroke="black" d="M95,-108C95,-108 12,-108 12,-108 6,-108 -7.10543e-15,-102 -7.10543e-15,-96 -7.10543e-15,-96 -7.10543e-15,-84 -7.10543e-15,-84 -7.10543e-15,-78 6,-72 12,-72 12,-72 95,-72 95,-72 101,-72 107,-78 107,-84 107,-84 107,-96 107,-96 107,-102 101,-108 95,-108"/><text text-anchor="middle" x="53.5" y="-86.3" font-family="Times,serif" font-size="14.00">GES.Extractable</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.Extractable --><g id="edge2" class="edge"><title>GObject.GInterface&#45;&gt;GES.Extractable</title><path fill="none" stroke="black" d="M138.8,-215.871C121.904,-191.137 90.5529,-145.242 70.9273,-116.512"/><polygon fill="black" stroke="black" points="73.7727,-114.472 65.242,-108.189 67.9925,-118.421 73.7727,-114.472"/></g><!-- GES.MetaContainer --><g id="node4" class="node"><title>GES.MetaContainer</title><g id="a_node4"><a xlink:href="#ges.metacontainer" xlink:title="GES.MetaContainer"><path fill="none" stroke="black" d="M241.5,-108C241.5,-108 137.5,-108 137.5,-108 131.5,-108 125.5,-102 125.5,-96 125.5,-96 125.5,-84 125.5,-84 125.5,-78 131.5,-72 137.5,-72 137.5,-72 241.5,-72 241.5,-72 247.5,-72 253.5,-78 253.5,-84 253.5,-84 253.5,-96 253.5,-96 253.5,-102 247.5,-108 241.5,-108"/><text text-anchor="middle" x="189.5" y="-86.3" font-family="Times,serif" font-size="14.00">GES.MetaContainer</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.MetaContainer --><g id="edge3" class="edge"><title>GObject.GInterface&#45;&gt;GES.MetaContainer</title><path fill="none" stroke="black" d="M153.387,-215.747C156.596,-197.675 162.289,-168.559 169.5,-144 172.021,-135.413 175.277,-126.234 178.427,-117.968"/><polygon fill="black" stroke="black" points="181.771,-119.029 182.16,-108.441 175.253,-116.475 181.771,-119.029"/></g><!-- Gst.Bin --><g id="node5" class="node"><title>Gst.Bin</title><g id="a_node5"><a xlink:href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstBin.html" xlink:title="Gst.Bin"><path fill="none" stroke="black" d="M319,-108C319,-108 284,-108 284,-108 278,-108 272,-102 272,-96 272,-96 272,-84 272,-84 272,-78 278,-72 284,-72 284,-72 319,-72 319,-72 325,-72 331,-78 331,-84 331,-84 331,-96 331,-96 331,-102 325,-108 319,-108"/><text text-anchor="middle" x="301.5" y="-86.3" font-family="Times,serif" font-size="14.00">Gst.Bin</text></a></g></g><!-- Gst.ChildProxy&#45;&gt;Gst.Bin --><g id="edge4" class="edge"><title>Gst.ChildProxy&#45;&gt;Gst.Bin</title><path fill="none" stroke="black" d="M247.298,-143.697C256.104,-135.135 266.882,-124.656 276.501,-115.304"/><polygon fill="black" stroke="black" points="279.177,-117.585 283.907,-108.104 274.297,-112.566 279.177,-117.585"/></g><!-- GES.Timeline --><g id="node6" class="node"><title>GES.Timeline</title><g id="a_node6"><a xlink:href="#ges.timeline" xlink:title="GES.Timeline"><path fill="none" stroke="black" d="M225,-36C225,-36 154,-36 154,-36 148,-36 142,-30 142,-24 142,-24 142,-12 142,-12 142,-6 148,-0 154,-0 154,-0 225,-0 225,-0 231,-0 237,-6 237,-12 237,-12 237,-24 237,-24 237,-30 231,-36 225,-36"/><text text-anchor="middle" x="189.5" y="-14.3" font-family="Times,serif" font-size="14.00">GES.Timeline</text></a></g></g><!-- GES.Extractable&#45;&gt;GES.Timeline --><g id="edge6" class="edge"><title>GES.Extractable&#45;&gt;GES.Timeline</title><path fill="none" stroke="black" d="M86.7693,-71.8761C104.963,-62.5117 127.691,-50.8136 147.14,-40.803"/><polygon fill="black" stroke="black" points="148.813,-43.8782 156.103,-36.1898 145.61,-37.6543 148.813,-43.8782"/></g><!-- GES.MetaContainer&#45;&gt;GES.Timeline --><g id="edge7" class="edge"><title>GES.MetaContainer&#45;&gt;GES.Timeline</title><path fill="none" stroke="black" d="M189.5,-71.6966C189.5,-63.9827 189.5,-54.7125 189.5,-46.1124"/><polygon fill="black" stroke="black" points="193,-46.1043 189.5,-36.1043 186,-46.1044 193,-46.1043"/></g><!-- Gst.Bin&#45;&gt;GES.Timeline --><g id="edge5" class="edge"><title>Gst.Bin&#45;&gt;GES.Timeline</title><path fill="none" stroke="black" d="M274.102,-71.8761C259.593,-62.8083 241.584,-51.5523 225.915,-41.7592"/><polygon fill="black" stroke="black" points="227.339,-38.5218 217.004,-36.1898 223.629,-44.4578 227.339,-38.5218"/></g><!-- GObject.Object --><g id="node7" class="node"><title>GObject.Object</title><g id="a_node7"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GObject" xlink:title="GObject.Object"><path fill="none" stroke="black" d="M379.5,-396C379.5,-396 301.5,-396 301.5,-396 295.5,-396 289.5,-390 289.5,-384 289.5,-384 289.5,-372 289.5,-372 289.5,-366 295.5,-360 301.5,-360 301.5,-360 379.5,-360 379.5,-360 385.5,-360 391.5,-366 391.5,-372 391.5,-372 391.5,-384 391.5,-384 391.5,-390 385.5,-396 379.5,-396"/><text text-anchor="middle" x="340.5" y="-374.3" font-family="Times,serif" font-size="14.00">GObject.Object</text></a></g></g><!-- GObject.InitiallyUnowned --><g id="node8" class="node"><title>GObject.InitiallyUnowned</title><g id="a_node8"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GInitiallyUnowned" xlink:title="GObject.InitiallyUnowned"><path fill="none" stroke="black" d="M409,-324C409,-324 272,-324 272,-324 266,-324 260,-318 260,-312 260,-312 260,-300 260,-300 260,-294 266,-288 272,-288 272,-288 409,-288 409,-288 415,-288 421,-294 421,-300 421,-300 421,-312 421,-312 421,-318 415,-324 409,-324"/><text text-anchor="middle" x="340.5" y="-302.3" font-family="Times,serif" font-size="14.00">GObject.InitiallyUnowned</text></a></g></g><!-- GObject.Object&#45;&gt;GObject.InitiallyUnowned --><g id="edge8" class="edge"><title>GObject.Object&#45;&gt;GObject.InitiallyUnowned</title><path fill="none" stroke="black" d="M340.5,-359.697C340.5,-351.983 340.5,-342.712 340.5,-334.112"/><polygon fill="black" stroke="black" points="344,-334.104 340.5,-324.104 337,-334.104 344,-334.104"/></g><!-- Gst.Object --><g id="node9" class="node"><title>Gst.Object</title><g id="a_node9"><a xlink:href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html" xlink:title="Gst.Object"><path fill="none" stroke="black" d="M366,-252C366,-252 315,-252 315,-252 309,-252 303,-246 303,-240 303,-240 303,-228 303,-228 303,-222 309,-216 315,-216 315,-216 366,-216 366,-216 372,-216 378,-222 378,-228 378,-228 378,-240 378,-240 378,-246 372,-252 366,-252"/><text text-anchor="middle" x="340.5" y="-230.3" font-family="Times,serif" font-size="14.00">Gst.Object</text></a></g></g><!-- GObject.InitiallyUnowned&#45;&gt;Gst.Object --><g id="edge9" class="edge"><title>GObject.InitiallyUnowned&#45;&gt;Gst.Object</title><path fill="none" stroke="black" d="M340.5,-287.697C340.5,-279.983 340.5,-270.712 340.5,-262.112"/><polygon fill="black" stroke="black" points="344,-262.104 340.5,-252.104 337,-262.104 344,-262.104"/></g><!-- Gst.Element --><g id="node10" class="node"><title>Gst.Element</title><g id="a_node10"><a xlink:href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html" xlink:title="Gst.Element"><path fill="none" stroke="black" d="M371,-180C371,-180 310,-180 310,-180 304,-180 298,-174 298,-168 298,-168 298,-156 298,-156 298,-150 304,-144 310,-144 310,-144 371,-144 371,-144 377,-144 383,-150 383,-156 383,-156 383,-168 383,-168 383,-174 377,-180 371,-180"/><text text-anchor="middle" x="340.5" y="-158.3" font-family="Times,serif" font-size="14.00">Gst.Element</text></a></g></g><!-- Gst.Object&#45;&gt;Gst.Element --><g id="edge10" class="edge"><title>Gst.Object&#45;&gt;Gst.Element</title><path fill="none" stroke="black" d="M340.5,-215.697C340.5,-207.983 340.5,-198.712 340.5,-190.112"/><polygon fill="black" stroke="black" points="344,-190.104 340.5,-180.104 337,-190.104 344,-190.104"/></g><!-- Gst.Element&#45;&gt;Gst.Bin --><g id="edge11" class="edge"><title>Gst.Element&#45;&gt;Gst.Bin</title><path fill="none" stroke="black" d="M330.86,-143.697C326.373,-135.644 320.941,-125.894 315.976,-116.982"/><polygon fill="black" stroke="black" points="318.954,-115.137 311.03,-108.104 312.839,-118.544 318.954,-115.137"/></g></g></svg></p>

<p>A <a href="#ges.timeline">GES.Timeline</a> is composed of one or more <a href="#ges.layer">GES.Layers</a>, and produces data on one or
more <a href="#ges.track">GES.Tracks</a>.</p>

<p>A <a href="#ges.track">GES.Track</a> represents a media type, for example audio, video or text. For the
moment only audio and video tracks are supported.<a href="#ges.layer">GES.Layers</a> contain <a href="#ges.clip">GES.Clips</a>, and represent the relative priorities of these clips.####Layers</p>
<pre><code class="highlight c"><span class="cp">#include &lt;ges/ges.h&gt;
</span>
<span class="k">static</span> <span class="n">GESTimeline</span> <span class="o">*</span>
<span class="nf">create_timeline_with_n_layers</span> <span class="p">(</span><span class="n">guint</span> <span class="n">n_layers</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">GESTimeline</span> <span class="o">*</span><span class="n">timeline</span> <span class="o">=</span> <span class="n">ges_timeline_new</span> <span class="p">();</span>
  <span class="n">guint</span> <span class="n">i</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="n">n_layers</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">ges_timeline_append_layer</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>
  <span class="k">return</span> <span class="n">timeline</span><span class="p">;</span>
<span class="p">}</span>


</code></pre>
<pre><code class="highlight python"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GES</span>

<span class="k">def</span> <span class="nf">create_timeline_with_n_layers</span><span class="p">(</span><span class="n">n_layers</span><span class="p">):</span>
    <span class="n">timeline</span> <span class="o">=</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="o">.</span><span class="n">new</span><span class="p">()</span>

    <span class="k">while</span> <span class="n">n_layers</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">timeline</span><span class="o">.</span><span class="n">append_layer</span><span class="p">()</span>
        <span class="n">n_layers</span> <span class="o">-=</span> <span class="mi">1</span>

    <span class="k">return</span> <span class="n">timeline</span>


</code></pre>
<pre><code class="highlight shell">Can<span class="s1">'t create an empty timeline with ges-launch-1.0!

</span></code></pre>

<p>Let&rsquo;s imagine a timeline that contains two layers:</p>

<pre class="inlined_code">
  Timeline, duration : 0 seconds
+--------------------------------------------------------+
|                                                        |
|         +-------------------------------------------+  |
|         |                                           |  |
| Layer 1 |                                           |  |
|         |                                           |  |
|         +-------------------------------------------+  |
|                                                        |
|         +-------------------------------------------+  |
|         |                                           |  |
| Layer 2 |                                           |  |
|         |                                           |  |
|         +-------------------------------------------+  |
|                                                        |
+--------------------------------------------------------+
</pre>

<blockquote>
<p>After modifying a timeline, you need to commit it to have the changes taken into account.</p>
</blockquote>
<pre><code class="highlight c"><span class="cp">#include &lt;ges/ges.h&gt;
</span>
<span class="k">static</span> <span class="kt">void</span>
<span class="nf">add_one_clip_in_each_layer</span> <span class="p">(</span><span class="n">GESTimeline</span> <span class="o">*</span> <span class="n">timeline</span><span class="p">,</span> <span class="n">GstClockTime</span> <span class="n">duration</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">GList</span> <span class="o">*</span><span class="n">tmp</span><span class="p">,</span> <span class="o">*</span><span class="n">layers</span> <span class="o">=</span> <span class="n">ges_timeline_get_layers</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>

  <span class="k">for</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">=</span> <span class="n">layers</span><span class="p">;</span> <span class="n">tmp</span><span class="p">;</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">GESClip</span> <span class="o">*</span><span class="n">clip</span> <span class="o">=</span> <span class="n">GES_CLIP</span> <span class="p">(</span><span class="n">ges_test_clip_new</span> <span class="p">());</span>
    <span class="n">GESLayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="n">GES_LAYER</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">);</span>

    <span class="n">ges_layer_add_clip</span> <span class="p">(</span><span class="n">layer</span><span class="p">,</span> <span class="n">clip</span><span class="p">);</span>
    <span class="n">g_object_set</span> <span class="p">(</span><span class="n">clip</span><span class="p">,</span> <span class="s">"duration"</span><span class="p">,</span> <span class="n">duration</span><span class="p">,</span> <span class="s">"start"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="cm">/* We commit the timeline to have our changes taken into account */</span>
  <span class="n">ges_timeline_commit</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>
<span class="p">}</span>


</code></pre>
<pre><code class="highlight python"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GES</span>

<span class="k">def</span> <span class="nf">add_one_clip_in_each_layer</span> <span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="n">duration</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">layer</span> <span class="ow">in</span> <span class="n">timeline</span><span class="o">.</span><span class="n">get_layers</span><span class="p">():</span>
        <span class="n">clip</span> <span class="o">=</span> <span class="n">GES</span><span class="o">.</span><span class="n">TestClip</span><span class="o">.</span><span class="n">new</span><span class="p">()</span>
        <span class="n">layer</span><span class="o">.</span><span class="n">add_clip</span> <span class="p">(</span><span class="n">clip</span><span class="p">)</span>
        <span class="n">clip</span><span class="o">.</span><span class="n">props</span><span class="o">.</span><span class="n">duration</span> <span class="o">=</span> <span class="n">duration</span>
        <span class="n">clip</span><span class="o">.</span><span class="n">props</span><span class="o">.</span><span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="c"># We commit the timeline to have our changes taken into account</span>
    <span class="n">timeline</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>


</code></pre>
<pre><code class="highlight shell">FIXME : we are about to change the CLI


</code></pre>

<p>If we add two clips in layer 1 and layer 2, each starting at 0 with a
duration of 10 seconds, our timeline now looks like this:</p>

<pre class="inlined_code">

  Timeline, duration : 10 seconds
+--------------------------------------------------------+
|                                                        |
|         +-------------------------------------------+  |
|         | +=======================================+ |  |
| Layer 1 | |              Clip 1                   | |  |
|         | +=======================================+ |  |
|         +-------------------------------------------+  |
|                                                        |
|         +-------------------------------------------+  |
|         | +=======================================+ |  |
| Layer 2 | |              Clip 2                   | |  |
|         | +=======================================+ |  |
|         +-------------------------------------------+  |
|                                                        |
+--------------------------------------------------------+

</pre>

<p>In that timeline, Clip 1 is said to have the highest &ldquo;priority&rdquo;. In the case
of video streams, it means that it will be rendered on top of Clip 2, which in turn signifies
that if Clip 1 and Clip 2 share the same width and height, Clip 2 will be completely
invisible.</p>

<p>In the case of video streams, one can therefore think of the layer priority as a z-index.####Tracks</p>

<p>Let&rsquo;s continue with that timeline. For now it indeed mixes various layers together, but it
doesn&rsquo;t output anything. That&rsquo;s what <a href="#ges.track">GES.Tracks</a> are for.</p>
<pre><code class="highlight c"><span class="cp">#include &lt;ges/ges.h&gt;
</span>
<span class="k">static</span> <span class="kt">void</span>
<span class="nf">add_one_video_track</span> <span class="p">(</span><span class="n">GESTimeline</span> <span class="o">*</span> <span class="n">timeline</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">GESTrack</span> <span class="o">*</span><span class="n">track</span> <span class="o">=</span> <span class="n">GES_TRACK</span> <span class="p">(</span><span class="n">ges_video_track_new</span> <span class="p">());</span>

  <span class="n">ges_timeline_add_track</span> <span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="n">track</span><span class="p">);</span>
<span class="p">}</span>


</code></pre>
<pre><code class="highlight python"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GES</span>

<span class="k">def</span> <span class="nf">add_one_video_track</span> <span class="p">(</span><span class="n">timeline</span><span class="p">):</span>
    <span class="n">timeline</span><span class="o">.</span><span class="n">add_track</span> <span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTrack</span><span class="o">.</span><span class="n">new</span><span class="p">())</span>


</code></pre>
<pre><code class="highlight shell">FIXME

</code></pre>

<p>If we add a video track to our timeline, it can be represented that way:</p>

<pre class="inlined_code">

  Timeline, duration : 10 seconds
+--------------------------------------------------------+
|                                                        |
|         +-------------------------------------------+  |
|         | +=======================================+ |  |
| Layer 1 | |              Clip 1                   | |  |
|         | +=======================================+ |  |
|         +-------------------------------------------+  |
|                                                        |--------> Video Track
|         +-------------------------------------------+  |
|         | +=======================================+ |  |
| Layer 2 | |              Clip 2                   | |  |
|         | +=======================================+ |  |
|         +-------------------------------------------+  |
|                                                        |
+--------------------------------------------------------+

</pre>

<blockquote>
<p>Playback and Rendering are documented in a separate section.</p>
</blockquote>
<pre><code class="highlight c"><span class="cp">#include &lt;ges/ges.h&gt;
#include "add_one_clip_in_each_layer.c"
#include "add_one_video_track.c"
#include "create_timeline_with_n_layers.c"
#include "play_timeline.c"
</span>
<span class="kt">int</span>
<span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">GESTimeline</span> <span class="o">*</span><span class="n">timeline</span><span class="p">;</span>

  <span class="n">gst_init</span> <span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
  <span class="n">ges_init</span> <span class="p">();</span>

  <span class="n">timeline</span> <span class="o">=</span> <span class="n">create_timeline_with_n_layers</span> <span class="p">(</span><span class="mi">2</span><span class="p">);</span>
  <span class="n">add_one_clip_in_each_layer</span> <span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">GST_SECOND</span><span class="p">);</span>
  <span class="n">add_one_video_track</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>
  <span class="n">play_timeline</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>


</code></pre>
<pre><code class="highlight python"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GES</span><span class="p">,</span> <span class="n">Gst</span>

<span class="kn">from</span> <span class="nn">create_timeline_with_n_layers</span> <span class="kn">import</span> <span class="n">create_timeline_with_n_layers</span>
<span class="kn">from</span> <span class="nn">add_one_clip_in_each_layer</span> <span class="kn">import</span> <span class="n">add_one_clip_in_each_layer</span>
<span class="kn">from</span> <span class="nn">add_one_video_track</span> <span class="kn">import</span> <span class="n">add_one_video_track</span>
<span class="kn">from</span> <span class="nn">play_timeline</span> <span class="kn">import</span> <span class="n">play_timeline</span>

<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">Gst</span><span class="o">.</span><span class="n">init</span><span class="p">([])</span>
    <span class="n">GES</span><span class="o">.</span><span class="n">init</span><span class="p">()</span>

    <span class="n">timeline</span> <span class="o">=</span> <span class="n">create_timeline_with_n_layers</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">add_one_clip_in_each_layer</span><span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">Gst</span><span class="o">.</span><span class="n">SECOND</span><span class="p">)</span>
    <span class="n">add_one_video_track</span> <span class="p">(</span><span class="n">timeline</span><span class="p">)</span>
    <span class="c"># Convenience function for the sake of examples.</span>
    <span class="n">play_timeline</span> <span class="p">(</span><span class="n">timeline</span><span class="p">)</span>


</code></pre>
<pre><code class="highlight shell">FIXME

</code></pre>

<p>Assuming both clips contain video streams, our timeline will now output the
result of their compositing together on the video track. Any audio streams they contain are
ignored.</p>

<p>One can of course add an audio track to get audio output.</p>

<p>Having multiple tracks with the same type, for example 3 audio tracks, is
useful if one wants to link the timeline to a container that can store various languages, for
example a DVD creator might store English, Dutch and French audio tracks.</p>

<p><h3 id='gobject-properties'><u>GObject properties:</u></h3></p>

<h3 id="ges.timeline:auto-transition">GES.Timeline:auto-transition</h3>

<p>Sets whether transitions are added automagically when clips overlap.</p>

<h3 id="ges.timeline:duration">GES.Timeline:duration</h3>

<p>Current duration (in nanoseconds) of the <a href="#ges.timeline">GES.Timeline</a></p>

<h3 id="ges.timeline:snapping-distance">GES.Timeline:snapping-distance</h3>

<p>Distance (in nanoseconds) from which a moving object will snap
with it neighboors. 0 means no snapping.</p>

<h3 id='methods'><u>Methods:</u></h3>

<h3 id="ges.timeline.new">GES.Timeline.new</h3>
<pre><code class="highlight c"><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">ges_timeline_new</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

</code></pre>

<p><em>Returns</em>: The new timeline.</p>

<p>Creates a new empty <a href="#ges.timeline">GES.Timeline</a>.</p>

<h3 id="ges.timeline.new_audio_video">GES.Timeline.new_audio_video</h3>
<pre><code class="highlight c"><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">ges_timeline_new_audio_video</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

</code></pre>

<p><em>Returns</em>: The newly created <a href="#ges.timeline">GES.Timeline</a>.</p>

<p>Creates a new <a href="#ges.timeline">GES.Timeline</a> containing a raw audio and a
raw video track.</p>

<h3 id="ges.timeline.new_from_uri">GES.Timeline.new_from_uri</h3>
<pre><code class="highlight c"><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">ges_timeline_new_from_uri</span> <span class="p">(</span><span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                        <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>

<p><em>uri</em>: the URI to load from</p>

<p><em>Returns</em>: A new timeline if the uri was loaded successfully, or NULL if the
uri could not be loaded</p>

<p>Creates a timeline from the given URI.</p>

<h3 id="ges.timeline.load_from_uri">GES.Timeline.load_from_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_load_from_uri</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                     <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                     <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">load_from_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">uri</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_load_from_uri()</span>

</code></pre>

<p><em>timeline</em>: an empty <a href="#ges.timeline">GES.Timeline</a> into which to load the formatter</p>

<p><em>uri</em>: The URI to load from</p>

<p><em>Returns</em>: TRUE if the timeline was loaded successfully, or FALSE if the uri
could not be loaded.</p>

<p>Loads the contents of URI into the given timeline.</p>

<h3 id="ges.timeline.save_to_uri">GES.Timeline.save_to_uri</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_save_to_uri</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                   <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">uri</span><span class="p">,</span>
                                   <span class="n">GESAsset</span><span class="o">*</span> <span class="n">formatter_asset</span><span class="p">,</span>
                                   <span class="n">gboolean</span> <span class="n">overwrite</span><span class="p">,</span>
                                   <span class="n">GError</span> <span class="o">**</span><span class="n">error</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="nd">@throws</span><span class="p">(</span><span class="n">GLib</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">save_to_uri</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">uri</span><span class="p">,</span> <span class="n">formatter_asset</span><span class="p">,</span> <span class="n">overwrite</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_save_to_uri()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>uri</em>: The location to save to</p>

<p><em>formatter_asset</em>: The formatter asset to use or <strong>NULL</strong>. If <strong>NULL</strong>,
will try to save in the same format as the one from which the timeline as been loaded
or default to the formatter with highest rank</p>

<p><em>overwrite</em>: <strong>TRUE</strong> to overwrite file if it exists</p>

<p><em>Returns</em>: TRUE if the timeline was successfully saved to the given location,
else FALSE.</p>

<blockquote>
<p>Saving and loading a timeline is as easy as it gets</p>
</blockquote>
<pre><code class="highlight c"><span class="cp">#include &lt;ges/ges.h&gt;
#include "add_one_clip_in_each_layer.c"
#include "add_one_video_track.c"
#include "create_timeline_with_n_layers.c"
#include "play_timeline.c"
</span>
<span class="kt">int</span>
<span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">ac</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">av</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">GESTimeline</span> <span class="o">*</span><span class="n">timeline</span><span class="p">;</span>

  <span class="n">gst_init</span> <span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
  <span class="n">ges_init</span> <span class="p">();</span>

  <span class="n">timeline</span> <span class="o">=</span> <span class="n">create_timeline_with_n_layers</span> <span class="p">(</span><span class="mi">2</span><span class="p">);</span>
  <span class="n">add_one_clip_in_each_layer</span> <span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">GST_SECOND</span><span class="p">);</span>
  <span class="n">add_one_video_track</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ges_timeline_save_to_uri</span> <span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="s">"file:///tmp/test.xges"</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">,</span>
          <span class="nb">NULL</span><span class="p">))</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>

  <span class="n">gst_object_unref</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>

  <span class="n">timeline</span> <span class="o">=</span> <span class="n">ges_timeline_new_from_uri</span> <span class="p">(</span><span class="s">"file:///tmp/test.xges"</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">timeline</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>

  <span class="n">play_timeline</span> <span class="p">(</span><span class="n">timeline</span><span class="p">);</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>


</code></pre>
<pre><code class="highlight python"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GES</span><span class="p">,</span> <span class="n">Gst</span><span class="p">,</span> <span class="n">GLib</span>

<span class="kn">from</span> <span class="nn">create_timeline_with_n_layers</span> <span class="kn">import</span> <span class="n">create_timeline_with_n_layers</span>
<span class="kn">from</span> <span class="nn">add_one_clip_in_each_layer</span> <span class="kn">import</span> <span class="n">add_one_clip_in_each_layer</span>
<span class="kn">from</span> <span class="nn">add_one_video_track</span> <span class="kn">import</span> <span class="n">add_one_video_track</span>
<span class="kn">from</span> <span class="nn">play_timeline</span> <span class="kn">import</span> <span class="n">play_timeline</span>

<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">Gst</span><span class="o">.</span><span class="n">init</span><span class="p">([])</span>
    <span class="n">GES</span><span class="o">.</span><span class="n">init</span><span class="p">()</span>

    <span class="n">timeline</span> <span class="o">=</span> <span class="n">create_timeline_with_n_layers</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">add_one_clip_in_each_layer</span><span class="p">(</span><span class="n">timeline</span><span class="p">,</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">Gst</span><span class="o">.</span><span class="n">SECOND</span><span class="p">)</span>
    <span class="n">add_one_video_track</span> <span class="p">(</span><span class="n">timeline</span><span class="p">)</span>
    <span class="n">timeline</span><span class="o">.</span><span class="n">save_to_uri</span> <span class="p">(</span><span class="s">"file:///tmp/test.xges"</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
    <span class="n">timeline</span> <span class="o">=</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="o">.</span><span class="n">new_from_uri</span> <span class="p">(</span><span class="s">"file:///tmp/test.xges"</span><span class="p">)</span>
    <span class="c"># Convenience function for the sake of examples.</span>
    <span class="n">play_timeline</span> <span class="p">(</span><span class="n">timeline</span><span class="p">)</span>


</code></pre>
<pre><code class="highlight shell">FIXME

</code></pre>

<p>Saves the timeline to the given location.</p>

<h3 id="ges.timeline.add_layer">GES.Timeline.add_layer</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_add_layer</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                 <span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_layer</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">layer</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_add_layer()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>layer</em>: the <a href="#ges.layer">GES.Layer</a> to add</p>

<p><em>Returns</em>: TRUE if the layer was properly added, else FALSE.</p>

<p>Add the layer to the timeline. The reference to the <strong>layer</strong> will be stolen
by the <strong>timeline</strong>.</p>

<h3 id="ges.timeline.append_layer">GES.Timeline.append_layer</h3>
<pre><code class="highlight c"><span class="n">GESLayer</span><span class="o">*</span> <span class="n">ges_timeline_append_layer</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">append_layer</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_append_layer()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: The newly created <a href="#ges.layer">GES.Layer</a>.</p>

<p>Append a newly created <a href="#ges.layer">GES.Layer</a> to <strong>timeline</strong>
Note that you do not own any reference to the returned layer.</p>

<h3 id="ges.timeline.remove_layer">GES.Timeline.remove_layer</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_remove_layer</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                    <span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_layer</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">layer</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_remove_layer()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>layer</em>: the <a href="#ges.layer">GES.Layer</a> to remove</p>

<p><em>Returns</em>: TRUE if the layer was properly removed, else FALSE.</p>

<p>Removes the layer from the timeline. The reference that the <strong>timeline</strong> holds on
the layer will be dropped. If you wish to use the <strong>layer</strong> after calling this
method, you need to take a reference before calling.</p>

<h3 id="ges.timeline.get_layers">GES.Timeline.get_layers</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_timeline_get_layers</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_layers</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_layers()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: the list of
<a href="#ges.layer">GES.Layer</a> present in the Timeline sorted by priority.
The caller should unref each Layer once he is done with them.</p>

<p>Get the list of <a href="#ges.layer">GES.Layer</a> present in the Timeline.</p>

<h3 id="ges.timeline.add_track">GES.Timeline.add_track</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_add_track</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                 <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_track</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">track</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_add_track()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>track</em>: the <a href="#ges.track">GES.Track</a> to add</p>

<p><em>Returns</em>: TRUE if the track was properly added, else FALSE.</p>

<p>Add a track to the timeline. The reference to the track will be stolen by the
pipeline.</p>

<h3 id="ges.timeline.remove_track">GES.Timeline.remove_track</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_remove_track</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                    <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_track</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">track</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_remove_track()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>track</em>: the <a href="#ges.track">GES.Track</a> to remove</p>

<p><em>Returns</em>: TRUE if the <strong>track</strong> was properly removed, else FALSE.</p>

<p>Remove the <strong>track</strong> from the <strong>timeline</strong>. The reference stolen when adding the
<strong>track</strong> will be removed. If you wish to use the <strong>track</strong> after calling this
function you must ensure that you have a reference to it.</p>

<h3 id="ges.timeline.get_tracks">GES.Timeline.get_tracks</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_timeline_get_tracks</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_tracks</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_tracks()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: A list of <a href="#ges.track">GES.Track</a>.
The caller should unref each track once he is done with them.</p>

<p>Returns the list of <a href="#ges.track">GES.Track</a> used by the Timeline.</p>

<h3 id="ges.timeline.commit">GES.Timeline.commit</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_commit</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">commit</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_commit()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if something as been commited <strong>FALSE</strong> if nothing needed
to be commited</p>

<p>Commits all the pending changes of the clips contained in the
<strong>timeline</strong>.</p>

<p>When timing changes happen in a timeline, the changes are not
directly done inside NLE. This method needs to be called so any changes
on a clip contained in the timeline actually happen at the media
processing level.</p>

<h3 id="ges.timeline.is_empty">GES.Timeline.is_empty</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_is_empty</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">is_empty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_is_empty()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if the timeline is empty <strong>FALSE</strong> otherwize</p>

<p>Check whether a <a href="#ges.timelineelement">GES.TimelineElement</a> is empty or not</p>

<h3 id="ges.timeline.get_element">GES.Timeline.get_element</h3>
<pre><code class="highlight c"><span class="n">GESTimelineElement</span><span class="o">*</span> <span class="n">ges_timeline_get_element</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                              <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">name</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TimelineElement</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_element</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_element()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>name</em>: FIXME empty description
<em>Returns</em>: The <a href="#ges.timelineelement">GES.TimelineElement</a> or <strong>NULL</strong> if
not found.</p>

<p>Gets a <a href="#ges.timelineelement">GES.TimelineElement</a> contained in the timeline</p>

<h3 id="ges.timeline.get_duration">GES.Timeline.get_duration</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_timeline_get_duration</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_duration()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: The current duration of <strong>timeline</strong></p>

<p>Get the current duration of <strong>timeline</strong></p>

<h3 id="ges.timeline.get_track_for_pad">GES.Timeline.get_track_for_pad</h3>
<pre><code class="highlight c"><span class="n">GESTrack</span><span class="o">*</span> <span class="n">ges_timeline_get_track_for_pad</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                          <span class="n">GstPad</span><span class="o">*</span> <span class="n">pad</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">Pad</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_track_for_pad</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pad</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_track_for_pad()</span>

</code></pre>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>pad</em>: The <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstPad.html">Gst.Pad</a></p>

<p><em>Returns</em>: The corresponding <a href="#ges.track">GES.Track</a> if it is found,
or <strong>NULL</strong> if there is an error.</p>

<p>Search the <a href="#ges.track">GES.Track</a> corresponding to the given <strong>timeline</strong>&rsquo;s <strong>pad</strong>.</p>

<h3 id="ges.timeline.get_pad_for_track">GES.Timeline.get_pad_for_track</h3>
<pre><code class="highlight c"><span class="n">GstPad</span><span class="o">*</span> <span class="n">ges_timeline_get_pad_for_track</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                        <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">Pad</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_pad_for_track</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">track</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_pad_for_track()</span>

</code></pre>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>track</em>: The <a href="#ges.track">GES.Track</a></p>

<p><em>Returns</em>: The corresponding <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstPad.html">Gst.Pad</a> if it is found,
or <strong>NULL</strong> if there is an error.</p>

<p>Search the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstPad.html">Gst.Pad</a> corresponding to the given <strong>timeline</strong>&rsquo;s <strong>track</strong>.</p>

<h3 id="ges.timeline.set_snapping_distance">GES.Timeline.set_snapping_distance</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_set_snapping_distance</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                         <span class="n">GstClockTime</span> <span class="n">snapping_distance</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_snapping_distance</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">snapping_distance</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_set_snapping_distance()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>snapping_distance</em>: whether the snapping_distance is active</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets the <strong>snapping_distance</strong> of the timeline. See the documentation of the
property snapping_distance for more information.</p>

<h3 id="ges.timeline.get_snapping_distance">GES.Timeline.get_snapping_distance</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_timeline_get_snapping_distance</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_snapping_distance</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_snapping_distance()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: The @snapping_distance property of the timeline</p>

<p>Gets the configured snapping distance of the timeline. See
the documentation of the property snapping_distance for more
information.</p>

<h3 id="ges.timeline.set_auto_transition">GES.Timeline.set_auto_transition</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_timeline_set_auto_transition</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                       <span class="n">gboolean</span> <span class="n">auto_transition</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_auto_transition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">auto_transition</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_set_auto_transition()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>auto_transition</em>: whether the auto_transition is active</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets the layer to the given <strong>auto_transition</strong>. See the documentation of the
property auto_transition for more information.</p>

<h3 id="ges.timeline.get_auto_transition">GES.Timeline.get_auto_transition</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_timeline_get_auto_transition</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_auto_transition</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_timeline_get_auto_transition()</span>

</code></pre>

<p><em>timeline</em>: a <a href="#ges.timeline">GES.Timeline</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if transitions are automatically added, else <strong>FALSE</strong>.</p>

<p>Gets whether transitions are automatically added when objects
overlap or not.</p>

<h3 id="ges.timeline.get_layer">GES.Timeline.get_layer</h3>
<pre><code class="highlight c"><span class="n">GESLayer</span><span class="o">*</span> <span class="n">ges_timeline_get_layer</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                                  <span class="n">guint</span> <span class="n">priority</span><span class="p">);</span>

</code></pre>

<p><em>timeline</em>: The <a href="#ges.timeline">GES.Timeline</a> to retrive a layer from</p>

<p><em>priority</em>: The priority of the layer to find</p>

<p><em>Returns</em>: A <a href="#ges.layer">GES.Layer</a> or <strong>NULL</strong> if no layer with <strong>priority</strong> was found</p>

<p>Retrieve the layer with <strong>priority</strong> as a priority</p>

<h3 id='vfuncs'><u>Virtual Methods:</u></h3>

<h3 id="ges.timeline.do_track_removed">GES.Timeline.do_track_removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTimelineClass</span><span class="o">-&gt;</span><span class="n">track_removed</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                          <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>


</code></pre>

<p><em>timeline</em>: FIXME empty description
<em>track</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.timeline.do_track_added">GES.Timeline.do_track_added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTimelineClass</span><span class="o">-&gt;</span><span class="n">track_added</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                        <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">);</span>


</code></pre>

<p><em>timeline</em>: FIXME empty description
<em>track</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.timeline.do_layer_added">GES.Timeline.do_layer_added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTimelineClass</span><span class="o">-&gt;</span><span class="n">layer_added</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                        <span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>


</code></pre>

<p><em>timeline</em>: FIXME empty description
<em>layer</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.timeline.do_layer_removed">GES.Timeline.do_layer_removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTimelineClass</span><span class="o">-&gt;</span><span class="n">layer_removed</span> <span class="p">(</span><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">,</span>
                          <span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>


</code></pre>

<p><em>timeline</em>: FIXME empty description
<em>layer</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
