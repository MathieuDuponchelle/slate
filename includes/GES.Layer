<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.layer" c_name="GESLayer" python_name="GES.Layer" shell_name="The Layer">GES.Layer</h2>

<p class="graphviz">
<!-- Generated by graphviz version 2.38.0 (20140413.2041) --><!-- Title: %3 Pages: 1 --><svg width="441pt" height="188pt" viewBox="0.00 0.00 440.50 188.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 184)"><title>%3</title><polygon fill="white" stroke="none" points="-4,4 -4,-184 436.5,-184 436.5,4 -4,4"/><!-- GObject.Object --><g id="node1" class="node"><title>GObject.Object</title><g id="a_node1"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GObject" xlink:title="GObject.Object"><path fill="none" stroke="black" d="M119.5,-180C119.5,-180 41.5,-180 41.5,-180 35.5,-180 29.5,-174 29.5,-168 29.5,-168 29.5,-156 29.5,-156 29.5,-150 35.5,-144 41.5,-144 41.5,-144 119.5,-144 119.5,-144 125.5,-144 131.5,-150 131.5,-156 131.5,-156 131.5,-168 131.5,-168 131.5,-174 125.5,-180 119.5,-180"/><text text-anchor="middle" x="80.5" y="-158.3" font-family="Times,serif" font-size="14.00">GObject.Object</text></a></g></g><!-- GObject.InitiallyUnowned --><g id="node2" class="node"><title>GObject.InitiallyUnowned</title><g id="a_node2"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GInitiallyUnowned" xlink:title="GObject.InitiallyUnowned"><path fill="none" stroke="black" d="M149,-108C149,-108 12,-108 12,-108 6,-108 0,-102 0,-96 0,-96 0,-84 0,-84 0,-78 6,-72 12,-72 12,-72 149,-72 149,-72 155,-72 161,-78 161,-84 161,-84 161,-96 161,-96 161,-102 155,-108 149,-108"/><text text-anchor="middle" x="80.5" y="-86.3" font-family="Times,serif" font-size="14.00">GObject.InitiallyUnowned</text></a></g></g><!-- GObject.Object&#45;&gt;GObject.InitiallyUnowned --><g id="edge1" class="edge"><title>GObject.Object&#45;&gt;GObject.InitiallyUnowned</title><path fill="none" stroke="black" d="M80.5,-143.697C80.5,-135.983 80.5,-126.712 80.5,-118.112"/><polygon fill="black" stroke="black" points="84.0001,-118.104 80.5,-108.104 77.0001,-118.104 84.0001,-118.104"/></g><!-- GES.Layer --><g id="node3" class="node"><title>GES.Layer</title><g id="a_node3"><a xlink:href="#ges.layer" xlink:title="GES.Layer"><path fill="none" stroke="black" d="M259,-36C259,-36 206,-36 206,-36 200,-36 194,-30 194,-24 194,-24 194,-12 194,-12 194,-6 200,-0 206,-0 206,-0 259,-0 259,-0 265,-0 271,-6 271,-12 271,-12 271,-24 271,-24 271,-30 265,-36 259,-36"/><text text-anchor="middle" x="232.5" y="-14.3" font-family="Times,serif" font-size="14.00">GES.Layer</text></a></g></g><!-- GObject.InitiallyUnowned&#45;&gt;GES.Layer --><g id="edge2" class="edge"><title>GObject.InitiallyUnowned&#45;&gt;GES.Layer</title><path fill="none" stroke="black" d="M117.683,-71.8761C138.37,-62.3492 164.302,-50.4068 186.285,-40.2833"/><polygon fill="black" stroke="black" points="187.818,-43.4305 195.437,-36.0683 184.89,-37.0723 187.818,-43.4305"/></g><!-- GObject.GInterface --><g id="node4" class="node"><title>GObject.GInterface</title><g id="a_node4"><a xlink:href="#index" xlink:title="GObject.GInterface"><path fill="none" stroke="black" d="M350.5,-180C350.5,-180 250.5,-180 250.5,-180 244.5,-180 238.5,-174 238.5,-168 238.5,-168 238.5,-156 238.5,-156 238.5,-150 244.5,-144 250.5,-144 250.5,-144 350.5,-144 350.5,-144 356.5,-144 362.5,-150 362.5,-156 362.5,-156 362.5,-168 362.5,-168 362.5,-174 356.5,-180 350.5,-180"/><text text-anchor="middle" x="300.5" y="-158.3" font-family="Times,serif" font-size="14.00">GObject.GInterface</text></a></g></g><!-- GES.Extractable --><g id="node5" class="node"><title>GES.Extractable</title><g id="a_node5"><a xlink:href="#ges.extractable" xlink:title="GES.Extractable"><path fill="none" stroke="black" d="M274,-108C274,-108 191,-108 191,-108 185,-108 179,-102 179,-96 179,-96 179,-84 179,-84 179,-78 185,-72 191,-72 191,-72 274,-72 274,-72 280,-72 286,-78 286,-84 286,-84 286,-96 286,-96 286,-102 280,-108 274,-108"/><text text-anchor="middle" x="232.5" y="-86.3" font-family="Times,serif" font-size="14.00">GES.Extractable</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.Extractable --><g id="edge3" class="edge"><title>GObject.GInterface&#45;&gt;GES.Extractable</title><path fill="none" stroke="black" d="M283.691,-143.697C275.374,-135.135 265.195,-124.656 256.11,-115.304"/><polygon fill="black" stroke="black" points="258.594,-112.838 249.116,-108.104 253.573,-117.716 258.594,-112.838"/></g><!-- GES.MetaContainer --><g id="node6" class="node"><title>GES.MetaContainer</title><g id="a_node6"><a xlink:href="#ges.metacontainer" xlink:title="GES.MetaContainer"><path fill="none" stroke="black" d="M420.5,-108C420.5,-108 316.5,-108 316.5,-108 310.5,-108 304.5,-102 304.5,-96 304.5,-96 304.5,-84 304.5,-84 304.5,-78 310.5,-72 316.5,-72 316.5,-72 420.5,-72 420.5,-72 426.5,-72 432.5,-78 432.5,-84 432.5,-84 432.5,-96 432.5,-96 432.5,-102 426.5,-108 420.5,-108"/><text text-anchor="middle" x="368.5" y="-86.3" font-family="Times,serif" font-size="14.00">GES.MetaContainer</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.MetaContainer --><g id="edge4" class="edge"><title>GObject.GInterface&#45;&gt;GES.MetaContainer</title><path fill="none" stroke="black" d="M317.309,-143.697C325.626,-135.135 335.805,-124.656 344.89,-115.304"/><polygon fill="black" stroke="black" points="347.427,-117.716 351.884,-108.104 342.406,-112.838 347.427,-117.716"/></g><!-- GES.Extractable&#45;&gt;GES.Layer --><g id="edge5" class="edge"><title>GES.Extractable&#45;&gt;GES.Layer</title><path fill="none" stroke="black" d="M232.5,-71.6966C232.5,-63.9827 232.5,-54.7125 232.5,-46.1124"/><polygon fill="black" stroke="black" points="236,-46.1043 232.5,-36.1043 229,-46.1044 236,-46.1043"/></g><!-- GES.MetaContainer&#45;&gt;GES.Layer --><g id="edge6" class="edge"><title>GES.MetaContainer&#45;&gt;GES.Layer</title><path fill="none" stroke="black" d="M335.231,-71.8761C317.037,-62.5117 294.309,-50.8136 274.86,-40.803"/><polygon fill="black" stroke="black" points="276.39,-37.6543 265.897,-36.1898 273.187,-43.8782 276.39,-37.6543"/></g></g></svg></p>

<p>Responsible for the ordering of the various contained Clip(s). A
timeline layer has a &ldquo;priority&rdquo; property, which is used to manage the
priorities of individual Clips. Two layers should not have the
same priority within a given timeline.</p>

<p><h3 id='gobject-properties'><u>GObject properties:</u></h3>
<h3 id="ges.layer:auto-transition">GES.Layer:auto-transition</h3></p>

<p>Sets whether transitions are added automagically when clips overlap.</p>

<h3 id="ges.layer:priority">GES.Layer:priority</h3>

<p>The priority of the layer in the <a href="#ges.timeline">GES.Timeline</a>. 0 is the highest
priority. Conceptually, a <a href="#ges.timeline">GES.Timeline</a> is a stack of GESLayers,
and the priority of the layer represents its position in the stack. Two
layers should not have the same priority within a given GESTimeline.</p>

<h3 id='methods'><u>Methods:</u></h3>

<h3 id="ges.layer.add_asset" c_name="ges_layer_add_asset" python_name="GES.Layer.add_asset" shell_name="GES.Layer.add_asset">GES.Layer.add_asset</h3>
<pre><code class="highlight c"><span class="n">GESClip</span><span class="o">*</span> <span class="n">ges_layer_add_asset</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                              <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">,</span>
                              <span class="n">GstClockTime</span> <span class="n">start</span><span class="p">,</span>
                              <span class="n">GstClockTime</span> <span class="n">inpoint</span><span class="p">,</span>
                              <span class="n">GstClockTime</span> <span class="n">duration</span><span class="p">,</span>
                              <span class="n">GESTrackType</span> <span class="n">track_types</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TrackType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">inpoint</span><span class="p">,</span> <span class="n">duration</span><span class="p">,</span> <span class="n">track_types</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_add_asset()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>asset</em>: The asset to add to</p>

<p><em>start</em>: The start value to set on the new <a href="#ges.clip">GES.Clip</a>,
if <strong>start</strong> == GST_CLOCK_TIME_NONE, it will be set to
the current duration of <strong>layer</strong></p>

<p><em>inpoint</em>: The inpoint value to set on the new <a href="#ges.clip">GES.Clip</a></p>

<p><em>duration</em>: The duration value to set on the new <a href="#ges.clip">GES.Clip</a></p>

<p><em>track_types</em>: The <a href="#ges.tracktype">GES.TrackType</a> to set on the the new <a href="#ges.clip">GES.Clip</a></p>

<p><em>Returns</em>: Created <a href="#ges.clip">GES.Clip</a></p>

<p>Creates Clip from asset, adds it to layer and
returns a reference to it.</p>

<h3 id="ges.layer.add_clip" c_name="ges_layer_add_clip" python_name="GES.Layer.add_clip" shell_name="GES.Layer.add_clip">GES.Layer.add_clip</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_layer_add_clip</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                             <span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_clip</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">clip</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_add_clip()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>clip</em>: the <a href="#ges.clip">GES.Clip</a> to add.</p>

<p><em>Returns</em>: TRUE if the clip was properly added to the layer, or FALSE
if the <strong>layer</strong> refuses to add the clip.</p>

<p>Adds the given clip to the layer. Sets the clip&rsquo;s parent, and thus
takes ownership of the clip.</p>

<p>An clip can only be added to one layer.</p>

<p>Calling this method will construct and properly set all the media related
elements on <strong>clip</strong>. If you need to know when those objects (actually <a href="#ges.trackelement">GES.TrackElement</a>)
are constructed, you should connect to the container::child-added signal which
is emited right after those elements are ready to be used.</p>

<h3 id="ges.layer.get_auto_transition" c_name="ges_layer_get_auto_transition" python_name="GES.Layer.get_auto_transition" shell_name="GES.Layer.get_auto_transition">GES.Layer.get_auto_transition</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_layer_get_auto_transition</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_auto_transition</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_get_auto_transition()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if transitions are automatically added, else <strong>FALSE</strong>.</p>

<p>Gets whether transitions are automatically added when objects
overlap or not.</p>

<h3 id="ges.layer.get_clips" c_name="ges_layer_get_clips" python_name="GES.Layer.get_clips" shell_name="GES.Layer.get_clips">GES.Layer.get_clips</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_layer_get_clips</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_clips</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_get_clips()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>Returns</em>: a <a href="https://developer.gnome.org/glib/unstable//glib-Doubly-Linked-Lists.html#GList">GLib.List</a> of
clips. The user is responsible for
unreffing the contained objects and freeing the list.</p>

<p>Get the clips this layer contains.</p>

<h3 id="ges.layer.get_duration" c_name="ges_layer_get_duration" python_name="GES.Layer.get_duration" shell_name="GES.Layer.get_duration">GES.Layer.get_duration</h3>
<pre><code class="highlight c"><span class="n">GstClockTime</span> <span class="n">ges_layer_get_duration</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ClockTime</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_duration</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_get_duration()</span>

</code></pre>

<p><em>layer</em>: The <a href="#ges.layer">GES.Layer</a> to get the duration from</p>

<p><em>Returns</em>: The duration of a layer</p>

<p>Lets you retrieve the duration of the layer, which means
the end time of the last clip inside it</p>

<h3 id="ges.layer.get_priority" c_name="ges_layer_get_priority" python_name="GES.Layer.get_priority" shell_name="GES.Layer.get_priority">GES.Layer.get_priority</h3>
<pre><code class="highlight c"><span class="n">guint</span> <span class="n">ges_layer_get_priority</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_get_priority()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>Returns</em>: The priority of the <strong>layer</strong> within the timeline.</p>

<p>Get the priority of <strong>layer</strong> within the timeline.</p>

<h3 id="ges.layer.get_timeline" c_name="ges_layer_get_timeline" python_name="GES.Layer.get_timeline" shell_name="GES.Layer.get_timeline">GES.Layer.get_timeline</h3>
<pre><code class="highlight c"><span class="n">GESTimeline</span><span class="o">*</span> <span class="n">ges_layer_get_timeline</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_timeline</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_get_timeline()</span>

</code></pre>

<p><em>layer</em>: The <a href="#ges.layer">GES.Layer</a> to get the parent <a href="#ges.timeline">GES.Timeline</a> from</p>

<p><em>Returns</em>: the <a href="#ges.timeline">GES.Timeline</a> in which <a href="#ges.layer">GES.Layer</a>
currently is or <strong>NULL</strong> if not in any timeline yet.</p>

<p>Get the <a href="#ges.timeline">GES.Timeline</a> in which <a href="#ges.layer">GES.Layer</a> currently is.</p>

<h3 id="ges.layer.is_empty" c_name="ges_layer_is_empty" python_name="GES.Layer.is_empty" shell_name="GES.Layer.is_empty">GES.Layer.is_empty</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_layer_is_empty</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">is_empty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_is_empty()</span>

</code></pre>

<p><em>layer</em>: The <a href="#ges.layer">GES.Layer</a> to check</p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>layer</strong> is empty, <strong>FALSE</strong> if it already contains at least
one <a href="#ges.clip">GES.Clip</a></p>

<p>Convenience method to check if <strong>layer</strong> is empty (doesn&rsquo;t contain any clip),
or not.</p>

<h3 id="ges.layer.remove_clip" c_name="ges_layer_remove_clip" python_name="GES.Layer.remove_clip" shell_name="GES.Layer.remove_clip">GES.Layer.remove_clip</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_layer_remove_clip</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                                <span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">remove_clip</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">clip</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_remove_clip()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>clip</em>: the <a href="#ges.clip">GES.Clip</a> to remove</p>

<p><em>Returns</em>: TRUE if the clip could be removed, FALSE if the layer does
not want to remove the clip.</p>

<p>Removes the given <strong>clip</strong> from the <strong>layer</strong> and unparents it.
Unparenting it means the reference owned by <strong>layer</strong> on the <strong>clip</strong> will be
removed. If you wish to use the <strong>clip</strong> after this function, make sure you
call <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstObject.html#gst-object-ref">gst_object_ref</a> before removing it from the <strong>layer</strong>.</p>

<h3 id="ges.layer.set_auto_transition" c_name="ges_layer_set_auto_transition" python_name="GES.Layer.set_auto_transition" shell_name="GES.Layer.set_auto_transition">GES.Layer.set_auto_transition</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_layer_set_auto_transition</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                                    <span class="n">gboolean</span> <span class="n">auto_transition</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_auto_transition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">auto_transition</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_set_auto_transition()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>auto_transition</em>: whether the auto_transition is active</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets the layer to the given <strong>auto_transition</strong>. See the documentation of the
property auto_transition for more information.</p>

<h3 id="ges.layer.set_priority" c_name="ges_layer_set_priority" python_name="GES.Layer.set_priority" shell_name="GES.Layer.set_priority">GES.Layer.set_priority</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_layer_set_priority</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                             <span class="n">guint</span> <span class="n">priority</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">priority</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_set_priority()</span>

</code></pre>

<p><em>layer</em>: a <a href="#ges.layer">GES.Layer</a></p>

<p><em>priority</em>: the priority to set</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets the layer to the given <strong>priority</strong>. See the documentation of the
priority property for more information.</p>

<h3 id="ges.layer.set_timeline" c_name="ges_layer_set_timeline" python_name="GES.Layer.set_timeline" shell_name="GES.Layer.set_timeline">GES.Layer.set_timeline</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_layer_set_timeline</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                             <span class="n">GESTimeline</span><span class="o">*</span> <span class="n">timeline</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Timeline</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_timeline</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">timeline</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_layer_set_timeline()</span>

</code></pre>

<p><em>layer</em>: FIXME empty description
<em>timeline</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.layer.new" c_name="ges_layer_new" python_name="GES.Layer.new" shell_name="GES.Layer.new">GES.Layer.new</h3>
<pre><code class="highlight c"><span class="n">GESLayer</span><span class="o">*</span> <span class="n">ges_layer_new</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

</code></pre>

<p><em>Returns</em>: A new <a href="#ges.layer">GES.Layer</a></p>

<p>Creates a new <a href="#ges.layer">GES.Layer</a>.</p>

<h3 id='vfuncs'><u>Virtual Methods:</u></h3>

<h3 id="ges.layer.do_object_removed" c_name="ges_layer_do_object_removed" python_name="GES.Layer.do_object_removed" shell_name="GES.Layer.do_object_removed">GES.Layer.do_object_removed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESLayerClass</span><span class="o">-&gt;</span><span class="n">object_removed</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                           <span class="n">GESClip</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>


</code></pre>

<p><em>layer</em>: FIXME empty description
<em>object</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.layer.do_object_added" c_name="ges_layer_do_object_added" python_name="GES.Layer.do_object_added" shell_name="GES.Layer.do_object_added">GES.Layer.do_object_added</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESLayerClass</span><span class="o">-&gt;</span><span class="n">object_added</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">,</span>
                         <span class="n">GESClip</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>


</code></pre>

<p><em>layer</em>: FIXME empty description
<em>object</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.layer.do_get_objects" c_name="ges_layer_do_get_objects" python_name="GES.Layer.do_get_objects" shell_name="GES.Layer.do_get_objects">GES.Layer.do_get_objects</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">GESLayerClass</span><span class="o">-&gt;</span><span class="n">get_objects</span> <span class="p">(</span><span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>


</code></pre>

<p><em>layer</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
