<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.trackelement" c_name="GESTrackElement" python_name="GES.TrackElement" shell_name="The Track Element">GES.TrackElement</h2>

<p class="graphviz">
<!-- Generated by graphviz version 2.38.0 (20140413.2041) --><!-- Title: %3 Pages: 1 --><svg width="441pt" height="260pt" viewBox="0.00 0.00 441.00 260.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 256)"><title>%3</title><polygon fill="white" stroke="none" points="-4,4 -4,-256 437,-256 437,4 -4,4"/><!-- GObject.GInterface --><g id="node1" class="node"><title>GObject.GInterface</title><g id="a_node1"><a xlink:href="#index" xlink:title="GObject.GInterface"><path fill="none" stroke="black" d="M171.5,-252C171.5,-252 71.5,-252 71.5,-252 65.5,-252 59.5,-246 59.5,-240 59.5,-240 59.5,-228 59.5,-228 59.5,-222 65.5,-216 71.5,-216 71.5,-216 171.5,-216 171.5,-216 177.5,-216 183.5,-222 183.5,-228 183.5,-228 183.5,-240 183.5,-240 183.5,-246 177.5,-252 171.5,-252"/><text text-anchor="middle" x="121.5" y="-230.3" font-family="Times,serif" font-size="14.00">GObject.GInterface</text></a></g></g><!-- GES.Extractable --><g id="node2" class="node"><title>GES.Extractable</title><g id="a_node2"><a xlink:href="#ges.extractable" xlink:title="GES.Extractable"><path fill="none" stroke="black" d="M95,-180C95,-180 12,-180 12,-180 6,-180 -7.10543e-15,-174 -7.10543e-15,-168 -7.10543e-15,-168 -7.10543e-15,-156 -7.10543e-15,-156 -7.10543e-15,-150 6,-144 12,-144 12,-144 95,-144 95,-144 101,-144 107,-150 107,-156 107,-156 107,-168 107,-168 107,-174 101,-180 95,-180"/><text text-anchor="middle" x="53.5" y="-158.3" font-family="Times,serif" font-size="14.00">GES.Extractable</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.Extractable --><g id="edge1" class="edge"><title>GObject.GInterface&#45;&gt;GES.Extractable</title><path fill="none" stroke="black" d="M104.691,-215.697C96.374,-207.135 86.1946,-196.656 77.1101,-187.304"/><polygon fill="black" stroke="black" points="79.594,-184.838 70.1156,-180.104 74.573,-189.716 79.594,-184.838"/></g><!-- GES.MetaContainer --><g id="node3" class="node"><title>GES.MetaContainer</title><g id="a_node3"><a xlink:href="#ges.metacontainer" xlink:title="GES.MetaContainer"><path fill="none" stroke="black" d="M241.5,-180C241.5,-180 137.5,-180 137.5,-180 131.5,-180 125.5,-174 125.5,-168 125.5,-168 125.5,-156 125.5,-156 125.5,-150 131.5,-144 137.5,-144 137.5,-144 241.5,-144 241.5,-144 247.5,-144 253.5,-150 253.5,-156 253.5,-156 253.5,-168 253.5,-168 253.5,-174 247.5,-180 241.5,-180"/><text text-anchor="middle" x="189.5" y="-158.3" font-family="Times,serif" font-size="14.00">GES.MetaContainer</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.MetaContainer --><g id="edge2" class="edge"><title>GObject.GInterface&#45;&gt;GES.MetaContainer</title><path fill="none" stroke="black" d="M138.309,-215.697C146.626,-207.135 156.805,-196.656 165.89,-187.304"/><polygon fill="black" stroke="black" points="168.427,-189.716 172.884,-180.104 163.406,-184.838 168.427,-189.716"/></g><!-- GES.TimelineElement --><g id="node4" class="node"><title>GES.TimelineElement</title><g id="a_node4"><a xlink:href="#ges.timelineelement" xlink:title="GES.TimelineElement"><path fill="none" stroke="black" d="M248,-108C248,-108 131,-108 131,-108 125,-108 119,-102 119,-96 119,-96 119,-84 119,-84 119,-78 125,-72 131,-72 131,-72 248,-72 248,-72 254,-72 260,-78 260,-84 260,-84 260,-96 260,-96 260,-102 254,-108 248,-108"/><text text-anchor="middle" x="189.5" y="-86.3" font-family="Times,serif" font-size="14.00">GES.TimelineElement</text></a></g></g><!-- GES.Extractable&#45;&gt;GES.TimelineElement --><g id="edge3" class="edge"><title>GES.Extractable&#45;&gt;GES.TimelineElement</title><path fill="none" stroke="black" d="M86.7693,-143.876C104.963,-134.512 127.691,-122.814 147.14,-112.803"/><polygon fill="black" stroke="black" points="148.813,-115.878 156.103,-108.19 145.61,-109.654 148.813,-115.878"/></g><!-- GES.MetaContainer&#45;&gt;GES.TimelineElement --><g id="edge5" class="edge"><title>GES.MetaContainer&#45;&gt;GES.TimelineElement</title><path fill="none" stroke="black" d="M189.5,-143.697C189.5,-135.983 189.5,-126.712 189.5,-118.112"/><polygon fill="black" stroke="black" points="193,-118.104 189.5,-108.104 186,-118.104 193,-118.104"/></g><!-- GES.TrackElement --><g id="node5" class="node"><title>GES.TrackElement</title><g id="a_node5"><a xlink:href="#ges.trackelement" xlink:title="GES.TrackElement"><path fill="none" stroke="black" d="M239,-36C239,-36 140,-36 140,-36 134,-36 128,-30 128,-24 128,-24 128,-12 128,-12 128,-6 134,-0 140,-0 140,-0 239,-0 239,-0 245,-0 251,-6 251,-12 251,-12 251,-24 251,-24 251,-30 245,-36 239,-36"/><text text-anchor="middle" x="189.5" y="-14.3" font-family="Times,serif" font-size="14.00">GES.TrackElement</text></a></g></g><!-- GES.TimelineElement&#45;&gt;GES.TrackElement --><g id="edge4" class="edge"><title>GES.TimelineElement&#45;&gt;GES.TrackElement</title><path fill="none" stroke="black" d="M189.5,-71.6966C189.5,-63.9827 189.5,-54.7125 189.5,-46.1124"/><polygon fill="black" stroke="black" points="193,-46.1043 189.5,-36.1043 186,-46.1044 193,-46.1043"/></g><!-- GObject.Object --><g id="node6" class="node"><title>GObject.Object</title><g id="a_node6"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GObject" xlink:title="GObject.Object"><path fill="none" stroke="black" d="M391.5,-252C391.5,-252 313.5,-252 313.5,-252 307.5,-252 301.5,-246 301.5,-240 301.5,-240 301.5,-228 301.5,-228 301.5,-222 307.5,-216 313.5,-216 313.5,-216 391.5,-216 391.5,-216 397.5,-216 403.5,-222 403.5,-228 403.5,-228 403.5,-240 403.5,-240 403.5,-246 397.5,-252 391.5,-252"/><text text-anchor="middle" x="352.5" y="-230.3" font-family="Times,serif" font-size="14.00">GObject.Object</text></a></g></g><!-- GObject.InitiallyUnowned --><g id="node7" class="node"><title>GObject.InitiallyUnowned</title><g id="a_node7"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GInitiallyUnowned" xlink:title="GObject.InitiallyUnowned"><path fill="none" stroke="black" d="M421,-180C421,-180 284,-180 284,-180 278,-180 272,-174 272,-168 272,-168 272,-156 272,-156 272,-150 278,-144 284,-144 284,-144 421,-144 421,-144 427,-144 433,-150 433,-156 433,-156 433,-168 433,-168 433,-174 427,-180 421,-180"/><text text-anchor="middle" x="352.5" y="-158.3" font-family="Times,serif" font-size="14.00">GObject.InitiallyUnowned</text></a></g></g><!-- GObject.Object&#45;&gt;GObject.InitiallyUnowned --><g id="edge6" class="edge"><title>GObject.Object&#45;&gt;GObject.InitiallyUnowned</title><path fill="none" stroke="black" d="M352.5,-215.697C352.5,-207.983 352.5,-198.712 352.5,-190.112"/><polygon fill="black" stroke="black" points="356,-190.104 352.5,-180.104 349,-190.104 356,-190.104"/></g><!-- GObject.InitiallyUnowned&#45;&gt;GES.TimelineElement --><g id="edge7" class="edge"><title>GObject.InitiallyUnowned&#45;&gt;GES.TimelineElement</title><path fill="none" stroke="black" d="M312.626,-143.876C290.343,-134.307 262.385,-122.3 238.744,-112.148"/><polygon fill="black" stroke="black" points="239.814,-108.798 229.245,-108.068 237.052,-115.23 239.814,-108.798"/></g></g></svg></p>

<p><a href="#ges.trackelement">GES.TrackElement</a> is the Base Class for any object that can be contained in a
<a href="#ges.track">GES.Track</a>.</p>

<p>It contains the basic information as to the location of the object within
its container, like the start position, the inpoint, the duration and the
priority.</p>

<p><h3 id='gobject-properties'><u>GObject properties:</u></h3>
<h3 id="ges.trackelement:active">GES.TrackElement:active</h3></p>

<p>Whether the object should be taken into account in the <a href="#ges.track">GES.Track</a> output.
If (FIXME broken link)FALSE, then its contents will not be used in the resulting track.</p>

<h3 id="ges.trackelement:track">GES.TrackElement:track</h3>

<h3 id="ges.trackelement:track-type">GES.TrackElement:track-type</h3>

<h3 id='methods'><u>Methods:</u></h3>

<h3 id="ges.trackelement.add_children_props" c_name="ges_track_element_add_children_props" python_name="GES.TrackElement.add_children_props" shell_name="GES.TrackElement.add_children_props">GES.TrackElement.add_children_props</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_add_children_props</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                           <span class="n">GstElement</span><span class="o">*</span> <span class="n">element</span><span class="p">,</span>
                                           <span class="n">gchar</span><span class="o">**</span> <span class="n">wanted_categories</span><span class="p">,</span>
                                           <span class="n">gchar</span><span class="o">**</span> <span class="n">blacklist</span><span class="p">,</span>
                                           <span class="n">gchar</span><span class="o">**</span> <span class="n">whitelist</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">Element</span><span class="p">,</span> <span class="p">[</span><span class="nb">unicode</span><span class="p">],</span> <span class="p">[</span><span class="nb">unicode</span><span class="p">],</span> <span class="p">[</span><span class="nb">unicode</span><span class="p">])</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_children_props</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">element</span><span class="p">,</span> <span class="n">wanted_categories</span><span class="p">,</span> <span class="n">blacklist</span><span class="p">,</span> <span class="n">whitelist</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_add_children_props()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.trackelement">GES.TrackElement</a> to set chidlren props on</p>

<p><em>element</em>: The GstElement to retrieve properties from</p>

<p><em>wanted_categories</em>: 
An array of categories of GstElement to
take into account (as defined in the factory meta &ldquo;klass&rdquo; field)</p>

<p><em>blacklist</em>: A
blacklist of elements factory names to not take into account</p>

<p><em>whitelist</em>: A list
of propery names to add as children properties</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Looks for the properties defines with the various parametters and add
them to the hashtable of children properties.</p>

<p>To be used by subclasses only</p>

<h3 id="ges.trackelement.edit" c_name="ges_track_element_edit" python_name="GES.TrackElement.edit" shell_name="GES.TrackElement.edit">GES.TrackElement.edit</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_edit</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                 <span class="n">GList</span><span class="o">*</span> <span class="n">layers</span><span class="p">,</span>
                                 <span class="n">GESEditMode</span> <span class="n">mode</span><span class="p">,</span>
                                 <span class="n">GESEdge</span> <span class="n">edge</span><span class="p">,</span>
                                 <span class="n">guint64</span> <span class="n">position</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="p">[</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">],</span> <span class="n">GES</span><span class="o">.</span><span class="n">EditMode</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Edge</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">edit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">layers</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">edge</span><span class="p">,</span> <span class="n">position</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_edit()</span>

</code></pre>

<p><em>object</em>: the <a href="#ges.trackelement">GES.TrackElement</a> to edit</p>

<p><em>layers</em>: The layers you want the edit to
 happen in, <strong>NULL</strong> means that the edition is done in all the
 <a href="#ges.layer">GES.Layers</a> contained in the current timeline.
     FIXME: This is not implemented yet.</p>

<p><em>mode</em>: The <a href="#ges.editmode">GES.EditMode</a> in which the editition will happen.</p>

<p><em>edge</em>: The <a href="#ges.edge">GES.Edge</a> the edit should happen on.</p>

<p><em>position</em>: The position at which to edit <strong>object</strong> (in nanosecond)</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the object as been edited properly, <strong>FALSE</strong> if an error
occured</p>

<p>Edit <strong>object</strong> in the different exisiting <a href="#ges.editmode">GES.EditMode</a> modes. In the case of
slide, and roll, you need to specify a <a href="#ges.edge">GES.Edge</a></p>

<h3 id="ges.trackelement.get_all_control_bindings" c_name="ges_track_element_get_all_control_bindings" python_name="GES.TrackElement.get_all_control_bindings" shell_name="GES.TrackElement.get_all_control_bindings">GES.TrackElement.get_all_control_bindings</h3>
<pre><code class="highlight c"><span class="n">GHashTable</span><span class="o">*</span> <span class="n">ges_track_element_get_all_control_bindings</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">trackelement</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">({</span><span class="nb">unicode</span><span class="p">:</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ControlBinding</span><span class="p">})</span>
<span class="k">def</span> <span class="nf">get_all_control_bindings</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_all_control_bindings()</span>

</code></pre>

<p><em>trackelement</em>: The (FIXME broken link)TrackElement from which to get all set bindings</p>

<p><em>Returns</em>: A
<a href="https://developer.gnome.org/glib/unstable//glib-Hash-Tables.html#GHashTable">GLib.HashTable</a> containing all property_name: GstControlBinding</p>

<h3 id="ges.trackelement.get_child_properties" c_name="ges_track_element_get_child_properties" python_name="GES.TrackElement.get_child_properties" shell_name="GES.TrackElement.get_child_properties">GES.TrackElement.get_child_properties</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_get_child_properties</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                             <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                             <span class="p">...);</span>

</code></pre>

<p><em>object</em>: The origin <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>first_property_name</em>: The name of the first property to get</p>

<p><em>&hellip;</em>: return location for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Gets properties of a child of <strong>object</strong>.</p>

<h3 id="ges.trackelement.get_child_property" c_name="ges_track_element_get_child_property" python_name="GES.TrackElement.get_child_property" shell_name="GES.TrackElement.get_child_property">GES.TrackElement.get_child_property</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_get_child_property</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                               <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">property_name</span><span class="p">,</span>
                                               <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_child_property</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">property_name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_child_property()</span>

</code></pre>

<p><em>object</em>: The origin <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>property_name</em>: The name of the property</p>

<p><em>value</em>: return location for the property value, it will
be initialized if it is initialized with 0</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the property was found, <strong>FALSE</strong> otherwize</p>

<p>In general, a copy is made of the property contents and
the caller is responsible for freeing the memory by calling
<a href="https://developer.gnome.org/gobject/unstable//gobject-Generic-values.html#g-value-unset">g_value_unset</a>.</p>

<p>Gets a property of a GstElement contained in <strong>object</strong>.</p>

<p>Note that (FIXME broken link)ges_track_element_get_child_property is really
intended for language bindings, (FIXME broken link)ges_track_element_get_child_properties
is much more convenient for C programming.</p>

<h3 id="ges.trackelement.get_child_property_by_pspec" c_name="ges_track_element_get_child_property_by_pspec" python_name="GES.TrackElement.get_child_property_by_pspec" shell_name="GES.TrackElement.get_child_property_by_pspec">GES.TrackElement.get_child_property_by_pspec</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_get_child_property_by_pspec</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                                    <span class="n">GParamSpec</span><span class="o">*</span> <span class="n">pspec</span><span class="p">,</span>
                                                    <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_child_property_by_pspec</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pspec</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_child_property_by_pspec()</span>

</code></pre>

<p><em>object</em>: FIXME empty description
<em>pspec</em>: The <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a> that specifies the property you want to get</p>

<p><em>value</em>: return location for the value</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Gets a property of a child of @self.</p>

<h3 id="ges.trackelement.get_child_property_valist" c_name="ges_track_element_get_child_property_valist" python_name="GES.TrackElement.get_child_property_valist" shell_name="GES.TrackElement.get_child_property_valist">GES.TrackElement.get_child_property_valist</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_get_child_property_valist</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                                  <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                                  <span class="kt">va_list</span> <span class="n">var_args</span><span class="p">);</span>

</code></pre>

<p><em>object</em>: The <a href="#ges.trackelement">GES.TrackElement</a> parent object</p>

<p><em>first_property_name</em>: The name of the first property to get</p>

<p><em>var_args</em>: value for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Gets a property of a child of <strong>object</strong>. If there are various child elements
that have the same property name, you can distinguish them using the following
syntax: &lsquo;ClasseName::property_name&rsquo; as property name. If you don&rsquo;t, the
corresponding property of the first element found will be set.</p>

<h3 id="ges.trackelement.get_control_binding" c_name="ges_track_element_get_control_binding" python_name="GES.TrackElement.get_control_binding" shell_name="GES.TrackElement.get_control_binding">GES.TrackElement.get_control_binding</h3>
<pre><code class="highlight c"><span class="n">GstControlBinding</span><span class="o">*</span> <span class="n">ges_track_element_get_control_binding</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                                          <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">property_name</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">ControlBinding</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_control_binding</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">property_name</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_control_binding()</span>

</code></pre>

<p><em>object</em>: the <a href="#ges.trackelement">GES.TrackElement</a> in which to lookup the bindings.</p>

<p><em>property_name</em>: The property_name to which the binding is associated.</p>

<p><em>Returns</em>: the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstControlBinding.html">Gst.ControlBinding</a> associated with <strong>property_name</strong>, or <strong>NULL</strong>
if that property is not controlled.</p>

<p>Looks up the various controlled properties for that <a href="#ges.trackelement">GES.TrackElement</a>,
and returns the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstControlBinding.html">Gst.ControlBinding</a> which controls <strong>property_name</strong>.</p>

<h3 id="ges.trackelement.get_element" c_name="ges_track_element_get_element" python_name="GES.TrackElement.get_element" shell_name="GES.TrackElement.get_element">GES.TrackElement.get_element</h3>
<pre><code class="highlight c"><span class="n">GstElement</span><span class="o">*</span> <span class="n">ges_track_element_get_element</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">Element</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_element</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_element()</span>

</code></pre>

<p><em>object</em>: a <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>Returns</em>: the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> this track element is controlling
within GNonLin.</p>

<p>Get the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> this track element is controlling within GNonLin.</p>

<h3 id="ges.trackelement.get_nleobject" c_name="ges_track_element_get_nleobject" python_name="GES.TrackElement.get_nleobject" shell_name="GES.TrackElement.get_nleobject">GES.TrackElement.get_nleobject</h3>
<pre><code class="highlight c"><span class="n">GstElement</span><span class="o">*</span> <span class="n">ges_track_element_get_nleobject</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">Gst</span><span class="o">.</span><span class="n">Element</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_nleobject</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_nleobject()</span>

</code></pre>

<p><em>object</em>: a <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>Returns</em>: the GNonLin object this object is controlling.</p>

<p>Get the GNonLin object this object is controlling.</p>

<h3 id="ges.trackelement.get_track" c_name="ges_track_element_get_track" python_name="GES.TrackElement.get_track" shell_name="GES.TrackElement.get_track">GES.TrackElement.get_track</h3>
<pre><code class="highlight c"><span class="n">GESTrack</span><span class="o">*</span> <span class="n">ges_track_element_get_track</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_track</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_track()</span>

</code></pre>

<p><em>object</em>: a <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>Returns</em>: The <a href="#ges.track">GES.Track</a> to which this object belongs. Can be <strong>NULL</strong> if it
is not in any track</p>

<p>Get the <a href="#ges.track">GES.Track</a> to which this object belongs.</p>

<h3 id="ges.trackelement.get_track_type" c_name="ges_track_element_get_track_type" python_name="GES.TrackElement.get_track_type" shell_name="GES.TrackElement.get_track_type">GES.TrackElement.get_track_type</h3>
<pre><code class="highlight c"><span class="n">GESTrackType</span> <span class="n">ges_track_element_get_track_type</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackType</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_track_type</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_get_track_type()</span>

</code></pre>

<p><em>object</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.trackelement.is_active" c_name="ges_track_element_is_active" python_name="GES.TrackElement.is_active" shell_name="GES.TrackElement.is_active">GES.TrackElement.is_active</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_is_active</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">is_active</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_is_active()</span>

</code></pre>

<p><em>object</em>: a <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>object</strong> is active, <strong>FALSE</strong> otherwize</p>

<p>Lets you know if <strong>object</strong> will be used for playback and rendering,
or not.</p>

<h3 id="ges.trackelement.list_children_properties" c_name="ges_track_element_list_children_properties" python_name="GES.TrackElement.list_children_properties" shell_name="GES.TrackElement.list_children_properties">GES.TrackElement.list_children_properties</h3>
<pre><code class="highlight c"><span class="n">GParamSpec</span><span class="o">**</span> <span class="n">ges_track_element_list_children_properties</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                                         <span class="n">guint</span><span class="o">*</span> <span class="n">n_properties</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">list_children_properties</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n_properties</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_list_children_properties()</span>

</code></pre>

<p><em>object</em>: The <a href="#ges.trackelement">GES.TrackElement</a> to get the list of children properties from</p>

<p><em>n_properties</em>: return location for the length of the returned array</p>

<p><em>Returns</em>: an array of <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>* which should be freed after use or
<strong>NULL</strong> if something went wrong</p>

<p>Gets an array of <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>* for all configurable properties of the
children of <strong>object</strong>.</p>

<h3 id="ges.trackelement.lookup_child" c_name="ges_track_element_lookup_child" python_name="GES.TrackElement.lookup_child" shell_name="GES.TrackElement.lookup_child">GES.TrackElement.lookup_child</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_lookup_child</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                         <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">prop_name</span><span class="p">,</span>
                                         <span class="n">GstElement</span><span class="o">**</span> <span class="n">element</span><span class="p">,</span>
                                         <span class="n">GParamSpec</span><span class="o">**</span> <span class="n">pspec</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">Element</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">lookup_child</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">prop_name</span><span class="p">,</span> <span class="n">element</span><span class="p">,</span> <span class="n">pspec</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_lookup_child()</span>

</code></pre>

<p><em>object</em>: object to lookup the property in</p>

<p><em>prop_name</em>: name of the property to look up. You can specify the name of the
    class as such: &ldquo;ClassName::property-name&rdquo;, to guarantee that you get the
    proper GParamSpec in case various GstElement-s contain the same property
    name. If you don&rsquo;t do so, you will get the first element found, having
    this property and the and the corresponding GParamSpec.</p>

<p><em>element</em>: pointer to a <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> that
    takes the real object to set property on</p>

<p><em>pspec</em>: pointer to take the <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>
    describing the property</p>

<p><em>Returns</em>: TRUE if <strong>element</strong> and <strong>pspec</strong> could be found. FALSE otherwise. In that
case the values for <strong>pspec</strong> and <strong>element</strong> are not modified. Unref <strong>element</strong> after
usage.</p>

<p>Looks up which <strong>element</strong> and <strong>pspec</strong> would be effected by the given @name. If various
contained elements have this property name you will get the first one, unless you
specify the class name in @name.</p>

<h3 id="ges.trackelement.set_active" c_name="ges_track_element_set_active" python_name="GES.TrackElement.set_active" shell_name="GES.TrackElement.set_active">GES.TrackElement.set_active</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_set_active</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                       <span class="n">gboolean</span> <span class="n">active</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_active</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">active</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_set_active()</span>

</code></pre>

<p><em>object</em>: a <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>active</em>: visibility</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the property was toggled, else <strong>FALSE</strong></p>

<p>Sets the usage of the <strong>object</strong>. If <strong>active</strong> is <strong>TRUE</strong>, the object will be used for
playback and rendering, else it will be ignored.</p>

<h3 id="ges.trackelement.set_child_properties" c_name="ges_track_element_set_child_properties" python_name="GES.TrackElement.set_child_properties" shell_name="GES.TrackElement.set_child_properties">GES.TrackElement.set_child_properties</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_set_child_properties</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                             <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                             <span class="p">...);</span>

</code></pre>

<p><em>object</em>: The <a href="#ges.trackelement">GES.TrackElement</a> parent object</p>

<p><em>first_property_name</em>: The name of the first property to set</p>

<p><em>&hellip;</em>: value for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets a property of a child of <strong>object</strong>. If there are various child elements
that have the same property name, you can distinguish them using the following
syntax: &#39;ClasseName::property_name&rsquo; as property name. If you don&rsquo;t, the
corresponding property of the first element found will be set.</p>

<h3 id="ges.trackelement.set_child_property" c_name="ges_track_element_set_child_property" python_name="GES.TrackElement.set_child_property" shell_name="GES.TrackElement.set_child_property">GES.TrackElement.set_child_property</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_set_child_property</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                               <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">property_name</span><span class="p">,</span>
                                               <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_child_property</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">property_name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_set_child_property()</span>

</code></pre>

<p><em>object</em>: The origin <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>property_name</em>: The name of the property</p>

<p><em>value</em>: the value</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the property was set, <strong>FALSE</strong> otherwize</p>

<p>Sets a property of a GstElement contained in <strong>object</strong>.</p>

<p>Note that (FIXME broken link)ges_track_element_set_child_property is really
intended for language bindings, (FIXME broken link)ges_track_element_set_child_properties
is much more convenient for C programming.</p>

<h3 id="ges.trackelement.set_child_property_by_pspec" c_name="ges_track_element_set_child_property_by_pspec" python_name="GES.TrackElement.set_child_property_by_pspec" shell_name="GES.TrackElement.set_child_property_by_pspec">GES.TrackElement.set_child_property_by_pspec</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_set_child_property_by_pspec</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                                    <span class="n">GParamSpec</span><span class="o">*</span> <span class="n">pspec</span><span class="p">,</span>
                                                    <span class="n">GValue</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">ParamSpec</span><span class="p">,</span> <span class="n">GObject</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_child_property_by_pspec</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pspec</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_set_child_property_by_pspec()</span>

</code></pre>

<p><em>object</em>: a <a href="#ges.trackelement">GES.TrackElement</a></p>

<p><em>pspec</em>: The <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a> that specifies the property you want to set</p>

<p><em>value</em>: the value</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets a property of a child of <strong>object</strong>.</p>

<h3 id="ges.trackelement.set_child_property_valist" c_name="ges_track_element_set_child_property_valist" python_name="GES.TrackElement.set_child_property_valist" shell_name="GES.TrackElement.set_child_property_valist">GES.TrackElement.set_child_property_valist</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_set_child_property_valist</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                                  <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">first_property_name</span><span class="p">,</span>
                                                  <span class="kt">va_list</span> <span class="n">var_args</span><span class="p">);</span>

</code></pre>

<p><em>object</em>: The <a href="#ges.trackelement">GES.TrackElement</a> parent object</p>

<p><em>first_property_name</em>: The name of the first property to set</p>

<p><em>var_args</em>: value for the first property, followed optionally by more
name/return location pairs, followed by NULL</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets a property of a child of <strong>object</strong>. If there are various child elements
that have the same property name, you can distinguish them using the following
syntax: &#39;ClasseName::property_name&rsquo; as property name. If you don&rsquo;t, the
corresponding property of the first element found will be set.</p>

<h3 id="ges.trackelement.set_control_source" c_name="ges_track_element_set_control_source" python_name="GES.TrackElement.set_control_source" shell_name="GES.TrackElement.set_control_source">GES.TrackElement.set_control_source</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_track_element_set_control_source</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                               <span class="n">GstControlSource</span><span class="o">*</span> <span class="n">source</span><span class="p">,</span>
                                               <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">property_name</span><span class="p">,</span>
                                               <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">binding_type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="n">Gst</span><span class="o">.</span><span class="n">ControlSource</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_control_source</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">source</span><span class="p">,</span> <span class="n">property_name</span><span class="p">,</span> <span class="n">binding_type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_set_control_source()</span>

</code></pre>

<p><em>object</em>: the <a href="#ges.trackelement">GES.TrackElement</a> on which to set a control binding</p>

<p><em>source</em>: the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstControlSource.html">Gst.ControlSource</a> to set on the binding.</p>

<p><em>property_name</em>: The name of the property to control.</p>

<p><em>binding_type</em>: The type of binding to create. Only &ldquo;direct&rdquo; is available for now.</p>

<p><em>Returns</em>: <strong>TRUE</strong> if the binding could be created and added, <strong>FALSE</strong> if an error
occured</p>

<p>Creates a <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstControlBinding.html">Gst.ControlBinding</a> and adds it to the <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> concerned by the
property. Use the same syntax as (FIXME broken link)ges_track_element_lookup_child for
the property name.</p>

<h3 id="ges.trackelement.set_track_type" c_name="ges_track_element_set_track_type" python_name="GES.TrackElement.set_track_type" shell_name="GES.TrackElement.set_track_type">GES.TrackElement.set_track_type</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_track_element_set_track_type</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                       <span class="n">GESTrackType</span> <span class="n">type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TrackType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_track_type</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_track_element_set_track_type()</span>

</code></pre>

<p><em>object</em>: FIXME empty description
<em>type</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id='vfuncs'><u>Virtual Methods:</u></h3>

<h3 id="ges.trackelement.do_list_children_properties" c_name="ges_track_element_do_list_children_properties" python_name="GES.TrackElement.do_list_children_properties" shell_name="GES.TrackElement.do_list_children_properties">GES.TrackElement.do_list_children_properties</h3>
<pre><code class="highlight c"><span class="n">GParamSpec</span><span class="o">**</span> <span class="n">GESTrackElementClass</span><span class="o">-&gt;</span><span class="n">list_children_properties</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                                             <span class="n">guint</span><span class="o">*</span> <span class="n">n_properties</span><span class="p">);</span>


</code></pre>

<p><em>object</em>: FIXME empty description
<em>n_properties</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.trackelement.do_create_element" c_name="ges_track_element_do_create_element" python_name="GES.TrackElement.do_create_element" shell_name="GES.TrackElement.do_create_element">GES.TrackElement.do_create_element</h3>
<pre><code class="highlight c"><span class="n">GstElement</span><span class="o">*</span> <span class="n">GESTrackElementClass</span><span class="o">-&gt;</span><span class="n">create_element</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>


</code></pre>

<p><em>object</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.trackelement.do_lookup_child" c_name="ges_track_element_do_lookup_child" python_name="GES.TrackElement.do_lookup_child" shell_name="GES.TrackElement.do_lookup_child">GES.TrackElement.do_lookup_child</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">GESTrackElementClass</span><span class="o">-&gt;</span><span class="n">lookup_child</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                             <span class="k">const</span> <span class="n">gchar</span><span class="o">*</span> <span class="n">prop_name</span><span class="p">,</span>
                             <span class="n">GstElement</span><span class="o">**</span> <span class="n">element</span><span class="p">,</span>
                             <span class="n">GParamSpec</span><span class="o">**</span> <span class="n">pspec</span><span class="p">);</span>


</code></pre>

<p><em>object</em>: object to lookup the property in</p>

<p><em>prop_name</em>: name of the property to look up. You can specify the name of the
    class as such: &ldquo;ClassName::property-name&rdquo;, to guarantee that you get the
    proper GParamSpec in case various GstElement-s contain the same property
    name. If you don&rsquo;t do so, you will get the first element found, having
    this property and the and the corresponding GParamSpec.</p>

<p><em>element</em>: pointer to a <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstElement.html">Gst.Element</a> that
    takes the real object to set property on</p>

<p><em>pspec</em>: pointer to take the <a href="https://developer.gnome.org/gobject/unstable//gobject-GParamSpec.html#GParamSpec">GObject.ParamSpec</a>
    describing the property</p>

<p><em>Returns</em>: TRUE if <strong>element</strong> and <strong>pspec</strong> could be found. FALSE otherwise. In that
case the values for <strong>pspec</strong> and <strong>element</strong> are not modified. Unref <strong>element</strong> after
usage.</p>

<p>Looks up which <strong>element</strong> and <strong>pspec</strong> would be effected by the given @name. If various
contained elements have this property name you will get the first one, unless you
specify the class name in @name.</p>

<h3 id="ges.trackelement.do_changed" c_name="ges_track_element_do_changed" python_name="GES.TrackElement.do_changed" shell_name="GES.TrackElement.do_changed">GES.TrackElement.do_changed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTrackElementClass</span><span class="o">-&gt;</span><span class="n">changed</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>


</code></pre>

<p><em>object</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.trackelement.do_active_changed" c_name="ges_track_element_do_active_changed" python_name="GES.TrackElement.do_active_changed" shell_name="GES.TrackElement.do_active_changed">GES.TrackElement.do_active_changed</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">GESTrackElementClass</span><span class="o">-&gt;</span><span class="n">active_changed</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">,</span>
                           <span class="n">gboolean</span> <span class="n">active</span><span class="p">);</span>


</code></pre>

<p><em>object</em>: FIXME empty description
<em>active</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.trackelement.do_create_nle_object" c_name="ges_track_element_do_create_nle_object" python_name="GES.TrackElement.do_create_nle_object" shell_name="GES.TrackElement.do_create_nle_object">GES.TrackElement.do_create_nle_object</h3>
<pre><code class="highlight c"><span class="n">GstElement</span><span class="o">*</span> <span class="n">GESTrackElementClass</span><span class="o">-&gt;</span><span class="n">create_nle_object</span> <span class="p">(</span><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">object</span><span class="p">);</span>


</code></pre>

<p><em>object</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
