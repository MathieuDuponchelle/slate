<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.clip" c_name="GESClip" python_name="GES.Clip" shell_name="The Clip">GES.Clip</h2>

<p class="graphviz">
<!-- Generated by graphviz version 2.38.0 (20140413.2041) --><!-- Title: %3 Pages: 1 --><svg width="441pt" height="332pt" viewBox="0.00 0.00 441.00 332.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 328)"><title>%3</title><polygon fill="white" stroke="none" points="-4,4 -4,-328 437,-328 437,4 -4,4"/><!-- GObject.GInterface --><g id="node1" class="node"><title>GObject.GInterface</title><g id="a_node1"><a xlink:href="#index" xlink:title="GObject.GInterface"><path fill="none" stroke="black" d="M171.5,-324C171.5,-324 71.5,-324 71.5,-324 65.5,-324 59.5,-318 59.5,-312 59.5,-312 59.5,-300 59.5,-300 59.5,-294 65.5,-288 71.5,-288 71.5,-288 171.5,-288 171.5,-288 177.5,-288 183.5,-294 183.5,-300 183.5,-300 183.5,-312 183.5,-312 183.5,-318 177.5,-324 171.5,-324"/><text text-anchor="middle" x="121.5" y="-302.3" font-family="Times,serif" font-size="14.00">GObject.GInterface</text></a></g></g><!-- GES.Extractable --><g id="node2" class="node"><title>GES.Extractable</title><g id="a_node2"><a xlink:href="#ges.extractable" xlink:title="GES.Extractable"><path fill="none" stroke="black" d="M95,-252C95,-252 12,-252 12,-252 6,-252 -7.10543e-15,-246 -7.10543e-15,-240 -7.10543e-15,-240 -7.10543e-15,-228 -7.10543e-15,-228 -7.10543e-15,-222 6,-216 12,-216 12,-216 95,-216 95,-216 101,-216 107,-222 107,-228 107,-228 107,-240 107,-240 107,-246 101,-252 95,-252"/><text text-anchor="middle" x="53.5" y="-230.3" font-family="Times,serif" font-size="14.00">GES.Extractable</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.Extractable --><g id="edge1" class="edge"><title>GObject.GInterface&#45;&gt;GES.Extractable</title><path fill="none" stroke="black" d="M104.691,-287.697C96.374,-279.135 86.1946,-268.656 77.1101,-259.304"/><polygon fill="black" stroke="black" points="79.594,-256.838 70.1156,-252.104 74.573,-261.716 79.594,-256.838"/></g><!-- GES.MetaContainer --><g id="node3" class="node"><title>GES.MetaContainer</title><g id="a_node3"><a xlink:href="#ges.metacontainer" xlink:title="GES.MetaContainer"><path fill="none" stroke="black" d="M241.5,-252C241.5,-252 137.5,-252 137.5,-252 131.5,-252 125.5,-246 125.5,-240 125.5,-240 125.5,-228 125.5,-228 125.5,-222 131.5,-216 137.5,-216 137.5,-216 241.5,-216 241.5,-216 247.5,-216 253.5,-222 253.5,-228 253.5,-228 253.5,-240 253.5,-240 253.5,-246 247.5,-252 241.5,-252"/><text text-anchor="middle" x="189.5" y="-230.3" font-family="Times,serif" font-size="14.00">GES.MetaContainer</text></a></g></g><!-- GObject.GInterface&#45;&gt;GES.MetaContainer --><g id="edge2" class="edge"><title>GObject.GInterface&#45;&gt;GES.MetaContainer</title><path fill="none" stroke="black" d="M138.309,-287.697C146.626,-279.135 156.805,-268.656 165.89,-259.304"/><polygon fill="black" stroke="black" points="168.427,-261.716 172.884,-252.104 163.406,-256.838 168.427,-261.716"/></g><!-- GES.TimelineElement --><g id="node4" class="node"><title>GES.TimelineElement</title><g id="a_node4"><a xlink:href="#ges.timelineelement" xlink:title="GES.TimelineElement"><path fill="none" stroke="black" d="M248,-180C248,-180 131,-180 131,-180 125,-180 119,-174 119,-168 119,-168 119,-156 119,-156 119,-150 125,-144 131,-144 131,-144 248,-144 248,-144 254,-144 260,-150 260,-156 260,-156 260,-168 260,-168 260,-174 254,-180 248,-180"/><text text-anchor="middle" x="189.5" y="-158.3" font-family="Times,serif" font-size="14.00">GES.TimelineElement</text></a></g></g><!-- GES.Extractable&#45;&gt;GES.TimelineElement --><g id="edge3" class="edge"><title>GES.Extractable&#45;&gt;GES.TimelineElement</title><path fill="none" stroke="black" d="M86.7693,-215.876C104.963,-206.512 127.691,-194.814 147.14,-184.803"/><polygon fill="black" stroke="black" points="148.813,-187.878 156.103,-180.19 145.61,-181.654 148.813,-187.878"/></g><!-- GES.MetaContainer&#45;&gt;GES.TimelineElement --><g id="edge6" class="edge"><title>GES.MetaContainer&#45;&gt;GES.TimelineElement</title><path fill="none" stroke="black" d="M189.5,-215.697C189.5,-207.983 189.5,-198.712 189.5,-190.112"/><polygon fill="black" stroke="black" points="193,-190.104 189.5,-180.104 186,-190.104 193,-190.104"/></g><!-- GES.Container --><g id="node5" class="node"><title>GES.Container</title><g id="a_node5"><a xlink:href="#ges.container" xlink:title="GES.Container"><path fill="none" stroke="black" d="M227,-108C227,-108 152,-108 152,-108 146,-108 140,-102 140,-96 140,-96 140,-84 140,-84 140,-78 146,-72 152,-72 152,-72 227,-72 227,-72 233,-72 239,-78 239,-84 239,-84 239,-96 239,-96 239,-102 233,-108 227,-108"/><text text-anchor="middle" x="189.5" y="-86.3" font-family="Times,serif" font-size="14.00">GES.Container</text></a></g></g><!-- GES.TimelineElement&#45;&gt;GES.Container --><g id="edge4" class="edge"><title>GES.TimelineElement&#45;&gt;GES.Container</title><path fill="none" stroke="black" d="M189.5,-143.697C189.5,-135.983 189.5,-126.712 189.5,-118.112"/><polygon fill="black" stroke="black" points="193,-118.104 189.5,-108.104 186,-118.104 193,-118.104"/></g><!-- GES.Clip --><g id="node6" class="node"><title>GES.Clip</title><g id="a_node6"><a xlink:href="#ges.clip" xlink:title="GES.Clip"><path fill="none" stroke="black" d="M212,-36C212,-36 167,-36 167,-36 161,-36 155,-30 155,-24 155,-24 155,-12 155,-12 155,-6 161,-0 167,-0 167,-0 212,-0 212,-0 218,-0 224,-6 224,-12 224,-12 224,-24 224,-24 224,-30 218,-36 212,-36"/><text text-anchor="middle" x="189.5" y="-14.3" font-family="Times,serif" font-size="14.00">GES.Clip</text></a></g></g><!-- GES.Container&#45;&gt;GES.Clip --><g id="edge5" class="edge"><title>GES.Container&#45;&gt;GES.Clip</title><path fill="none" stroke="black" d="M189.5,-71.6966C189.5,-63.9827 189.5,-54.7125 189.5,-46.1124"/><polygon fill="black" stroke="black" points="193,-46.1043 189.5,-36.1043 186,-46.1044 193,-46.1043"/></g><!-- GObject.Object --><g id="node7" class="node"><title>GObject.Object</title><g id="a_node7"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GObject" xlink:title="GObject.Object"><path fill="none" stroke="black" d="M391.5,-324C391.5,-324 313.5,-324 313.5,-324 307.5,-324 301.5,-318 301.5,-312 301.5,-312 301.5,-300 301.5,-300 301.5,-294 307.5,-288 313.5,-288 313.5,-288 391.5,-288 391.5,-288 397.5,-288 403.5,-294 403.5,-300 403.5,-300 403.5,-312 403.5,-312 403.5,-318 397.5,-324 391.5,-324"/><text text-anchor="middle" x="352.5" y="-302.3" font-family="Times,serif" font-size="14.00">GObject.Object</text></a></g></g><!-- GObject.InitiallyUnowned --><g id="node8" class="node"><title>GObject.InitiallyUnowned</title><g id="a_node8"><a xlink:href="https://developer.gnome.org/gobject/unstable//gobject-The-Base-Object-Type.html#GInitiallyUnowned" xlink:title="GObject.InitiallyUnowned"><path fill="none" stroke="black" d="M421,-252C421,-252 284,-252 284,-252 278,-252 272,-246 272,-240 272,-240 272,-228 272,-228 272,-222 278,-216 284,-216 284,-216 421,-216 421,-216 427,-216 433,-222 433,-228 433,-228 433,-240 433,-240 433,-246 427,-252 421,-252"/><text text-anchor="middle" x="352.5" y="-230.3" font-family="Times,serif" font-size="14.00">GObject.InitiallyUnowned</text></a></g></g><!-- GObject.Object&#45;&gt;GObject.InitiallyUnowned --><g id="edge7" class="edge"><title>GObject.Object&#45;&gt;GObject.InitiallyUnowned</title><path fill="none" stroke="black" d="M352.5,-287.697C352.5,-279.983 352.5,-270.712 352.5,-262.112"/><polygon fill="black" stroke="black" points="356,-262.104 352.5,-252.104 349,-262.104 356,-262.104"/></g><!-- GObject.InitiallyUnowned&#45;&gt;GES.TimelineElement --><g id="edge8" class="edge"><title>GObject.InitiallyUnowned&#45;&gt;GES.TimelineElement</title><path fill="none" stroke="black" d="M312.626,-215.876C290.343,-206.307 262.385,-194.3 238.744,-184.148"/><polygon fill="black" stroke="black" points="239.814,-180.798 229.245,-180.068 237.052,-187.23 239.814,-180.798"/></g></g></svg></p>

<p>A <a href="#ges.clip">GES.Clip</a> is a &lsquo;natural&rsquo; object which controls one or more
<a href="#ges.trackelement">GES.TrackElement</a>(s) in one or more <a href="#ges.track">GES.Track</a>(s).</p>

<p>Keeps a reference to the <a href="#ges.trackelement">GES.TrackElement</a>(s) it created and
sets/updates their properties.</p>

<p><h3 id='gobject-properties'><u>GObject properties:</u></h3>
<h3 id="ges.clip:layer">GES.Clip:layer</h3></p>

<p>The GESLayer where this clip is being used. If you want to connect to its
notify signal you should connect to it with g_signal_connect_after as the
signal emission can be stop in the first fase.</p>

<h3 id="ges.clip:supported-formats">GES.Clip:supported-formats</h3>

<p>The formats supported by the clip.</p>

<h3 id='methods'><u>Methods:</u></h3>

<h3 id="ges.clip.add_asset" c_name="ges_clip_add_asset" python_name="GES.Clip.add_asset" shell_name="GES.Clip.add_asset">GES.Clip.add_asset</h3>
<pre><code class="highlight c"><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">ges_clip_add_asset</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                     <span class="n">GESAsset</span><span class="o">*</span> <span class="n">asset</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Asset</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">add_asset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">asset</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_add_asset()</span>

</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>asset</em>: a <a href="#ges.asset">GES.Asset</a> with (FIXME broken link)GES_TYPE_TRACK_ELEMENT as extractable_type</p>

<p><em>Returns</em>: Created <a href="#ges.trackelement">GES.TrackElement</a> or NULL
if an error happened</p>

<p>Extracts a <a href="#ges.trackelement">GES.TrackElement</a> from <strong>asset</strong> and adds it to the <strong>clip</strong>.
Should only be called in order to add operations to a <a href="#ges.clip">GES.Clip</a>,
ni other cases TrackElement are added automatically when adding the
<a href="#ges.clip">GES.Clip</a>/<a href="#ges.asset">GES.Asset</a> to a layer.</p>

<p>Takes a reference on @track_element.</p>

<h3 id="ges.clip.find_track_element" c_name="ges_clip_find_track_element" python_name="GES.Clip.find_track_element" shell_name="GES.Clip.find_track_element">GES.Clip.find_track_element</h3>
<pre><code class="highlight c"><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">ges_clip_find_track_element</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                              <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                              <span class="n">GType</span> <span class="n">type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">find_track_element</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">track</span><span class="p">,</span> <span class="nb">type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_find_track_element()</span>

</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a> or NULL</p>

<p><em>type</em>: a <a href="FIXME%20broken%20link%20to%20Type">GLib.Type</a> indicating the type of track element you are looking
for or %G_TYPE_NONE if you do not care about the track type.</p>

<p><em>Returns</em>: The <a href="#ges.trackelement">GES.TrackElement</a> used by <strong>track</strong>, else <strong>NULL</strong>,
Unref after usage</p>

<p>Finds the <a href="#ges.trackelement">GES.TrackElement</a> controlled by <strong>clip</strong> that is used in <strong>track</strong>. You
may optionally specify a GType to further narrow search criteria.</p>

<p>Note: If many objects match, then the one with the highest priority will be
returned.</p>

<h3 id="ges.clip.find_track_elements" c_name="ges_clip_find_track_elements" python_name="GES.Clip.find_track_elements" shell_name="GES.Clip.find_track_elements">GES.Clip.find_track_elements</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_clip_find_track_elements</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                     <span class="n">GESTrack</span><span class="o">*</span> <span class="n">track</span><span class="p">,</span>
                                     <span class="n">GESTrackType</span> <span class="n">track_type</span><span class="p">,</span>
                                     <span class="n">GType</span> <span class="n">type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Track</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TrackType</span><span class="p">,</span> <span class="n">GType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">find_track_elements</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">track</span><span class="p">,</span> <span class="n">track_type</span><span class="p">,</span> <span class="nb">type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_find_track_elements()</span>

</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>track</em>: a <a href="#ges.track">GES.Track</a> or NULL</p>

<p><em>track_type</em>: a <a href="#ges.tracktype">GES.TrackType</a> indicating the type of tracks in which elements
should be searched.</p>

<p><em>type</em>: a <a href="FIXME%20broken%20link%20to%20Type">GLib.Type</a> indicating the type of track element you are looking
for or %G_TYPE_NONE if you do not care about the track type.</p>

<p><em>Returns</em>: a <a href="https://developer.gnome.org/glib/unstable//glib-Doubly-Linked-Lists.html#GList">GLib.List</a> of the
<a href="#ges.trackelement">GES.TrackElement</a> contained in <strong>clip</strong>.
The refcount of the objects will be increased. The user will have to
unref each <a href="#ges.trackelement">GES.TrackElement</a> and free the <a href="https://developer.gnome.org/glib/unstable//glib-Doubly-Linked-Lists.html#GList">GLib.List</a>.</p>

<p>Finds all the <a href="#ges.trackelement">GES.TrackElement</a> controlled by <strong>clip</strong> that is used in <strong>track</strong>. You
may optionally specify a GType to further narrow search criteria.</p>

<h3 id="ges.clip.get_layer" c_name="ges_clip_get_layer" python_name="GES.Clip.get_layer" shell_name="GES.Clip.get_layer">GES.Clip.get_layer</h3>
<pre><code class="highlight c"><span class="n">GESLayer</span><span class="o">*</span> <span class="n">ges_clip_get_layer</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_layer</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_get_layer()</span>

</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>Returns</em>: The <a href="#ges.layer">GES.Layer</a> where this <strong>clip</strong> is being
used, or <strong>NULL</strong> if it is not used on any layer. The caller should unref it
usage.</p>

<p>Get the <a href="#ges.layer">GES.Layer</a> to which this clip belongs.</p>

<h3 id="ges.clip.get_supported_formats" c_name="ges_clip_get_supported_formats" python_name="GES.Clip.get_supported_formats" shell_name="GES.Clip.get_supported_formats">GES.Clip.get_supported_formats</h3>
<pre><code class="highlight c"><span class="n">GESTrackType</span> <span class="n">ges_clip_get_supported_formats</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackType</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_supported_formats</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_get_supported_formats()</span>

</code></pre>

<p><em>clip</em>: the <a href="#ges.clip">GES.Clip</a></p>

<p><em>Returns</em>: The formats supported by <strong>clip</strong>.</p>

<p>Get the formats supported by <strong>clip</strong>.</p>

<h3 id="ges.clip.get_top_effect_index" c_name="ges_clip_get_top_effect_index" python_name="GES.Clip.get_top_effect_index" shell_name="GES.Clip.get_top_effect_index">GES.Clip.get_top_effect_index</h3>
<pre><code class="highlight c"><span class="n">gint</span> <span class="n">ges_clip_get_top_effect_index</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                    <span class="n">GESBaseEffect</span><span class="o">*</span> <span class="n">effect</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">BaseEffect</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_top_effect_index</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">effect</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_get_top_effect_index()</span>

</code></pre>

<p><em>clip</em>: The origin <a href="#ges.clip">GES.Clip</a></p>

<p><em>effect</em>: The <a href="#ges.baseeffect">GES.BaseEffect</a> we want to get the top index from</p>

<p><em>Returns</em>: The top index of the effect, -1 if something went wrong.</p>

<p>Gets the index position of an effect.</p>

<h3 id="ges.clip.get_top_effect_position" c_name="ges_clip_get_top_effect_position" python_name="GES.Clip.get_top_effect_position" shell_name="GES.Clip.get_top_effect_position">GES.Clip.get_top_effect_position</h3>
<pre><code class="highlight c"><span class="n">gint</span> <span class="n">ges_clip_get_top_effect_position</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                       <span class="n">GESBaseEffect</span><span class="o">*</span> <span class="n">effect</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">BaseEffect</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_top_effect_position</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">effect</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_get_top_effect_position()</span>

</code></pre>

<p><em>clip</em>: FIXME empty description
<em>effect</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.clip.get_top_effects" c_name="ges_clip_get_top_effects" python_name="GES.Clip.get_top_effects" shell_name="GES.Clip.get_top_effects">GES.Clip.get_top_effects</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">ges_clip_get_top_effects</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">([</span><span class="n">GES</span><span class="o">.</span><span class="n">TrackElement</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">get_top_effects</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_get_top_effects()</span>

</code></pre>

<p><em>clip</em>: The origin <a href="#ges.clip">GES.Clip</a></p>

<p><em>Returns</em>: a <a href="https://developer.gnome.org/glib/unstable//glib-Doubly-Linked-Lists.html#GList">GLib.List</a> of the
<a href="#ges.baseeffect">GES.BaseEffect</a> that are applied on <strong>clip</strong> order by ascendant priorities.
The refcount of the objects will be increased. The user will have to
unref each <a href="#ges.baseeffect">GES.BaseEffect</a> and free the <a href="https://developer.gnome.org/glib/unstable//glib-Doubly-Linked-Lists.html#GList">GLib.List</a>.</p>

<p>Get effects applied on <strong>clip</strong></p>

<h3 id="ges.clip.move_to_layer" c_name="ges_clip_move_to_layer" python_name="GES.Clip.move_to_layer" shell_name="GES.Clip.move_to_layer">GES.Clip.move_to_layer</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_clip_move_to_layer</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                 <span class="n">GESLayer</span><span class="o">*</span> <span class="n">layer</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">Layer</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">move_to_layer</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">layer</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_move_to_layer()</span>

</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>layer</em>: the new <a href="#ges.layer">GES.Layer</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>clip</strong> could be moved <strong>FALSE</strong> otherwize</p>

<p>Moves <strong>clip</strong> to <strong>layer</strong>. If <strong>clip</strong> is not in any layer, it adds it to
<strong>layer</strong>, else, it removes it from its current layer, and adds it to <strong>layer</strong>.</p>

<h3 id="ges.clip.set_supported_formats" c_name="ges_clip_set_supported_formats" python_name="GES.Clip.set_supported_formats" shell_name="GES.Clip.set_supported_formats">GES.Clip.set_supported_formats</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_clip_set_supported_formats</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                     <span class="n">GESTrackType</span> <span class="n">supportedformats</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">TrackType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_supported_formats</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">supportedformats</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_set_supported_formats()</span>

</code></pre>

<p><em>clip</em>: the <a href="#ges.clip">GES.Clip</a> to set supported formats on</p>

<p><em>supportedformats</em>: the <a href="#ges.tracktype">GES.TrackType</a> defining formats supported by <strong>clip</strong></p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Sets the formats supported by the file.</p>

<h3 id="ges.clip.set_top_effect_index" c_name="ges_clip_set_top_effect_index" python_name="GES.Clip.set_top_effect_index" shell_name="GES.Clip.set_top_effect_index">GES.Clip.set_top_effect_index</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_clip_set_top_effect_index</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                        <span class="n">GESBaseEffect</span><span class="o">*</span> <span class="n">effect</span><span class="p">,</span>
                                        <span class="n">guint</span> <span class="n">newindex</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">BaseEffect</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_top_effect_index</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">effect</span><span class="p">,</span> <span class="n">newindex</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_set_top_effect_index()</span>

</code></pre>

<p><em>clip</em>: The origin <a href="#ges.clip">GES.Clip</a></p>

<p><em>effect</em>: The <a href="#ges.baseeffect">GES.BaseEffect</a> to move</p>

<p><em>newindex</em>: the new index at which to move the <strong>effect</strong> inside this
<a href="#ges.clip">GES.Clip</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if <strong>effect</strong> was successfuly moved, <strong>FALSE</strong> otherwise.</p>

<p>This is a convenience method that lets you set the index of a top effect.</p>

<h3 id="ges.clip.set_top_effect_priority" c_name="ges_clip_set_top_effect_priority" python_name="GES.Clip.set_top_effect_priority" shell_name="GES.Clip.set_top_effect_priority">GES.Clip.set_top_effect_priority</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_clip_set_top_effect_priority</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                           <span class="n">GESBaseEffect</span><span class="o">*</span> <span class="n">effect</span><span class="p">,</span>
                                           <span class="n">guint</span> <span class="n">newpriority</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">BaseEffect</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_top_effect_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">effect</span><span class="p">,</span> <span class="n">newpriority</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_set_top_effect_priority()</span>

</code></pre>

<p><em>clip</em>: FIXME empty description
<em>effect</em>: FIXME empty description
<em>newpriority</em>: FIXME empty description
<em>Returns</em>: FIXME empty description</p>

<h3 id="ges.clip.split" c_name="ges_clip_split" python_name="GES.Clip.split" shell_name="GES.Clip.split">GES.Clip.split</h3>
<pre><code class="highlight c"><span class="n">GESClip</span><span class="o">*</span> <span class="n">ges_clip_split</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                         <span class="n">guint64</span> <span class="n">position</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">Clip</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">split</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">position</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_clip_split()</span>

</code></pre>

<p><em>clip</em>: the <a href="#ges.clip">GES.Clip</a> to split</p>

<p><em>position</em>: a <a href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html//GstClock.html#GstClockTime">Gst.ClockTime</a> representing the position at which to split</p>

<p><em>Returns</em>: The newly created <a href="#ges.clip">GES.Clip</a> resulting from the
splitting</p>

<p>The function modifies <strong>clip</strong>, and creates another <a href="#ges.clip">GES.Clip</a> so
we have two clips at the end, splitted at the time specified by <strong>position</strong>.
The newly created clip will be added to the same layer as <strong>clip</strong> is in.
This implies that <strong>clip</strong> must be in a <a href="#ges.layer">GES.Layer</a> for the operation to
be possible.</p>

<h3 id='vfuncs'><u>Virtual Methods:</u></h3>

<h3 id="ges.clip.do_create_track_element" c_name="ges_clip_do_create_track_element" python_name="GES.Clip.do_create_track_element" shell_name="GES.Clip.do_create_track_element">GES.Clip.do_create_track_element</h3>
<pre><code class="highlight c"><span class="n">GESTrackElement</span><span class="o">*</span> <span class="n">GESClipClass</span><span class="o">-&gt;</span><span class="n">create_track_element</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                             <span class="n">GESTrackType</span> <span class="n">type</span><span class="p">);</span>


</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>type</em>: a <a href="#ges.tracktype">GES.TrackType</a></p>

<p><em>Returns</em>: the <a href="#ges.trackelement">GES.TrackElement</a> to be used, or <strong>NULL</strong> if it can&rsquo;t provide one
for the given @track.</p>

<h3 id="ges.clip.do_create_track_elements" c_name="ges_clip_do_create_track_elements" python_name="GES.Clip.do_create_track_elements" shell_name="GES.Clip.do_create_track_elements">GES.Clip.do_create_track_elements</h3>
<pre><code class="highlight c"><span class="n">GList</span><span class="o">*</span> <span class="n">GESClipClass</span><span class="o">-&gt;</span><span class="n">create_track_elements</span> <span class="p">(</span><span class="n">GESClip</span><span class="o">*</span> <span class="n">clip</span><span class="p">,</span>
                                    <span class="n">GESTrackType</span> <span class="n">type</span><span class="p">);</span>


</code></pre>

<p><em>clip</em>: a <a href="#ges.clip">GES.Clip</a></p>

<p><em>type</em>: a <a href="#ges.tracktype">GES.TrackType</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> on success <strong>FALSE</strong> on failure.</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
