<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>API Documentation</title>

    <link href="../stylesheets/screen.css" rel="stylesheet" type="text/css" media="screen" />
    <link href="../stylesheets/print.css" rel="stylesheet" type="text/css" media="print" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
      <script src="../javascripts/all_nosearch.js" type="text/javascript"></script>

  </head>

  <body class="includes includes_GES">
    <a href="#" id="nav-button">
      <span>
        NAV
        <img src="../images/navbar.png" />
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="../images/logo.png" />
      <div id="toc">
      </div>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <h2 id="ges.videotransition">GES.VideoTransition</h2>

<h3 id="ges.videotransition.set_border">GES.VideoTransition.set_border</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_video_transition_set_border</span> <span class="p">(</span><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                      <span class="n">guint</span> <span class="n">value</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTransition</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_border</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_video_transition_set_border()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.videotransition">GES.VideoTransition</a> to set the border to</p>

<p><em>value</em>: The value of the border to set on @object</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Set the border property of <strong>self</strong>, this value represents
the border width of the transition. In case this value does
not make sense for the current transition type, it is cached
for later use.</p>

<h3 id="ges.videotransition.is_inverted">GES.VideoTransition.is_inverted</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_video_transition_is_inverted</span> <span class="p">(</span><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTransition</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">is_inverted</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_video_transition_is_inverted()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.videotransition">GES.VideoTransition</a> to get the inversion from</p>

<p><em>Returns</em>: The invert value of <strong>self</strong></p>

<p>Get the invert property of <strong>self</strong>, this value represents
the direction of the transition.</p>

<h3 id="ges.videotransition.set_transition_type">GES.VideoTransition.set_transition_type</h3>
<pre><code class="highlight c"><span class="n">gboolean</span> <span class="n">ges_video_transition_set_transition_type</span> <span class="p">(</span><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                                   <span class="n">GESVideoStandardTransitionType</span> <span class="n">type</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTransition</span><span class="p">,</span> <span class="n">GES</span><span class="o">.</span><span class="n">VideoStandardTransitionType</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_transition_type</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">type</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_video_transition_set_transition_type()</span>

</code></pre>

<p><em>self</em>: a <a href="#ges.videotransition">GES.VideoTransition</a></p>

<p><em>type</em>: a <a href="#ges.videostandardtransitiontype">GES.VideoStandardTransitionType</a></p>

<p><em>Returns</em>: <strong>TRUE</strong> if the transition type was properly changed, else <strong>FALSE</strong>.</p>

<p>Sets the transition being used to <strong>type</strong>.</p>

<h3 id="ges.videotransition.get_border">GES.VideoTransition.get_border</h3>
<pre><code class="highlight c"><span class="n">gint</span> <span class="n">ges_video_transition_get_border</span> <span class="p">(</span><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">self</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTransition</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_border</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_video_transition_get_border()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.videotransition">GES.VideoTransition</a> to get the border from</p>

<p><em>Returns</em>: The border values of <strong>self</strong> or -1 if not meaningful
(this will happen when not using a smpte transition).</p>

<p>Get the border property of <strong>self</strong>, this value represents
the border width of the transition.</p>

<h3 id="ges.videotransition.new">GES.VideoTransition.new</h3>
<pre><code class="highlight c"><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">ges_video_transition_new</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

</code></pre>

<p><em>Returns</em>: The newly created <a href="#ges.videotransition">GES.VideoTransition</a>, or <strong>NULL</strong> if there was an
error.</p>

<p>Creates a new <a href="#ges.videotransition">GES.VideoTransition</a>.</p>

<h3 id="ges.videotransition.set_inverted">GES.VideoTransition.set_inverted</h3>
<pre><code class="highlight c"><span class="kt">void</span> <span class="n">ges_video_transition_set_inverted</span> <span class="p">(</span><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">self</span><span class="p">,</span>
                                        <span class="n">gboolean</span> <span class="n">inverted</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTransition</span><span class="p">,</span> <span class="nb">bool</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">none</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">set_inverted</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">inverted</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_video_transition_set_inverted()</span>

</code></pre>

<p><em>self</em>: The <a href="#ges.videotransition">GES.VideoTransition</a> to set invert on</p>

<p><em>inverted</em>: <strong>TRUE</strong> if the transition should be inverted <strong>FALSE</strong> otherwise</p>

<p><em>Returns</em>: FIXME empty description</p>

<p>Set the invert property of <strong>self</strong>, this value represents
the direction of the transition. In case this value does
not make sense for the current transition type, it is cached
for later use.</p>

<h3 id="ges.videotransition.get_transition_type">GES.VideoTransition.get_transition_type</h3>
<pre><code class="highlight c"><span class="n">GESVideoStandardTransitionType</span> <span class="n">ges_video_transition_get_transition_type</span> <span class="p">(</span><span class="n">GESVideoTransition</span><span class="o">*</span> <span class="n">trans</span><span class="p">);</span>

</code></pre>
<pre><code class="highlight python"><span class="nd">@accepts</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoTransition</span><span class="p">)</span>
<span class="nd">@returns</span><span class="p">(</span><span class="n">GES</span><span class="o">.</span><span class="n">VideoStandardTransitionType</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_transition_type</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="c"># Python wrapper for ges_video_transition_get_transition_type()</span>

</code></pre>

<p><em>trans</em>: a <a href="#ges.videotransition">GES.VideoTransition</a></p>

<p><em>Returns</em>: The transition type used by <strong>trans</strong>.</p>

<p>Get the transition type used by <strong>trans</strong>.</p>

      </div>
      <div class="dark-box">
      </div>
    </div>
  </body>
</html>
